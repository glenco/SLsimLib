SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.54948038535829 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17539800988936 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5278 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5679. / min(X) in image pixels                         XMAX    =                5737. / max(X) in image pixels                         YMIN    =                5354. / min(Y) in image pixels                         YMAX    =                5412. / min(Y) in image pixels                         CENTROID=   (5706.93, 5380.87) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5278 found in the area (5693/5366) to (5722/5399)   HISTORY # Extending the area around object to (5679/5354) to (5737/5412)        HISTORY # Object 8026 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.248738, Centroid = (5706.93/5380.87) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 2.207, f(beta) = 1.237, f(b) = 1.609          HISTORY # after bracketing: f(a) = 2.207, f(beta) = 1.237, f(b) = 1.609         HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.237   7       8.808                                           HISTORY # 2     1.2     4.657   6.134                                           HISTORY # 3     1.2     4.657   2.614                                           HISTORY # 4     1.2     4.657   1.166                                           HISTORY # 5     1.2     4.657   0.8949                                          HISTORY # 6     1.2     4.657   0.3418                                          HISTORY # 7     1.2     4.657   0.1306                                          HISTORY # Converged to minimum: chi^2 = 1.2 at beta = 4.657                     HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.657               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.2     0.0244                                          HISTORY # 1     4       1.175   0.02444                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.726, beta = 4.657, b = 5.123                     HISTORY # after checking limits: a = 3.726, beta = 4.657, b = 5.123             HISTORY # starting values: f(a) = 1.183, f(beta) = 1.175, f(b) = 1.178          HISTORY # after bracketing: f(a) = 1.183, f(beta) = 1.175, f(b) = 1.178         HISTORY # Setting limits: 3.726 <= beta <= 5.123                                HISTORY # Starting with beta = 4.657                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.175   4.657   0.8215                                          HISTORY # 2     1.175   4.657   0.5336                                          HISTORY # 3     1.175   4.521   0.3558                                          HISTORY # 4     1.175   4.554   0.1359                                          HISTORY # 5     1.175   4.549   0.03251                                         HISTORY # Converged to minimum: chi^2 = 1.175 at beta = 4.549                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.87 / photometric redshift                           SED_TYPE=                    6 / SED template                                   MAG     =                26.78 / AB magnitude                                   MAG_ERR =                0.022 / AB magnitude error‘¬ä‰EX¿P,,Ò¿>Wù\\?R6&ìb:š?Zàûô†¬¿	ÅP”ãm6?MXÅ}NÍ?Jµ_'õÞ;?QŽŽdcë        ?i­‚L¿!®:Fì}Þ?PáK\­                ?GÇn²›»Ÿ¿/D-ÖÊÅ                        ?A-áº£Á†                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        