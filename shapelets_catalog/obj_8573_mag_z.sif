SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.64992812759351 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18771041000568 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8573 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.02 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4256. / min(X) in image pixels                         XMAX    =                4292. / max(X) in image pixels                         YMIN    =                6988. / min(Y) in image pixels                         YMAX    =                7024. / min(Y) in image pixels                         CENTROID=   (4273.06, 7006.09) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8573 found in the area (4268/7001) to (4279/7011)   HISTORY # Extending the area around object to (4256/6988) to (4292/7024)        HISTORY # Object 8678 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0282339, Centroid = (4273.06/7006.09)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.266, f(beta) = 1.211, f(b) = 1.201          HISTORY # after bracketing: f(a) = 1.211, f(beta) = 1.201, f(b) = 1.211         HISTORY # Setting limits: 4 <= beta <= 10.43                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.197   6.472   4                                               HISTORY # 2     1.197   6.779   1.528                                           HISTORY # 3     1.197   6.759   0.3069                                          HISTORY # 4     1.197   6.759   0.1295                                          HISTORY # 5     1.197   6.738   0.1097                                          HISTORY # 6     1.197   6.737   0.0885                                          HISTORY # 7     1.197   6.737   0.0006337                                       HISTORY # Converged to minimum: chi^2 = 1.197 at beta = 6.737                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.737               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.197   0.03937                                         HISTORY # 1     4       1.191   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.39, beta = 6.737, b = 7.411                      HISTORY # after checking limits: a = 5.39, beta = 6.737, b = 7.411              HISTORY # starting values: f(a) = 1.188, f(beta) = 1.191, f(b) = 1.194          HISTORY # after bracketing: f(a) = 1.205, f(beta) = 1.188, f(b) = 1.191         HISTORY # Setting limits: 3.593 <= beta <= 6.737                                HISTORY # Starting with beta = 5.39                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.188   5.39    2.034                                           HISTORY # 2     1.188   5.905   1.347                                           HISTORY # 3     1.188   5.65    0.5147                                          HISTORY # 4     1.188   5.65    0.2606                                          HISTORY # 5     1.188   5.65    0.09996                                         HISTORY # Converged to minimum: chi^2 = 1.188 at beta = 5.65                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 1.75 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               29.225 / AB magnitude                                   MAG_ERR =                0.122 / AB magnitude errorb,®c`;?3…◊˛ô‰ øWÿU∆
<ø6ü´Rdˆø.uÏŸê"ø3∂ÔwO’âø$ãÛX≥ô∑ø1ËúÌAì?≥vÖ¬éé        øWxkÕBÅø6’`Ÿ‚¯?E$é≤)ª                ø'`ë…ó/?>„Òµñ‰Ñ                         øQ“·‚Nèù                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        