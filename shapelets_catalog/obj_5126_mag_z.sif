SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.79771814714487 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16939746923236 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5126 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                9157. / min(X) in image pixels                         XMAX    =                9203. / max(X) in image pixels                         YMIN    =                5260. / min(Y) in image pixels                         YMAX    =                5306. / min(Y) in image pixels                         CENTROID=   (9178.68, 5280.02) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5126 found in the area (9171/5272) to (9189/5293)   HISTORY # Extending the area around object to (9157/5260) to (9203/5306)        HISTORY # Object 33527 nearby, but not overlapping.                             HISTORY # Object 4819 nearby, but not overlapping.                              HISTORY # Object 4950 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0886568, Centroid = (9178.68/5280.02)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.307, f(beta) = 1.187, f(b) = 1.199          HISTORY # after bracketing: f(a) = 1.307, f(beta) = 1.187, f(b) = 1.199         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.187   6.91    5                                               HISTORY # 2     1.186   6.179   1.91                                            HISTORY # 3     1.186   6.179   0.8187                                          HISTORY # 4     1.186   6.179   0.3673                                          HISTORY # 5     1.186   6.179   0.08831                                         HISTORY # Converged to minimum: chi^2 = 1.186 at beta = 6.179                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.179               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.186   0.03079                                         HISTORY # 1     4       1.174   0.03085                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.944, beta = 6.179, b = 6.797                     HISTORY # after checking limits: a = 4.944, beta = 6.179, b = 6.797             HISTORY # starting values: f(a) = 1.169, f(beta) = 1.174, f(b) = 1.176          HISTORY # after bracketing: f(a) = 1.178, f(beta) = 1.169, f(b) = 1.174         HISTORY # Setting limits: 3.296 <= beta <= 6.179                                HISTORY # Starting with beta = 4.944                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.169   4.944   1.865                                           HISTORY # 2     1.169   4.944   1.101                                           HISTORY # 3     1.169   4.703   0.6294                                          HISTORY # 4     1.169   4.799   0.2404                                          HISTORY # 5     1.169   4.798   0.0962                                          HISTORY # Converged to minimum: chi^2 = 1.169 at beta = 4.798                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.37 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =                28.34 / AB magnitude                                   MAG_ERR =                0.067 / AB magnitude errors%?ïäÂå?0àüîÖ»Ÿ?(ê|ÎÂð??’8ß+wß?EuÎ7?"!¢ÝcÍ#¿4KÇ­SÐ™?)%"I‰x?<'®:o:P        ?2Fs!âÑc?4TYY?GRÖÃ¹«                ?V9ÓŸ2>¾ó[r21                        ¿,GgLÈ€ï                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        