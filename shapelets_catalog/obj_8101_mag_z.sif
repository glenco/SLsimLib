SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.46798175570861 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.28021446404069 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8101 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3402. / min(X) in image pixels                         XMAX    =                3434. / max(X) in image pixels                         YMIN    =                7397. / min(Y) in image pixels                         YMAX    =                7429. / min(Y) in image pixels                         CENTROID=   (3416.96, 7411.18) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8101 found in the area (3415/7409) to (3420/7416)   HISTORY # Extending the area around object to (3402/7397) to (3434/7429)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00779158, Centroid = (3416.96/7411.18HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.31, f(beta) = 1.303, f(b) = 1.294           HISTORY # after bracketing: f(a) = 1.303, f(beta) = 1.294, f(b) = 1.303         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.292   6.472   4                                               HISTORY # 2     1.292   6.472   2.583                                           HISTORY # 3     1.292   6.472   1.055                                           HISTORY # 4     1.292   6.472   0.9443                                          HISTORY # 5     1.292   6.472   0.3607                                          HISTORY # 6     1.292   6.466   0.3607                                          HISTORY # 7     1.292   6.468   0.00656                                         HISTORY # Converged to minimum: chi^2 = 1.292 at beta = 6.468                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.468               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.292   0.04432                                         HISTORY # 1     4       1.28    0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.174, beta = 6.468, b = 7.115                     HISTORY # after checking limits: a = 5.174, beta = 6.468, b = 7.115             HISTORY # starting values: f(a) = 1.284, f(beta) = 1.28, f(b) = 1.281           HISTORY # after bracketing: f(a) = 1.284, f(beta) = 1.28, f(b) = 1.281          HISTORY # Setting limits: 5.174 <= beta <= 7.115                                HISTORY # Starting with beta = 6.468                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.28    6.468   1.141                                           HISTORY # 2     1.28    6.468   0.7412                                          HISTORY # 3     1.28    6.468   0.4358                                          HISTORY # 4     1.28    6.468   0.2831                                          HISTORY # 5     1.28    6.468   0.1665                                          HISTORY # 6     1.28    6.468   0.1081                                          HISTORY # Converged to minimum: chi^2 = 1.28 at beta = 6.468                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.61 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               30.379 / AB magnitude                                   MAG_ERR =                0.218 / AB magnitude error«]$ÚA?=%∆ñx˚XøR[òéú›?@°øﬁ√Ô?CHîyËÊ≤?Iî’fÈ¥)ø@FÚ2DgÏ?Mtä£ó◊øA¨Q2'y        øUÈ>ÍÉæŸÃ∑◊Yæöø5EÁ-††                ø3Mê©ôc∞ø4≤IÌî‚                        ?5TÉrcHø                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        