SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      2.8759042639399 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13437691131117 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3150 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1695. / min(X) in image pixels                         XMAX    =                1753. / max(X) in image pixels                         YMIN    =                4232. / min(Y) in image pixels                         YMAX    =                4290. / min(Y) in image pixels                         CENTROID=   (1718.57, 4262.67) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3150 found in the area (1707/4249) to (1740/4273)   HISTORY # Extending the area around object to (1695/4232) to (1753/4290)        HISTORY # Object 3184 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.15932, Centroid = (1718.57/4262.67)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 1.236, f(beta) = 1.168, f(b) = 1.224          HISTORY # after bracketing: f(a) = 1.236, f(beta) = 1.168, f(b) = 1.224         HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.168   7       8.808                                           HISTORY # 2     1.148   4.657   6.134                                           HISTORY # 3     1.142   3.209   3.791                                           HISTORY # 4     1.142   3.209   2.343                                           HISTORY # 5     1.142   3.209   1.448                                           HISTORY # 6     1.142   3.209   0.8949                                          HISTORY # 7     1.142   3.209   0.5531                                          HISTORY # 8     1.142   3.209   0.3418                                          HISTORY # 9     1.142   3.209   0.2113                                          HISTORY # 10    1.142   3.209   0.1306                                          HISTORY # Converged to minimum: chi^2 = 1.142 at beta = 3.209                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.209               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.142   0.0244                                          HISTORY # 1     4       1.135   0.02444                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.567, beta = 3.209, b = 3.53                      HISTORY # after checking limits: a = 2.567, beta = 3.209, b = 3.53              HISTORY # starting values: f(a) = 1.135, f(beta) = 1.135, f(b) = 1.136          HISTORY # after bracketing: f(a) = 1.135, f(beta) = 1.135, f(b) = 1.136         HISTORY # Setting limits: 2.567 <= beta <= 3.53                                 HISTORY # Starting with beta = 3.209                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.134   2.964   0.6418                                          HISTORY # 2     1.134   2.867   0.3967                                          HISTORY # 3     1.134   2.876   0.09709                                         HISTORY # 4     1.134   2.876   0.04273                                         HISTORY # Converged to minimum: chi^2 = 1.134 at beta = 2.876                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.34 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               27.981 / AB magnitude                                   MAG_ERR =                0.059 / AB magnitude error}^™àú¿HHI¸Ç¦?XÌQU£ã¶?CýÜ½¬8ˆ?E?`5êŽ??ÙŸøL¬?U§O)–V.¾ö©²˜þ)`?/ñ‡é"þÏ        ?&Z•ÙB?A’Ë^…E/?C>ÚC›†K                ¾ÿñ¸Á¦Í>¿á¶ ‰øL                        ?V´é	@­ˆ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        