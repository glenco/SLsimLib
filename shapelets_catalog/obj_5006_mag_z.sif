SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.11940878791562 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14333137001537 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5006 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6975. / min(X) in image pixels                         XMAX    =                7021. / max(X) in image pixels                         YMIN    =                5206. / min(Y) in image pixels                         YMAX    =                5252. / min(Y) in image pixels                         CENTROID=   (6996.93, 5229.32) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5006 found in the area (6987/5218) to (7008/5240)   HISTORY # Extending the area around object to (6975/5206) to (7021/5252)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.455926, Centroid = (6996.93/5229.32) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 11.55, f(beta) = 5.138, f(b) = 16.61          HISTORY # after bracketing: f(a) = 11.55, f(beta) = 5.138, f(b) = 16.61         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     5.138   5       6.044                                           HISTORY # 2     2.046   3.421   4.134                                           HISTORY # 3     1.526   2.445   2.555                                           HISTORY # 4     1.525   2.455   0.9759                                          HISTORY # 5     1.525   2.455   0.3791                                          HISTORY # 6     1.525   2.455   0.1512                                          HISTORY # 7     1.523   2.509   0.1409                                          HISTORY # 8     1.523   2.51    0.08707                                         HISTORY # Converged to minimum: chi^2 = 1.523 at beta = 2.51                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.51                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.523   0.03079                                         HISTORY # 1     4       1.21    0.03085                                         HISTORY # 2     6       1.168   0.03095                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.008, beta = 2.51, b = 2.761                      HISTORY # after checking limits: a = 2.008, beta = 2.51, b = 2.761              HISTORY # starting values: f(a) = 1.147, f(beta) = 1.168, f(b) = 1.2            HISTORY # after bracketing: f(a) = 1.791, f(beta) = 1.147, f(b) = 1.168         HISTORY # Setting limits: 1.339 <= beta <= 2.51                                 HISTORY # Starting with beta = 2.008                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.147   2.008   0.7576                                          HISTORY # 2     1.145   2.2     0.5019                                          HISTORY # 3     1.143   2.119   0.1917                                          HISTORY # 4     1.143   2.119   0.1219                                          HISTORY # 5     1.143   2.119   0.05293                                         HISTORY # 6     1.143   2.119   0.01029                                         HISTORY # Converged to minimum: chi^2 = 1.143 at beta = 2.119                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 3.44 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               26.157 / AB magnitude                                   MAG_ERR =                0.009 / AB magnitude errorØ∆ŒAb¸OøE›≤∫¨ﬁq?~˜Ko$≈?^†¢,b£?hVç“y˘cøA®{{*£?R"ägeØ¸?Q\Ô!eÜÃ?{&ÎT2ÇUøBigÑCÏ÷?P5c>.9»?3F÷ìÆ6øB>Qïó~        ?x*Áﬂ›)|?`–@}Í.’?r@&µÚ[æˇ¥ö®Ô[«?K˜ô/Øı                ødœTJ˜¯«?L1</ëÃ?Y‹ôNà‚>?= Ùˇ©û                        ?t¨BÃ˘Áø?A/O˛?C˜è&—                                ?Kj‘"Íw?L`,H`'                                        ?—πÿ/                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         