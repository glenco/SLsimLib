SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.75185955812623 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14745317576575 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3248 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6902. / min(X) in image pixels                         XMAX    =                6958. / max(X) in image pixels                         YMIN    =                4303. / min(Y) in image pixels                         YMAX    =                4359. / min(Y) in image pixels                         CENTROID=   (6927.97, 4330.93) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3248 found in the area (6914/4319) to (6945/4342)   HISTORY # Extending the area around object to (6902/4303) to (6958/4359)        HISTORY # Object 3314 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.278803, Centroid = (6927.97/4330.93) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 3.242, f(beta) = 1.918, f(b) = 3.018          HISTORY # after bracketing: f(a) = 3.242, f(beta) = 1.918, f(b) = 3.018         HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.918   7       8.808                                           HISTORY # 2     1.485   4.657   6.134                                           HISTORY # 3     1.273   3.209   3.791                                           HISTORY # 4     1.273   3.209   2.343                                           HISTORY # 5     1.273   3.209   1.448                                           HISTORY # 6     1.273   3.209   0.8949                                          HISTORY # 7     1.273   3.209   0.5531                                          HISTORY # 8     1.27    3.078   0.3418                                          HISTORY # 9     1.27    3.078   0.2113                                          HISTORY # 10    1.27    3.078   0.1306                                          HISTORY # Converged to minimum: chi^2 = 1.27 at beta = 3.078                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.078               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.27    0.02528                                         HISTORY # 1     4       1.174   0.02531                                         HISTORY # 2     6       1.151   0.02537                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.463, beta = 3.078, b = 3.386                     HISTORY # after checking limits: a = 2.463, beta = 3.078, b = 3.386             HISTORY # starting values: f(a) = 1.152, f(beta) = 1.151, f(b) = 1.158          HISTORY # after bracketing: f(a) = 1.152, f(beta) = 1.151, f(b) = 1.158         HISTORY # Setting limits: 2.463 <= beta <= 3.386                                HISTORY # Starting with beta = 3.078                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.148   2.843   0.6157                                          HISTORY # 2     1.147   2.74    0.3805                                          HISTORY # 3     1.147   2.752   0.1036                                          HISTORY # 4     1.147   2.752   0.04712                                         HISTORY # Converged to minimum: chi^2 = 1.147 at beta = 2.752                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.08 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               26.777 / AB magnitude                                   MAG_ERR =                0.022 / AB magnitude erroró,æá?E0™†ÎªâøeUÙañÊøP∞ú†å?b/T¢óÇ?#&“MaCzøB!Ê≈ÊKPø1MQﬁ{∏?w–a˜ˆ≈øËwhwø_Ûá˚⁄IΩø4,<Z°Íª?G⁄ˆÌP≥I        ?ÑÄ)˙ÊÂ?EÌœK?Isòq◊”jæ˜Ë≥ΩnbŸ?9…ƒ«¥!|                ?\'Æ˘?d™Sô8M◊øEÅ"åΩ?	Çyﬁ;?n                        ?g‹êáÎ◊?3∆?◊ı€?[ˇŒ{«>B                                ø;ûF›yçøFHJG|ä                                        ?Q©œô€Œ≥                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        