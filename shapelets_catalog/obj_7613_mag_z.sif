SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.29883412999246 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17783308491379 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7613 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3616. / min(X) in image pixels                         XMAX    =                3664. / max(X) in image pixels                         YMIN    =                7596. / min(Y) in image pixels                         YMAX    =                7644. / min(Y) in image pixels                         CENTROID=    (3640.07, 7618.3) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7613 found in the area (3628/7610) to (3651/7629)   HISTORY # Extending the area around object to (3616/7596) to (3664/7644)        HISTORY # Object 8340 nearby, but not overlapping.                              HISTORY # Object 7823 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.235279, Centroid = (3640.07/7618.3)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.484, f(beta) = 2.567, f(b) = 4.222          HISTORY # after bracketing: f(a) = 2.567, f(beta) = 2.484, f(b) = 2.567         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.274   2.827   5.134                                           HISTORY # 2     1.246   2.614   1.961                                           HISTORY # 3     1.241   2.567   1.748                                           HISTORY # 4     1.236   1.917   1.701                                           HISTORY # 5     1.224   2.214   0.6496                                          HISTORY # 6     1.224   2.214   0.2988                                          HISTORY # 7     1.224   2.214   0.1152                                          HISTORY # Converged to minimum: chi^2 = 1.224 at beta = 2.214                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.214               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.224   0.0295                                          HISTORY # 1     4       1.178   0.02956                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.771, beta = 2.214, b = 2.436                     HISTORY # after checking limits: a = 1.771, beta = 2.214, b = 2.436             HISTORY # starting values: f(a) = 1.191, f(beta) = 1.178, f(b) = 1.178          HISTORY # after bracketing: f(a) = 1.191, f(beta) = 1.178, f(b) = 1.178         HISTORY # Setting limits: 1.771 <= beta <= 2.436                                HISTORY # Starting with beta = 2.214                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.178   2.214   0.3906                                          HISTORY # 2     1.178   2.299   0.2214                                          HISTORY # 3     1.178   2.299   0.1547                                          HISTORY # 4     1.178   2.299   0.07008                                         HISTORY # 5     1.178   2.299   0.0178                                          HISTORY # Converged to minimum: chi^2 = 1.178 at beta = 2.299                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.23 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               27.162 / AB magnitude                                   MAG_ERR =                0.021 / AB magnitude error›vf£ï“?>‡˜?8V¿¿cH¥W -“?—vdµ…?Wö &L"á¿>-rÔåg¿P!{»ø?˜.ó?B"å££Ë=        ?YÉŽHâ?1Ï™æy»?V+•;.¾                ¿Tèa¯{B?P@±‘šWã                        ?Tƒ|²ª|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        