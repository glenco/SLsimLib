SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.78850548592346 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18558296898985 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6460 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3059. / min(X) in image pixels                         XMAX    =                3091. / max(X) in image pixels                         YMIN    =                5921. / min(Y) in image pixels                         YMAX    =                5953. / min(Y) in image pixels                         CENTROID=    (3074.4, 5936.42) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6460 found in the area (3071/5933) to (3078/5941)   HISTORY # Extending the area around object to (3059/5921) to (3091/5953)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0256611, Centroid = (3074.4/5936.42) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.225, f(beta) = 1.236, f(b) = 1.364          HISTORY # after bracketing: f(a) = 1.236, f(beta) = 1.225, f(b) = 1.236         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.192   2.063   3.134                                           HISTORY # 2     1.191   2.194   1.937                                           HISTORY # 3     1.191   2.255   1.806                                           HISTORY # 4     1.191   2.255   0.7277                                          HISTORY # 5     1.191   2.255   0.3157                                          HISTORY # 6     1.191   2.352   0.2547                                          HISTORY # 7     1.191   2.311   0.09727                                         HISTORY # 8     1.191   2.311   0.04187                                         HISTORY # Converged to minimum: chi^2 = 1.191 at beta = 2.311                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.311               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.191   0.04432                                         HISTORY # 1     4       1.192   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.848, beta = 2.311, b = 2.542                     HISTORY # after checking limits: a = 1.848, beta = 2.311, b = 2.542             HISTORY # starting values: f(a) = 1.186, f(beta) = 1.192, f(b) = 1.196          HISTORY # after bracketing: f(a) = 1.191, f(beta) = 1.186, f(b) = 1.192         HISTORY # Setting limits: 1.232 <= beta <= 2.311                                HISTORY # Starting with beta = 1.848                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.186   1.848   0.6975                                          HISTORY # 2     1.186   1.848   0.4119                                          HISTORY # 3     1.186   1.759   0.2354                                          HISTORY # 4     1.186   1.789   0.0899                                          HISTORY # 5     1.186   1.789   0.02994                                         HISTORY # Converged to minimum: chi^2 = 1.186 at beta = 1.789                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.73 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               29.519 / AB magnitude                                   MAG_ERR =                0.096 / AB magnitude errorqÀÊb}¨?N†»rJ¿IÍVJ9?Gì˜˜ë-¢¿4Æ~¤C3¿7jú;M>¿6}ª¯²j?.l+
Ã5Æ¿7ÎñÒ·8        ¿"ðÅÐÂc?4ýbìlÑD?888ð‡¼                ¿3\ž¬¢G{?5BŽÒ»$Î                        ¿2°ÒM                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        