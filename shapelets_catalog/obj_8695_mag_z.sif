SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =       1.500282466976 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18136000434388 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8695 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5187. / min(X) in image pixels                         XMAX    =                5219. / max(X) in image pixels                         YMIN    =                6986. / min(Y) in image pixels                         YMAX    =                7018. / min(Y) in image pixels                         CENTROID=   (5202.72, 7001.82) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8695 found in the area (5199/6998) to (5207/7006)   HISTORY # Extending the area around object to (5187/6986) to (5219/7018)        HISTORY # Object 8384 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0205895, Centroid = (5202.72/7001.82)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.225, f(beta) = 1.233, f(b) = 1.322          HISTORY # after bracketing: f(a) = 1.233, f(beta) = 1.225, f(b) = 1.233         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   2.063   3.134                                           HISTORY # 2     1.191   1.981   1.197                                           HISTORY # 3     1.191   1.96    1.115                                           HISTORY # 4     1.191   1.96    0.4392                                          HISTORY # 5     1.191   1.8     0.4178                                          HISTORY # 6     1.191   1.702   0.2582                                          HISTORY # 7     1.191   1.727   0.09862                                         HISTORY # 8     1.191   1.734   0.07268                                         HISTORY # Converged to minimum: chi^2 = 1.191 at beta = 1.734                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.734               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.191   0.04432                                         HISTORY # 1     4       1.183   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.387, beta = 1.734, b = 1.907                     HISTORY # after checking limits: a = 1.387, beta = 1.734, b = 1.907             HISTORY # starting values: f(a) = 1.182, f(beta) = 1.183, f(b) = 1.185          HISTORY # after bracketing: f(a) = 1.183, f(beta) = 1.182, f(b) = 1.183         HISTORY # Setting limits: 1.101 <= beta <= 1.734                                HISTORY # Starting with beta = 1.387                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.181   1.52    0.3468                                          HISTORY # 2     1.181   1.494   0.1325                                          HISTORY # 3     1.181   1.5     0.02564                                         HISTORY # Converged to minimum: chi^2 = 1.181 at beta = 1.5                     HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.59 / photometric redshift                           SED_TYPE=                   13 / SED template                                   MAG     =               29.563 / AB magnitude                                   MAG_ERR =                0.093 / AB magnitude errorpaG¨äNª??5ýW?K¢G ¿­zùÐb|?DŸÁ“ëT¾ûUb~A[?ŽJÖË¿6¾Áèý'‚¿&?Gˆv        ?	di×F”¿6ß:ëWô¿@D6@ó                ?"\8nó¿6Œ•õÝï                        ?DÖàeQ%                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        