SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.35861658427808 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10605263955353 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6375 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1236. / min(X) in image pixels                         XMAX    =                1266. / max(X) in image pixels                         YMIN    =                5871. / min(Y) in image pixels                         YMAX    =                5901. / min(Y) in image pixels                         CENTROID=   (1250.81, 5885.42) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6375 found in the area (1248/5884) to (1253/5887)   HISTORY # Extending the area around object to (1236/5871) to (1266/5901)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0056903, Centroid = (1250.81/5885.42)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.122, f(beta) = 1.111, f(b) = 1.125          HISTORY # after bracketing: f(a) = 1.122, f(beta) = 1.111, f(b) = 1.125         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.111   3       3.28                                            HISTORY # 2     1.111   3       1.961                                           HISTORY # 3     1.111   3       1.253                                           HISTORY # 4     1.111   3       0.749                                           HISTORY # 5     1.111   3       0.4785                                          HISTORY # 6     1.111   3       0.2861                                          HISTORY # 7     1.111   3       0.1828                                          HISTORY # 8     1.111   2.955   0.1189                                          HISTORY # 9     1.111   2.969   0.04542                                         HISTORY # Converged to minimum: chi^2 = 1.111 at beta = 2.969                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.969               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.111   0.0473                                          HISTORY # 1     4       1.111   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.375, beta = 2.969, b = 3.266                     HISTORY # after checking limits: a = 2.375, beta = 2.969, b = 3.266             HISTORY # starting values: f(a) = 1.106, f(beta) = 1.111, f(b) = 1.112          HISTORY # after bracketing: f(a) = 1.112, f(beta) = 1.106, f(b) = 1.111         HISTORY # Setting limits: 1.584 <= beta <= 2.969                                HISTORY # Starting with beta = 2.375                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.106   2.375   0.8963                                          HISTORY # 2     1.106   2.375   0.5293                                          HISTORY # 3     1.106   2.375   0.3424                                          HISTORY # 4     1.106   2.375   0.2022                                          HISTORY # 5     1.106   2.375   0.1308                                          HISTORY # 6     1.106   2.375   0.07722                                         HISTORY # 7     1.106   2.359   0.04413                                         HISTORY # Converged to minimum: chi^2 = 1.106 at beta = 2.359                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.57 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.417 / AB magnitude                                   MAG_ERR =                0.219 / AB magnitude errorÉ?::ìøJqÅ.ƒUø?ÆTâU•?⁄LV{?@Ó Wı™ø??\óÈ◊?AììæçyßøA–o"€N/ø?	€ë¡MÄ        ø>,dçm˘eø8ã’Ö≠ äø÷ƒkyæ                ø*K™Z\?;z†u$r                        ø?ˆVC.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        