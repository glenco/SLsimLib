SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.15541752799933 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.06102968376941 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2336 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2485. / min(X) in image pixels                         XMAX    =                2517. / max(X) in image pixels                         YMIN    =                3707. / min(Y) in image pixels                         YMAX    =                3739. / min(Y) in image pixels                         CENTROID=   (2500.67, 3721.88) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2336 found in the area (2498/3719) to (2503/3726)   HISTORY # Extending the area around object to (2485/3707) to (2517/3739)        HISTORY # Object 2268 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0110309, Centroid = (2500.67/3721.88)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.1, f(beta) = 1.087, f(b) = 1.079            HISTORY # after bracketing: f(a) = 1.087, f(beta) = 1.079, f(b) = 1.087         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.078   6.472   4                                               HISTORY # 2     1.078   6.976   1.528                                           HISTORY # 3     1.078   6.902   0.5038                                          HISTORY # 4     1.078   6.902   0.2382                                          HISTORY # 5     1.078   6.859   0.1642                                          HISTORY # 6     1.078   6.851   0.1215                                          HISTORY # 7     1.078   6.852   0.00813                                         HISTORY # Converged to minimum: chi^2 = 1.078 at beta = 6.852                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.852               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.078   0.04432                                         HISTORY # 1     4       1.062   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.482, beta = 6.852, b = 7.537                     HISTORY # after checking limits: a = 5.482, beta = 6.852, b = 7.155             HISTORY # starting values: f(a) = 1.066, f(beta) = 1.062, f(b) = 1.061          HISTORY # after bracketing: f(a) = 1.062, f(beta) = 1.061, f(b) = 1.062         HISTORY # Setting limits: 6.852 <= beta <= 7.224                                HISTORY # Starting with beta = 7.155                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.061   7.155   0.1844                                          HISTORY # 2     1.061   7.155   0.1128                                          HISTORY # Converged to minimum: chi^2 = 1.061 at beta = 7.155                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.53 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.323 / AB magnitude                                   MAG_ERR =                0.187 / AB magnitude errorÆzaô¿4„!ÏÙà¿MÅÈW÷V¿2¸Þvù7?oƒ	lÈ¿:ÕMŠÜVû?@ ¦;ïé?Q¸{;âsÆ?MOfÞ#þ…        ¿SNâ½d¿>-$Uy?í¬eª3                ¿;•mã®Ó¿ †	e¨‚                        ?0¡ÎA±e                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        