SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.61013571141211 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.0978514699249 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  784 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  655 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6001. / min(X) in image pixels                         XMAX    =                6035. / max(X) in image pixels                         YMIN    =                2156. / min(Y) in image pixels                         YMAX    =                2190. / min(Y) in image pixels                         CENTROID=    (6017.7, 2172.11) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 655 found in the area (6013/2170) to (6022/2175)    HISTORY # Extending the area around object to (6001/2156) to (6035/2190)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00983001, Centroid = (6017.7/2172.11)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.141, f(beta) = 1.114, f(b) = 1.113          HISTORY # after bracketing: f(a) = 1.114, f(beta) = 1.113, f(b) = 1.114         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.112   6.472   4                                               HISTORY # 2     1.112   5.528   2.472                                           HISTORY # 3     1.112   5.528   1.528                                           HISTORY # 4     1.112   5.528   0.9443                                          HISTORY # 5     1.112   5.528   0.5836                                          HISTORY # 6     1.112   5.666   0.3607                                          HISTORY # 7     1.112   5.666   0.1832                                          HISTORY # 8     1.112   5.666   0.09804                                         HISTORY # 9     1.112   5.666   0.06552                                         HISTORY # Converged to minimum: chi^2 = 1.112 at beta = 5.666                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.666               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.112   0.0417                                          HISTORY # 1     4       1.104   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.533, beta = 5.666, b = 6.232                     HISTORY # after checking limits: a = 4.533, beta = 5.666, b = 6.232             HISTORY # starting values: f(a) = 1.113, f(beta) = 1.104, f(b) = 1.101          HISTORY # after bracketing: f(a) = 1.104, f(beta) = 1.101, f(b) = 1.104         HISTORY # Setting limits: 5.666 <= beta <= 7.659                                HISTORY # Starting with beta = 6.232                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.099   6.777   1.427                                           HISTORY # 2     1.098   7.114   0.882                                           HISTORY # 3     1.098   7.322   0.5451                                          HISTORY # 4     1.098   7.451   0.3369                                          HISTORY # 5     1.098   7.531   0.2082                                          HISTORY # 6     1.098   7.58    0.1287                                          HISTORY # 7     1.098   7.61    0.07953                                         HISTORY # Converged to minimum: chi^2 = 1.098 at beta = 7.61                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 5.27 / photometric redshift                           SED_TYPE=                    4 / SED template                                   MAG     =               31.759 / AB magnitude                                   MAG_ERR =                0.361 / AB magnitude errorˇo~b]?4æpj3gË?*ÏÔ˘Pe?@áu–»~?*-≠õ@˝›øE2 õ˚d?m›L¬‘?KØ‡>#§è?A5s(Lã        ?∂~ù©a?à∆∆z"Í?9⁄m,∂                ø6’tÄRVë?DUÍÆ´<                        ?Lh∂5√                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        