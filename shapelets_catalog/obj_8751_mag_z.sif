SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.87398787637285 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.19270374498938 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  784 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8751 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8099. / min(X) in image pixels                         XMAX    =                8131. / max(X) in image pixels                         YMIN    =                6927. / min(Y) in image pixels                         YMAX    =                6959. / min(Y) in image pixels                         CENTROID=   (8116.05, 6945.27) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8751 found in the area (8111/6941) to (8119/6945)   HISTORY # Extending the area around object to (8099/6927) to (8131/6959)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0110693, Centroid = (8116.05/6945.27)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.226, f(beta) = 1.209, f(b) = 1.197          HISTORY # after bracketing: f(a) = 1.209, f(beta) = 1.197, f(b) = 1.209         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.195   6.472   4                                               HISTORY # 2     1.195   6.885   1.528                                           HISTORY # 3     1.195   6.808   0.4127                                          HISTORY # 4     1.195   6.777   0.3361                                          HISTORY # 5     1.195   6.772   0.3048                                          HISTORY # 6     1.195   6.773   0.004452                                        HISTORY # Converged to minimum: chi^2 = 1.195 at beta = 6.773                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.773               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.195   0.04432                                         HISTORY # 1     4       1.198   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.418, beta = 6.773, b = 7.45                      HISTORY # after checking limits: a = 5.418, beta = 6.773, b = 7.155             HISTORY # starting values: f(a) = 1.194, f(beta) = 1.198, f(b) = 1.198          HISTORY # after bracketing: f(a) = 1.202, f(beta) = 1.194, f(b) = 1.198         HISTORY # Setting limits: 3.612 <= beta <= 6.773                                HISTORY # Starting with beta = 5.418                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.193   4.728   1.806                                           HISTORY # 2     1.193   4.88    0.6899                                          HISTORY # 3     1.193   4.874   0.1511                                          HISTORY # 4     1.193   4.874   0.06118                                         HISTORY # Converged to minimum: chi^2 = 1.193 at beta = 4.874                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.86 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               31.365 / AB magnitude                                   MAG_ERR =                0.357 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?QcÏí]d¿ mìg?fv|^'¿!eN?Õg’¿3!¼£–h¿1S—À,V?PŸý'v¿JôõãÔ‡?@³Š¬Ò(Ý        ?¨×oMh¿7j‹Ê.ìZ?.
£è®W€                ¿BŽi™Ì—?4l#¸üèO                        ?3Ý[,kˆ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        