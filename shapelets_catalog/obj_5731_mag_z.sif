SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.71701994136966 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17886060969015 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5731 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.03 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1444. / min(X) in image pixels                         XMAX    =                1484. / max(X) in image pixels                         YMIN    =                5547. / min(Y) in image pixels                         YMAX    =                5587. / min(Y) in image pixels                         CENTROID=   (1463.83, 5566.89) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5731 found in the area (1457/5559) to (1470/5574)   HISTORY # Extending the area around object to (1444/5547) to (1484/5587)        HISTORY # Object 5762 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0564124, Centroid = (1463.83/5566.89)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.282, f(beta) = 1.217, f(b) = 1.338          HISTORY # after bracketing: f(a) = 1.282, f(beta) = 1.217, f(b) = 1.338         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.217   5       6.044                                           HISTORY # 2     1.187   3.421   4.134                                           HISTORY # 3     1.186   3.128   2.555                                           HISTORY # 4     1.186   3.027   2.262                                           HISTORY # 5     1.185   2.202   2.161                                           HISTORY # 6     1.184   2.462   0.8256                                          HISTORY # 7     1.184   2.462   0.3476                                          HISTORY # 8     1.184   2.462   0.1867                                          HISTORY # 9     1.184   2.424   0.09942                                         HISTORY # Converged to minimum: chi^2 = 1.184 at beta = 2.424                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.424               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.184   0.03542                                         HISTORY # 1     4       1.185   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.939, beta = 2.424, b = 2.667                     HISTORY # after checking limits: a = 1.939, beta = 2.424, b = 2.667             HISTORY # starting values: f(a) = 1.181, f(beta) = 1.185, f(b) = 1.184          HISTORY # after bracketing: f(a) = 1.194, f(beta) = 1.181, f(b) = 1.185         HISTORY # Setting limits: 1.293 <= beta <= 2.424                                HISTORY # Starting with beta = 1.939                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.179   1.692   0.6464                                          HISTORY # 2     1.179   1.717   0.2469                                          HISTORY # 3     1.179   1.717   0.02621                                         HISTORY # Converged to minimum: chi^2 = 1.179 at beta = 1.717                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.73 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.741 / AB magnitude                                   MAG_ERR =                0.066 / AB magnitude errorwZî½éŠ6?,®]áßïõ?EÎ“±iŒx¿=’·†	¨?B•(«›?AÒÓÚÞ%ù¿P²t7K u?3jTS gŒ¿!3Ê•Ã’3        ?Q§Ú`Ôê=?5†ÆVÜ4l?L¥‡_@œ                ?ÝóúÇ”Í¿'+úýd¿                        ?R@„))n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        