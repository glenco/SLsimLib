SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.69766454312745 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18745338874874 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9565 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3908. / min(X) in image pixels                         XMAX    =                3942. / max(X) in image pixels                         YMIN    =                8457. / min(Y) in image pixels                         YMAX    =                8491. / min(Y) in image pixels                         CENTROID=    (3925.5, 8475.37) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9565 found in the area (3923/8469) to (3927/8479)   HISTORY # Extending the area around object to (3908/8457) to (3942/8491)        HISTORY # Object 9472 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00582111, Centroid = (3925.5/8475.37)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.195, f(beta) = 1.191, f(b) = 1.201          HISTORY # after bracketing: f(a) = 1.195, f(beta) = 1.191, f(b) = 1.201         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   4       4.662                                           HISTORY # 2     1.191   2.803   3.134                                           HISTORY # 3     1.19    3.303   1.197                                           HISTORY # 4     1.19    3.303   0.5096                                          HISTORY # 5     1.19    3.303   0.2006                                          HISTORY # 6     1.19    3.23    0.191                                           HISTORY # 7     1.19    3.262   0.07295                                         HISTORY # Converged to minimum: chi^2 = 1.19 at beta = 3.262                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.262               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.19    0.0417                                          HISTORY # 1     4       1.193   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.61, beta = 3.262, b = 3.589                      HISTORY # after checking limits: a = 2.61, beta = 3.262, b = 3.589              HISTORY # starting values: f(a) = 1.192, f(beta) = 1.193, f(b) = 1.192          HISTORY # after bracketing: f(a) = 1.192, f(beta) = 1.189, f(b) = 1.192         HISTORY # Setting limits: 3.589 <= beta <= 7.635                                HISTORY # Starting with beta = 5.383                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.189   5.383   2.655                                           HISTORY # 2     1.187   4.698   1.794                                           HISTORY # 3     1.187   4.698   0.7124                                          HISTORY # 4     1.187   4.698   0.2888                                          HISTORY # 5     1.187   4.698   0.2618                                          HISTORY # 6     1.187   4.698   0.1                                             HISTORY # 7     1.187   4.698   0.03819                                         HISTORY # Converged to minimum: chi^2 = 1.187 at beta = 4.698                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  0.8 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               30.101 / AB magnitude                                   MAG_ERR =                0.191 / AB magnitude errorè- ÏIπø´O‘z≥?0¢G2çx¥?+I
xÈM?<£˜#ö>Î€1EÆ?≈VP©aâønªıöSãø8C≈eS0J        øH®
Rn]?JwGZâ?&Y	Lè±                ø&lKË˝Äø(‹Dôãà                        ?CaæÓ∞8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        