SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.27484157080615 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09537121239995 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5378 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6956. / min(X) in image pixels                         XMAX    =                6990. / max(X) in image pixels                         YMIN    =                5365. / min(Y) in image pixels                         YMAX    =                5399. / min(Y) in image pixels                         CENTROID=   (6972.58, 5381.51) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5378 found in the area (6969/5377) to (6977/5386)   HISTORY # Extending the area around object to (6956/5365) to (6990/5399)        HISTORY # Object 5377 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0246383, Centroid = (6972.58/5381.51)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.116, f(beta) = 1.116, f(b) = 1.183          HISTORY # after bracketing: f(a) = 1.116, f(beta) = 1.116, f(b) = 1.116         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.093   2.063   3.134                                           HISTORY # 2     1.093   2.177   1.937                                           HISTORY # 3     1.092   2.873   1.823                                           HISTORY # 4     1.091   2.784   0.6963                                          HISTORY # 5     1.091   2.552   0.6065                                          HISTORY # 6     1.091   2.656   0.2317                                          HISTORY # 7     1.091   2.656   0.1285                                          HISTORY # 8     1.091   2.656   0.04988                                         HISTORY # Converged to minimum: chi^2 = 1.091 at beta = 2.656                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.656               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.091   0.0417                                          HISTORY # 1     4       1.096   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.125, beta = 2.656, b = 2.922                     HISTORY # after checking limits: a = 2.125, beta = 2.656, b = 2.922             HISTORY # starting values: f(a) = 1.096, f(beta) = 1.096, f(b) = 1.096          HISTORY # after bracketing: f(a) = 1.096, f(beta) = 1.096, f(b) = 1.096         HISTORY # Setting limits: 1.417 <= beta <= 2.656                                HISTORY # Starting with beta = 2.125                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.096   2.125   0.8019                                          HISTORY # 2     1.095   2.328   0.5313                                          HISTORY # 3     1.095   2.284   0.2029                                          HISTORY # 4     1.095   2.278   0.1584                                          HISTORY # 5     1.095   2.278   0.06398                                         HISTORY # 6     1.095   2.274   0.05837                                         HISTORY # 7     1.095   2.275   0.003511                                        HISTORY # Converged to minimum: chi^2 = 1.095 at beta = 2.275                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 2.43 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.828 / AB magnitude                                   MAG_ERR =                0.131 / AB magnitude errorhy¿;˙So?9}ö£UaUø-Ü.Û…Ÿ? ÿi·GXøÉÕ÷PÈøíÂ}·Mœø8è	‚·∆8?ÿ`| 0‡ø442Œ¶Û        øJ⁄°ˇ€/±ø"¶/n„	ø@Ë”^“Ï                >Îñ'[Ÿf0?:%:t                        ?®Ø√‹Y∑                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        