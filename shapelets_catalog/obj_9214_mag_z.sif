SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.60263112349929 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17902616248894 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9214 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5237. / min(X) in image pixels                         XMAX    =                5271. / max(X) in image pixels                         YMIN    =                7915. / min(Y) in image pixels                         YMAX    =                7949. / min(Y) in image pixels                         CENTROID=   (5253.55, 7931.24) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9214 found in the area (5249/7927) to (5258/7937)   HISTORY # Extending the area around object to (5237/7915) to (5271/7949)        HISTORY # Object 9136 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0198201, Centroid = (5253.55/7931.24)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.212, f(beta) = 1.194, f(b) = 1.187          HISTORY # after bracketing: f(a) = 1.194, f(beta) = 1.187, f(b) = 1.194         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.187   8       3.383                                           HISTORY # 2     1.187   8.709   1.855                                           HISTORY # 3     1.187   8.808   1.146                                           HISTORY # 4     1.187   8.849   1.047                                           HISTORY # 5     1.187   8.861   1.006                                           HISTORY # 6     1.187   8.862   0.994                                           HISTORY # 7     1.187   8.862   0.9932                                          HISTORY # 8     1.187   8.862   0.9931                                          HISTORY # 9     1.187   8.862   0.9931                                          HISTORY # 10    1.187   8.862   0.3793                                          HISTORY # 11    1.187   8.862   0.3793                                          HISTORY # 12    1.187   8.862   0.1449                                          HISTORY # 13    1.187   8.862   0.05535                                         HISTORY # Converged to minimum: chi^2 = 1.187 at beta = 8.862                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 8.862               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.187   0.0417                                          HISTORY # 1     4       1.18    0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.089, beta = 8.862, b = 9.748                     HISTORY # after checking limits: a = 7.089, beta = 7.346, b = 7.603             HISTORY # starting values: f(a) = 1.179, f(beta) = 1.179, f(b) = 1.179          HISTORY # after bracketing: f(a) = 1.179, f(beta) = 1.179, f(b) = 1.179         HISTORY # Setting limits: 7.346 <= beta <= 7.691                                HISTORY # Starting with beta = 7.603                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.179   7.603   0.1866                                          HISTORY # 2     1.179   7.603   0.1261                                          HISTORY # Converged to minimum: chi^2 = 1.179 at beta = 7.603                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  0.8 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.231 / AB magnitude                                   MAG_ERR =                0.198 / AB magnitude errorã®$ŒàøAäœ…9øTÔXcÔø>
ÿ0≥ëKøÅqCóÖ?3ñ´íÔ˚r?<i†!Î!ê?Aıw¶È*G?Jï∫ê…À        øJ(ªd=>Eø'ÿ˚<‘?ƒèÊˇu                ?Cx
á◊æ6?6Ó|                        ?Dæ÷ƒ÷ˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        