SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.91328424093076 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20191614544012 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4140 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2045. / min(X) in image pixels                         XMAX    =                2083. / max(X) in image pixels                         YMIN    =                4754. / min(Y) in image pixels                         YMAX    =                4792. / min(Y) in image pixels                         CENTROID=    (2063.97, 4771.3) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4140 found in the area (2059/4766) to (2069/4780)   HISTORY # Extending the area around object to (2045/4754) to (2083/4792)        HISTORY # Object 4104 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0389517, Centroid = (2063.97/4771.3) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.226, f(beta) = 1.204, f(b) = 1.212          HISTORY # after bracketing: f(a) = 1.226, f(beta) = 1.204, f(b) = 1.212         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.203   5.528   4                                               HISTORY # 2     1.203   5.528   2.472                                           HISTORY # 3     1.203   5.528   1.528                                           HISTORY # 4     1.203   5.889   0.9443                                          HISTORY # 5     1.203   5.889   0.5836                                          HISTORY # 6     1.203   5.751   0.3607                                          HISTORY # 7     1.203   5.751   0.1411                                          HISTORY # 8     1.203   5.751   0.05593                                         HISTORY # Converged to minimum: chi^2 = 1.203 at beta = 5.751                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.751               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.203   0.03729                                         HISTORY # 1     4       1.202   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.601, beta = 5.751, b = 6.326                     HISTORY # after checking limits: a = 4.601, beta = 5.751, b = 6.326             HISTORY # starting values: f(a) = 1.206, f(beta) = 1.202, f(b) = 1.202          HISTORY # after bracketing: f(a) = 1.206, f(beta) = 1.202, f(b) = 1.202         HISTORY # Setting limits: 4.601 <= beta <= 6.326                                HISTORY # Starting with beta = 5.751                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.202   5.751   1.014                                           HISTORY # 2     1.202   5.97    0.5751                                          HISTORY # 3     1.202   5.907   0.2197                                          HISTORY # 4     1.202   5.913   0.06347                                         HISTORY # Converged to minimum: chi^2 = 1.202 at beta = 5.913                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.73 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.753 / AB magnitude                                   MAG_ERR =                0.138 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?_°•"ÿ>ø)Ω!Â£ìøRH•dóôPø!í˚mp	√øBbﬁÔWgø^‘j2˙6?G◊âäêÙ¯?7úqAwîM?:‘)òA4ë        øVA$6ü…ø´ö1≥˛Ö?8îzQ                ø ™;ƒ'}>Îç’z
⁄                        ?;qwﬁòB[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        