SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.15541752799933 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14991935803009 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3687 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1527. / min(X) in image pixels                         XMAX    =                1559. / max(X) in image pixels                         YMIN    =                4516. / min(Y) in image pixels                         YMAX    =                4548. / min(Y) in image pixels                         CENTROID=   (1542.85, 4532.11) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3687 found in the area (1539/4528) to (1546/4535)   HISTORY # Extending the area around object to (1527/4516) to (1559/4548)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0154931, Centroid = (1542.85/4532.11)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.158, f(beta) = 1.159, f(b) = 1.15           HISTORY # after bracketing: f(a) = 1.159, f(beta) = 1.15, f(b) = 1.159          HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.15    8       2.805                                           HISTORY # 2     1.15    8       1.861                                           HISTORY # 3     1.149   8.488   1.278                                           HISTORY # 4     1.149   8.79    0.7896                                          HISTORY # 5     1.149   8.976   0.488                                           HISTORY # 6     1.149   9.091   0.3016                                          HISTORY # 7     1.149   9.162   0.1864                                          HISTORY # 8     1.149   9.206   0.1152                                          HISTORY # 9     1.149   9.234   0.0712                                          HISTORY # Converged to minimum: chi^2 = 1.149 at beta = 9.234                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.234               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.149   0.04432                                         HISTORY # 1     4       1.148   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.387, beta = 9.234, b = 10.16                     HISTORY # after checking limits: a = 4.137, beta = 5.646, b = 7.155             HISTORY # starting values: f(a) = 1.164, f(beta) = 1.156, f(b) = 1.15           HISTORY # after bracketing: f(a) = 1.156, f(beta) = 1.15, f(b) = 1.156          HISTORY # Setting limits: 5.646 <= beta <= 7.248                                HISTORY # Starting with beta = 7.155                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.15    7.155   0.6689                                          HISTORY # 2     1.15    7.155   0.3125                                          HISTORY # 3     1.15    7.155   0.1764                                          HISTORY # Converged to minimum: chi^2 = 1.15 at beta = 7.155                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.14 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.524 / AB magnitude                                   MAG_ERR =                0.193 / AB magnitude erroroÔ.$?ûÕƒ%t>øQŸ/œ®5∑?D®Ü[‘˚?Bfõ•.£Úæ˛Û Ó&g?6I2FØ5¯ø!/›:§|N?>‰’∏—
§        øUº3[v∆øœ\¨ÏFêøK†ñ_\
~                ø9YOÔ;Gaø+¶ˆ»/Ø                        ø f∂ã„                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        