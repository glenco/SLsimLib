SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.43452602733094 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20686232453616 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  770 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7972 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2839. / min(X) in image pixels                         XMAX    =                2875. / max(X) in image pixels                         YMIN    =                7526. / min(Y) in image pixels                         YMAX    =                7562. / min(Y) in image pixels                         CENTROID=   (2855.07, 7543.13) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7972 found in the area (2851/7538) to (2862/7549)   HISTORY # Extending the area around object to (2839/7526) to (2875/7562)        HISTORY # Object 7889 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0267519, Centroid = (2855.07/7543.13)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.336, f(beta) = 1.252, f(b) = 1.257          HISTORY # after bracketing: f(a) = 1.336, f(beta) = 1.252, f(b) = 1.257         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.244   5.528   4                                               HISTORY # 2     1.244   5.289   1.528                                           HISTORY # 3     1.244   5.289   1.319                                           HISTORY # 4     1.244   5.289   0.5227                                          HISTORY # 5     1.244   5.289   0.2184                                          HISTORY # 6     1.244   5.289   0.1021                                          HISTORY # 7     1.244   5.289   0.05773                                         HISTORY # Converged to minimum: chi^2 = 1.244 at beta = 5.289                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.289               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.244   0.03937                                         HISTORY # 1     4       1.215   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.231, beta = 5.289, b = 5.818                     HISTORY # after checking limits: a = 4.231, beta = 5.289, b = 5.818             HISTORY # starting values: f(a) = 1.208, f(beta) = 1.215, f(b) = 1.222          HISTORY # after bracketing: f(a) = 1.246, f(beta) = 1.208, f(b) = 1.215         HISTORY # Setting limits: 2.821 <= beta <= 5.289                                HISTORY # Starting with beta = 4.231                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.208   4.231   1.597                                           HISTORY # 2     1.208   4.635   1.058                                           HISTORY # 3     1.207   4.435   0.4041                                          HISTORY # 4     1.207   4.435   0.2033                                          HISTORY # 5     1.207   4.435   0.07776                                         HISTORY # Converged to minimum: chi^2 = 1.207 at beta = 4.435                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.85 / photometric redshift                           SED_TYPE=                    1 / SED template                                   MAG     =               28.632 / AB magnitude                                   MAG_ERR =                0.084 / AB magnitude errorkîu’³ÊS¿L4GI4Æ?A}zâÌ×|¿Dy\5â?N,”ÇÞ ?M¯#Öä¿X¶^4u“\?YZ`tÚó¿FCà.[¿        ¿:¿…d-Pá¿ D3Šô¢?QQÓE•MI                ?3é8Ã~|©?OTº5Þê                        ?+›‚²:—                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        