SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.35211278791939 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18721008178442 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6561 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8005. / min(X) in image pixels                         XMAX    =                8043. / max(X) in image pixels                         YMIN    =                5969. / min(Y) in image pixels                         YMAX    =                6007. / min(Y) in image pixels                         CENTROID=    (8022.4, 5987.57) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6561 found in the area (8017/5983) to (8030/5992)   HISTORY # Extending the area around object to (8005/5969) to (8043/6007)        HISTORY # Object 6145 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.019329, Centroid = (8022.4/5987.57)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.22, f(beta) = 1.21, f(b) = 1.22             HISTORY # after bracketing: f(a) = 1.22, f(beta) = 1.21, f(b) = 1.22            HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.209   5.528   4                                               HISTORY # 2     1.209   5.528   2.472                                           HISTORY # 3     1.209   4.944   1.528                                           HISTORY # 4     1.209   5.211   0.5836                                          HISTORY # 5     1.209   5.224   0.3167                                          HISTORY # 6     1.209   5.224   0.1286                                          HISTORY # 7     1.209   5.235   0.1162                                          HISTORY # 8     1.209   5.234   0.01195                                         HISTORY # Converged to minimum: chi^2 = 1.209 at beta = 5.234                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.234               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.209   0.03729                                         HISTORY # 1     4       1.208   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.187, beta = 5.234, b = 5.757                     HISTORY # after checking limits: a = 4.187, beta = 5.234, b = 5.757             HISTORY # starting values: f(a) = 1.207, f(beta) = 1.208, f(b) = 1.207          HISTORY # after bracketing: f(a) = 1.193, f(beta) = 1.191, f(b) = 1.207         HISTORY # Setting limits: 1.861 <= beta <= 4.187                                HISTORY # Starting with beta = 2.791                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   2.791   1.464                                           HISTORY # 2     1.187   2.436   0.9305                                          HISTORY # 3     1.187   2.436   0.5751                                          HISTORY # 4     1.187   2.436   0.3554                                          HISTORY # 5     1.187   2.352   0.2197                                          HISTORY # 6     1.187   2.352   0.1358                                          HISTORY # 7     1.187   2.352   0.0839                                          HISTORY # Converged to minimum: chi^2 = 1.187 at beta = 2.352                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  1.6 / photometric redshift                           SED_TYPE=                    5 / SED template                                   MAG     =               29.914 / AB magnitude                                   MAG_ERR =                0.155 / AB magnitude errorý†ßÕõÂ?,Z"p?3cúz0Tÿ¿CÑrøÏŠ¹?7c%šÝ8¿3a
«ûSi?FQfH6Þ?HGÂý/!l¿QmÏy›÷        ?2¶Ñ6²l¿7=ªÈÌ¿~?=•Ðcd'                ?9å.ŽÆñ?ñ›ùã‰—                        >ùz…I                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        