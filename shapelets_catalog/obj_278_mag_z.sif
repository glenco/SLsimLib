SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.60263112349929 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12493869053522 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  769 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  278 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5274. / min(X) in image pixels                         XMAX    =                5308. / max(X) in image pixels                         YMIN    =                1626. / min(Y) in image pixels                         YMAX    =                1660. / min(Y) in image pixels                         CENTROID=   (5291.74, 1642.15) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 278 found in the area (5286/1639) to (5296/1647)    HISTORY # Extending the area around object to (5274/1626) to (5308/1660)        HISTORY # Object 279 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0253738, Centroid = (5291.74/1642.15)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.193, f(beta) = 1.153, f(b) = 1.147          HISTORY # after bracketing: f(a) = 1.153, f(beta) = 1.147, f(b) = 1.153         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.147   8       3.383                                           HISTORY # 2     1.147   8.709   1.855                                           HISTORY # 3     1.146   9.146   1.146                                           HISTORY # 4     1.146   9.417   0.7085                                          HISTORY # 5     1.146   9.518   0.4379                                          HISTORY # 6     1.146   9.554   0.3365                                          HISTORY # 7     1.146   9.561   0.3008                                          HISTORY # 8     1.146   9.562   0.294                                           HISTORY # 9     1.146   9.562   0.2933                                          HISTORY # 10    1.146   9.562   0.2932                                          HISTORY # 11    1.146   9.562   0.112                                           HISTORY # 12    1.146   9.562   0.04278                                         HISTORY # Converged to minimum: chi^2 = 1.146 at beta = 9.562                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.562               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.146   0.0417                                          HISTORY # 1     4       1.125   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.649, beta = 9.562, b = 10.52                     HISTORY # after checking limits: a = 4.36, beta = 5.981, b = 7.603              HISTORY # starting values: f(a) = 1.13, f(beta) = 1.128, f(b) = 1.125           HISTORY # after bracketing: f(a) = 1.128, f(beta) = 1.125, f(b) = 1.128         HISTORY # Setting limits: 5.981 <= beta <= 7.698                                HISTORY # Starting with beta = 7.603                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   7.603   0.7148                                          HISTORY # 2     1.125   7.603   0.3321                                          HISTORY # 3     1.125   7.603   0.186                                           HISTORY # Converged to minimum: chi^2 = 1.125 at beta = 7.603                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.23 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.059 / AB magnitude                                   MAG_ERR =                 0.16 / AB magnitude errorc_kÇòÄC?4eÇjóø$O¿,¢<—>Ëµ>MÌâ?ÓMºötúøIWºœŒp@?8∑∏?óIC?GüãÜ^G3?ABK€ç±        ?2∑+™ÏqÕø4ec§S%?Q·$àl}                ø;\Tâ?CM¿}/                        ?MÁåƒÂù                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        