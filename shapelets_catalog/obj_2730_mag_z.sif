SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.78211220229253 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10191508175854 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2730 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3517. / min(X) in image pixels                         XMAX    =                3557. / max(X) in image pixels                         YMIN    =                3978. / min(Y) in image pixels                         YMAX    =                4018. / min(Y) in image pixels                         CENTROID=   (3536.08, 3998.37) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2730 found in the area (3529/3990) to (3545/4005)   HISTORY # Extending the area around object to (3517/3978) to (3557/4018)        HISTORY # Object 2734 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0850301, Centroid = (3536.08/3998.37)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.238, f(beta) = 1.618, f(b) = 1.998          HISTORY # after bracketing: f(a) = 1.618, f(beta) = 1.238, f(b) = 1.618         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.231   2.445   4.134                                           HISTORY # 2     1.158   1.678   1.579                                           HISTORY # 3     1.158   1.672   0.8124                                          HISTORY # 4     1.158   1.672   0.3142                                          HISTORY # 5     1.155   1.554   0.3079                                          HISTORY # 6     1.155   1.52    0.1903                                          HISTORY # 7     1.155   1.525   0.0349                                          HISTORY # Converged to minimum: chi^2 = 1.155 at beta = 1.525                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.525               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.155   0.03542                                         HISTORY # 1     4       1.111   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.22, beta = 1.525, b = 1.677                      HISTORY # after checking limits: a = 1.22, beta = 1.525, b = 1.677              HISTORY # starting values: f(a) = 1.146, f(beta) = 1.111, f(b) = 1.103          HISTORY # after bracketing: f(a) = 1.111, f(beta) = 1.103, f(b) = 1.147         HISTORY # Setting limits: 1.525 <= beta <= 2.516                                HISTORY # Starting with beta = 1.677                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.103   1.677   0.4727                                          HISTORY # 2     1.102   1.799   0.3203                                          HISTORY # 3     1.102   1.786   0.1223                                          HISTORY # 4     1.102   1.783   0.1086                                          HISTORY # 5     1.102   1.782   0.1057                                          HISTORY # 6     1.102   1.782   0.0005894                                       HISTORY # Converged to minimum: chi^2 = 1.102 at beta = 1.782                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.68 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.159 / AB magnitude                                   MAG_ERR =                0.049 / AB magnitude erroràÚÖÄ§Ó∂?:‡y_®«øS≈Œ,†ã?hp2˜òÕ?WÇ™∂)/>ƒÚBÊÀD|?1‘Ûd∑†ø:fp?–£?1∞o±ÿ        ø@èZ¿?@ãâM™`?_C≠òª¸                ?ABIñˇ>ÙG2è◊¬ﬁ                        ?TÁ'2’
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        