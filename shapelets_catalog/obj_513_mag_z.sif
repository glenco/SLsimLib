SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.77894966407294 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17421468328706 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  513 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6541. / min(X) in image pixels                         XMAX    =                6601. / max(X) in image pixels                         YMIN    =                2036. / min(Y) in image pixels                         YMAX    =                2096. / min(Y) in image pixels                         CENTROID=   (6569.04, 2066.26) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 513 found in the area (6553/2050) to (6588/2082)    HISTORY # Extending the area around object to (6541/2036) to (6601/2096)        HISTORY # Object 524 nearby, but not overlapping.                               HISTORY # Object 1034 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.404717, Centroid = (6569.04/2066.26) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 3.495, f(beta) = 1.22, f(b) = 1.714           HISTORY # after bracketing: f(a) = 3.495, f(beta) = 1.22, f(b) = 1.714          HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.22    7       8.808                                           HISTORY # 2     1.22    7       5.017                                           HISTORY # 3     1.22    7       3.364                                           HISTORY # 4     1.211   6.105   2.343                                           HISTORY # 5     1.211   6.036   1.448                                           HISTORY # 6     1.211   6.03    1.379                                           HISTORY # 7     1.211   6.032   0.006449                                        HISTORY # Converged to minimum: chi^2 = 1.211 at beta = 6.032                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.032               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.211   0.02359                                         HISTORY # 1     4       1.179   0.02362                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.826, beta = 6.032, b = 6.636                     HISTORY # after checking limits: a = 4.826, beta = 6.032, b = 6.636             HISTORY # starting values: f(a) = 1.174, f(beta) = 1.179, f(b) = 1.181          HISTORY # after bracketing: f(a) = 1.279, f(beta) = 1.174, f(b) = 1.179         HISTORY # Setting limits: 3.217 <= beta <= 6.032                                HISTORY # Starting with beta = 4.826                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.174   4.826   1.821                                           HISTORY # 2     1.174   4.826   1.075                                           HISTORY # 3     1.174   4.826   0.6955                                          HISTORY # 4     1.174   4.826   0.4107                                          HISTORY # 5     1.174   4.736   0.2347                                          HISTORY # 6     1.174   4.779   0.08965                                         HISTORY # Converged to minimum: chi^2 = 1.174 at beta = 4.779                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 0.63 / photometric redshift                           SED_TYPE=                    9 / SED template                                   MAG     =               26.185 / AB magnitude                                   MAG_ERR =                0.016 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?ô‘V•∆Ê∏øBÄ®≤ñ@e?vó/['∑?E*W-˘?ç?Vü3ñ0>´øLï‘2à(øEÖ¯nï?W«ƒTŒ‚øQ eMá        ?eˆGˆzÒº?\ç	‹g·?Qm·ŸSÊ8                ø"Ô^◊ÏøI€X
∑                        ?c4Å§aÚÇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        