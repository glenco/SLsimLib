SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      4.0063215386116 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10705143863682 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5009 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7203. / min(X) in image pixels                         XMAX    =                7235. / max(X) in image pixels                         YMIN    =                5173. / min(Y) in image pixels                         YMAX    =                5205. / min(Y) in image pixels                         CENTROID=   (7218.03, 5188.48) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5009 found in the area (7215/5186) to (7222/5191)   HISTORY # Extending the area around object to (7203/5173) to (7235/5205)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0105696, Centroid = (7218.03/5188.48)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.13, f(beta) = 1.131, f(b) = 1.125           HISTORY # after bracketing: f(a) = 1.131, f(beta) = 1.125, f(b) = 1.131         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   8       2.805                                           HISTORY # 2     1.125   8       1.861                                           HISTORY # 3     1.125   8.488   1.278                                           HISTORY # 4     1.125   8.503   0.7896                                          HISTORY # 5     1.125   8.799   0.7741                                          HISTORY # 6     1.125   8.695   0.2957                                          HISTORY # 7     1.125   8.695   0.1934                                          HISTORY # 8     1.125   8.695   0.07506                                         HISTORY # Converged to minimum: chi^2 = 1.125 at beta = 8.695                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 8.695               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.125   0.04432                                         HISTORY # 1     4       1.123   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.956, beta = 8.695, b = 9.564                     HISTORY # after checking limits: a = 6.956, beta = 7.056, b = 7.155             HISTORY # starting values: f(a) = 1.121, f(beta) = 1.122, f(b) = 1.122          HISTORY # after bracketing: f(a) = 1.118, f(beta) = 1.11, f(b) = 1.121          HISTORY # Setting limits: 3.092 <= beta <= 6.956                                HISTORY # Starting with beta = 4.637                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.11    4.637   2.431                                           HISTORY # 2     1.107   4.047   1.546                                           HISTORY # 3     1.107   4.047   0.8681                                          HISTORY # 4     1.107   4.047   0.5032                                          HISTORY # 5     1.107   4.047   0.3316                                          HISTORY # 6     1.107   4.047   0.1922                                          HISTORY # 7     1.107   4.006   0.1061                                          HISTORY # Converged to minimum: chi^2 = 1.107 at beta = 4.006                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.94 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               30.314 / AB magnitude                                   MAG_ERR =                0.227 / AB magnitude errorÕJ˜¯Ó?/pvÔ1ÿŸ¿:^+Ïl/?@Gÿ^Ó@\>úš¥ó}¦}¿3m ž¬õŽ?.0”ýºCñ¿9Á°ÁC_Ë¿JQ1dz        ¿†ÎÆj“²?C¹¬-Òu:?5Bå5g©å                ?"f«=ðÑÊ?*…¹À¼                        ?Má¶Ñ†                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        