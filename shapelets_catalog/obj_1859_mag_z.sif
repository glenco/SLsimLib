SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.80252128898906 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =       1.331144928904 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1859 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2413. / min(X) in image pixels                         XMAX    =                2489. / max(X) in image pixels                         YMIN    =                3438. / min(Y) in image pixels                         YMAX    =                3514. / min(Y) in image pixels                         CENTROID=   (2451.53, 3475.21) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1859 found in the area (2425/3457) to (2476/3494)   HISTORY # Extending the area around object to (2413/3438) to (2489/3514)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.484562, Centroid = (2451.53/3475.21) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 9, b = 18                            HISTORY # after checking limits: a = 0.866, beta = 9, b = 18                    HISTORY # starting values: f(a) = 2.623, f(beta) = 1.499, f(b) = 1.633          HISTORY # after bracketing: f(a) = 2.623, f(beta) = 1.499, f(b) = 1.633         HISTORY # Setting limits: 0.866 <= beta <= 18                                   HISTORY # Starting with beta = 9                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.499   12.44   9                                               HISTORY # 2     1.491   10.73   3.438                                           HISTORY # 3     1.491   10.73   1.714                                           HISTORY # 4     1.491   10.73   0.6569                                          HISTORY # 5     1.491   10.73   0.6532                                          HISTORY # 6     1.491   10.98   0.6532                                          HISTORY # 7     1.491   10.88   0.2495                                          HISTORY # 8     1.491   10.88   0.09786                                         HISTORY # Converged to minimum: chi^2 = 1.491 at beta = 10.88                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 10.88               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.491   0.01862                                         HISTORY # 1     4       1.467   0.01863                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 8.704, beta = 10.88, b = 11.97                     HISTORY # after checking limits: a = 8.704, beta = 10.88, b = 11.97             HISTORY # starting values: f(a) = 1.434, f(beta) = 1.467, f(b) = 1.472          HISTORY # after bracketing: f(a) = 1.491, f(beta) = 1.331, f(b) = 1.434         HISTORY # Setting limits: 3.868 <= beta <= 8.704                                HISTORY # Starting with beta = 5.803                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.331   5.803   3.042                                           HISTORY # 2     1.331   5.803   1.847                                           HISTORY # 3     1.331   5.803   1.162                                           HISTORY # 4     1.331   5.803   0.7055                                          HISTORY # 5     1.331   5.803   0.4439                                          HISTORY # 6     1.331   5.803   0.2695                                          HISTORY # 7     1.331   5.803   0.1695                                          HISTORY # Converged to minimum: chi^2 = 1.331 at beta = 5.803                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.09 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               25.952 / AB magnitude                                   MAG_ERR =                0.015 / AB magnitude error“Ù Hw²?4! í™çd?u\£†€õ?h™æO™ÆF¿`­ô7äš?R ÑÂÂõ¿YH÷u8X?aÿ­Ú;?a<tvJ8        ?€«+¹[è¿rør7Xa|¿^_à—*                ¿f«€E
±V¿5ÃD&<                        ?wEËsÌ)C                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        