SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.60933314632453 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.23387078198961 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6923 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2598. / min(X) in image pixels                         XMAX    =                2638. / max(X) in image pixels                         YMIN    =                6162. / min(Y) in image pixels                         YMAX    =                6202. / min(Y) in image pixels                         CENTROID=   (2618.25, 6180.78) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6923 found in the area (2611/6174) to (2625/6190)   HISTORY # Extending the area around object to (2598/6162) to (2638/6202)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0583008, Centroid = (2618.25/6180.78)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.372, f(beta) = 1.256, f(b) = 1.262          HISTORY # after bracketing: f(a) = 1.372, f(beta) = 1.256, f(b) = 1.262         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.24    6.91    5                                               HISTORY # 2     1.24    6.91    3.09                                            HISTORY # 3     1.24    6.91    1.91                                            HISTORY # 4     1.24    6.91    1.18                                            HISTORY # 5     1.24    6.91    0.7295                                          HISTORY # 6     1.24    7.082   0.4508                                          HISTORY # 7     1.24    7.029   0.1722                                          HISTORY # 8     1.24    7.028   0.1187                                          HISTORY # 9     1.24    7.027   0.1178                                          HISTORY # 10    1.24    7.027   0.0003055                                       HISTORY # Converged to minimum: chi^2 = 1.24 at beta = 7.027                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.027               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.24    0.03542                                         HISTORY # 1     4       1.235   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.622, beta = 7.027, b = 7.73                      HISTORY # after checking limits: a = 5.622, beta = 7.027, b = 7.73              HISTORY # starting values: f(a) = 1.239, f(beta) = 1.235, f(b) = 1.234          HISTORY # after bracketing: f(a) = 1.235, f(beta) = 1.234, f(b) = 1.235         HISTORY # Setting limits: 7.027 <= beta <= 9.015                                HISTORY # Starting with beta = 7.73                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.234   7.73    1.193                                           HISTORY # 2     1.234   7.73    0.7591                                          HISTORY # 3     1.234   7.73    0.4558                                          HISTORY # 4     1.234   7.627   0.2684                                          HISTORY # 5     1.234   7.608   0.1659                                          HISTORY # 6     1.234   7.609   0.01949                                         HISTORY # Converged to minimum: chi^2 = 1.234 at beta = 7.609                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.65 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               28.813 / AB magnitude                                   MAG_ERR =                0.074 / AB magnitude errord{Í¿•â?AÛ8GØ&Ü¿a>—Mƒ^?6³/R¢?/¦íún¿7ÄFmû/¿M=Œ•§ãŽ?!E„ûèL'¾þúJ×Ì#        ¿gYY™)˜¿D(ËŒžú3¿CàU&´ž                ?D…ðŽÓÜ¿)NÝnƒÑÕ                        ?K:ØùêoÜ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        