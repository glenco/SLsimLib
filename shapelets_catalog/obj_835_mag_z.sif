SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.19147425804095 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18989388178541 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  835 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5315. / min(X) in image pixels                         XMAX    =                5357. / max(X) in image pixels                         YMIN    =                2411. / min(Y) in image pixels                         YMAX    =                2453. / min(Y) in image pixels                         CENTROID=   (5335.25, 2432.02) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 835 found in the area (5329/2423) to (5342/2441)    HISTORY # Extending the area around object to (5315/2411) to (5357/2453)        HISTORY # Object 856 nearby, but not overlapping.                               HISTORY # Object 819 nearby, but not overlapping.                               HISTORY # Object 1484 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0554773, Centroid = (5335.25/2432.02)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.307, f(beta) = 1.227, f(b) = 1.231          HISTORY # after bracketing: f(a) = 1.307, f(beta) = 1.227, f(b) = 1.231         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.22    6.91    5                                               HISTORY # 2     1.22    6.91    1.929                                           HISTORY # 3     1.22    6.91    0.7487                                          HISTORY # 4     1.22    6.91    0.2979                                          HISTORY # 5     1.22    6.91    0.1257                                          HISTORY # 6     1.22    6.91    0.05989                                         HISTORY # Converged to minimum: chi^2 = 1.22 at beta = 6.91                     HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.91                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.22    0.03373                                         HISTORY # 1     4       1.206   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.528, beta = 6.91, b = 7.601                      HISTORY # after checking limits: a = 5.528, beta = 6.91, b = 7.601              HISTORY # starting values: f(a) = 1.191, f(beta) = 1.206, f(b) = 1.212          HISTORY # after bracketing: f(a) = 1.209, f(beta) = 1.191, f(b) = 1.206         HISTORY # Setting limits: 3.685 <= beta <= 6.91                                 HISTORY # Starting with beta = 5.528                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   5.528   2.086                                           HISTORY # 2     1.191   5.528   1.232                                           HISTORY # 3     1.19    5.259   0.7038                                          HISTORY # 4     1.19    5.197   0.435                                           HISTORY # 5     1.19    5.189   0.3733                                          HISTORY # 6     1.19    5.191   0.008224                                        HISTORY # Converged to minimum: chi^2 = 1.19 at beta = 5.191                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.77 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               28.801 / AB magnitude                                   MAG_ERR =                0.084 / AB magnitude errorlü3Ñ¿DµÞ ‡°?FÁ*oí„¿PÞóêx‡?BÊ£z=-ý??XªƒNû¿JŠ{Û)Šù?R‰„]bI¿R“sÎ&’        ¿NÞ-,¸:3?*ÂEÁ(Õ²?-NÿF††?                ?IwÂÝªÝµ?#‡ôgË?Ð                        ?GöÉ#¨Ž                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        