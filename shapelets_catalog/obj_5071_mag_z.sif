SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.73303220751731 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13134797931362 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5071 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6727. / min(X) in image pixels                         XMAX    =                6759. / max(X) in image pixels                         YMIN    =                5213. / min(Y) in image pixels                         YMAX    =                5245. / min(Y) in image pixels                         CENTROID=   (6742.59, 5228.32) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5071 found in the area (6739/5225) to (6746/5232)   HISTORY # Extending the area around object to (6727/5213) to (6759/5245)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0144072, Centroid = (6742.59/5228.32)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.142, f(beta) = 1.164, f(b) = 1.215          HISTORY # after bracketing: f(a) = 1.164, f(beta) = 1.142, f(b) = 1.164         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.133   2.063   3.134                                           HISTORY # 2     1.131   1.83    1.197                                           HISTORY # 3     1.131   1.759   0.9639                                          HISTORY # 4     1.13    1.418   0.8932                                          HISTORY # 5     1.13    1.418   0.552                                           HISTORY # 6     1.13    1.418   0.3412                                          HISTORY # 7     1.13    1.418   0.2108                                          HISTORY # 8     1.13    1.418   0.1303                                          HISTORY # 9     1.13    1.387   0.08054                                         HISTORY # 10    1.13    1.387   0.04482                                         HISTORY # Converged to minimum: chi^2 = 1.13 at beta = 1.387                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.387               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.13    0.04432                                         HISTORY # 1     4       1.133   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.11, beta = 1.387, b = 1.526                      HISTORY # after checking limits: a = 1.118, beta = 1.387, b = 1.526             HISTORY # starting values: f(a) = 1.134, f(beta) = 1.133, f(b) = 1.132          HISTORY # after bracketing: f(a) = 1.133, f(beta) = 1.132, f(b) = 1.134         HISTORY # Setting limits: 1.387 <= beta <= 2.289                                HISTORY # Starting with beta = 1.526                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.131   1.817   0.763                                           HISTORY # 2     1.131   1.726   0.2914                                          HISTORY # 3     1.131   1.726   0.09157                                         HISTORY # 4     1.131   1.726   0.03514                                         HISTORY # 5     1.131   1.739   0.03487                                         HISTORY # 6     1.131   1.733   0.01332                                         HISTORY # Converged to minimum: chi^2 = 1.131 at beta = 1.733                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.08 / photometric redshift                           SED_TYPE=                   15 / SED template                                   MAG     =               29.984 / AB magnitude                                   MAG_ERR =                0.119 / AB magnitude errorhšô'ˆÒ?8Êjˆº }?1Kº(¢Ó?*i¨Gò†¿6Ûè&7¿.Ô˜Mb?ä?4è5’Ñõ?6ŸðJ&š¿6ÿýbVA        ¿(_ôƒžë‚¿5Ôœµù5-?%Fð€r                ¿/võhÉ"¡¿;žÿÑXýÞ                        ?þ»VŽË|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        