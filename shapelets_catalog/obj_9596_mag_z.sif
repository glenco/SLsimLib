SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.71012749634322 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14187166543944 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9596 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5028. / min(X) in image pixels                         XMAX    =                5062. / max(X) in image pixels                         YMIN    =                8528. / min(Y) in image pixels                         YMAX    =                8562. / min(Y) in image pixels                         CENTROID=    (5044.13, 8544.6) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9596 found in the area (5041/8540) to (5048/8549)   HISTORY # Extending the area around object to (5028/8528) to (5062/8562)        HISTORY # Object 9688 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0172471, Centroid = (5044.13/8544.6) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.186, f(beta) = 1.172, f(b) = 1.247          HISTORY # after bracketing: f(a) = 1.186, f(beta) = 1.172, f(b) = 1.247         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.172   4       4.662                                           HISTORY # 2     1.158   2.803   3.134                                           HISTORY # 3     1.157   2.29    1.937                                           HISTORY # 4     1.157   2.494   0.5131                                          HISTORY # 5     1.157   2.494   0.3212                                          HISTORY # 6     1.157   2.494   0.1304                                          HISTORY # 7     1.157   2.494   0.1179                                          HISTORY # 8     1.157   2.494   0.04505                                         HISTORY # Converged to minimum: chi^2 = 1.157 at beta = 2.494                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.494               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.157   0.0417                                          HISTORY # 1     4       1.155   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.995, beta = 2.494, b = 2.744                     HISTORY # after checking limits: a = 1.995, beta = 2.494, b = 2.744             HISTORY # starting values: f(a) = 1.145, f(beta) = 1.155, f(b) = 1.158          HISTORY # after bracketing: f(a) = 1.148, f(beta) = 1.145, f(b) = 1.155         HISTORY # Setting limits: 1.33 <= beta <= 2.494                                 HISTORY # Starting with beta = 1.995                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.142   1.741   0.6651                                          HISTORY # 2     1.142   1.703   0.4111                                          HISTORY # 3     1.142   1.71    0.03851                                         HISTORY # Converged to minimum: chi^2 = 1.142 at beta = 1.71                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  2.6 / photometric redshift                           SED_TYPE=                    2 / SED template                                   MAG     =                 29.7 / AB magnitude                                   MAG_ERR =                0.103 / AB magnitude errorkÁÀ%}G?>≈Ë‡Sﬁò?Hyı›øBT…‰ô.??πõùˆ¡£øN–‘œ,?"NT•BÍRøÊB^ÇâuøHı,0´‡”        ø!©)ß¢îøJk»¨#æ?5a™ﬂ__                ø3vUØ&?ó˝È“‡_                        ø5ø/Øˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        