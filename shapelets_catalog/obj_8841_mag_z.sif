SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.47378478220155 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.27944293555496 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8841 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2223. / min(X) in image pixels                         XMAX    =                2279. / max(X) in image pixels                         YMIN    =                6766. / min(Y) in image pixels                         YMAX    =                6822. / min(Y) in image pixels                         CENTROID=   (2247.72, 6792.49) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8841 found in the area (2235/6785) to (2266/6802)   HISTORY # Extending the area around object to (2223/6766) to (2279/6822)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.18377, Centroid = (2247.72/6792.49)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 1.69, f(beta) = 1.569, f(b) = 1.849           HISTORY # after bracketing: f(a) = 1.69, f(beta) = 1.569, f(b) = 1.849          HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.569   7       8.808                                           HISTORY # 2     1.441   4.657   6.134                                           HISTORY # 3     1.388   3.209   3.791                                           HISTORY # 4     1.382   2.314   2.343                                           HISTORY # 5     1.381   2.499   0.8949                                          HISTORY # 6     1.381   2.499   0.247                                           HISTORY # 7     1.381   2.499   0.133                                           HISTORY # Converged to minimum: chi^2 = 1.381 at beta = 2.499                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.499               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.381   0.02528                                         HISTORY # 1     4       1.323   0.02531                                         HISTORY # 2     6       1.308   0.02537                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.999, beta = 2.499, b = 2.748                     HISTORY # after checking limits: a = 1.999, beta = 2.499, b = 2.748             HISTORY # starting values: f(a) = 1.332, f(beta) = 1.308, f(b) = 1.298          HISTORY # after bracketing: f(a) = 1.298, f(beta) = 1.292, f(b) = 1.375         HISTORY # Setting limits: 2.748 <= beta <= 6.184                                HISTORY # Starting with beta = 4.123                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.292   4.123   2.162                                           HISTORY # 2     1.28    3.598   1.374                                           HISTORY # 3     1.28    3.598   0.8493                                          HISTORY # 4     1.28    3.598   0.5249                                          HISTORY # 5     1.279   3.474   0.3244                                          HISTORY # 6     1.279   3.474   0.1447                                          HISTORY # 7     1.279   3.474   0.06813                                         HISTORY # 8     1.279   3.474   0.04733                                         HISTORY # Converged to minimum: chi^2 = 1.279 at beta = 3.474                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.27 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =                27.46 / AB magnitude                                   MAG_ERR =                0.032 / AB magnitude error‹¶ˆ¾f.¿/Òž¬â¿oµ¾Ša‡?JÖŒ^o	ˆ?^
U`QHè¿A LÝUt¦¿Q2àÚ¿-‘¹Öö¤'?2m$¦%g?EÆŸte?)TÀ#~±¿(‚ÍDõº?jéïçc        ?Ejfÿ–Æ?O+ë3ì?8å3û¿2&[7f£µ¿0 9«€©                ?cÝO}™<Ë?FÁ\Çáê¿S¾6 ŽÂK?dm¯x²§                        ?h"Æq¨T¯?,MO=kÉ¿Q“`u
                                ¿P¦$yI€?7¼ÇR%È                                        ?\öÁ‡°¶                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        