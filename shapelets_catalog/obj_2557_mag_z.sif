SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.63615984853969 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18569274050122 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2557 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3373. / min(X) in image pixels                         XMAX    =                3409. / max(X) in image pixels                         YMIN    =                3868. / min(Y) in image pixels                         YMAX    =                3904. / min(Y) in image pixels                         CENTROID=   (3389.87, 3885.17) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2557 found in the area (3385/3880) to (3396/3891)   HISTORY # Extending the area around object to (3373/3868) to (3409/3904)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0488732, Centroid = (3389.87/3885.17)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.274, f(beta) = 1.428, f(b) = 1.691          HISTORY # after bracketing: f(a) = 1.428, f(beta) = 1.274, f(b) = 1.428         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.25    2.063   3.134                                           HISTORY # 2     1.225   1.59    1.197                                           HISTORY # 3     1.225   1.564   0.7235                                          HISTORY # 4     1.225   1.564   0.2922                                          HISTORY # 5     1.223   1.462   0.2666                                          HISTORY # 6     1.223   1.425   0.1647                                          HISTORY # 7     1.223   1.432   0.03726                                         HISTORY # Converged to minimum: chi^2 = 1.223 at beta = 1.432                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.432               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.223   0.03937                                         HISTORY # 1     4       1.189   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.145, beta = 1.432, b = 1.575                     HISTORY # after checking limits: a = 1.145, beta = 1.432, b = 1.575             HISTORY # starting values: f(a) = 1.208, f(beta) = 1.189, f(b) = 1.186          HISTORY # after bracketing: f(a) = 1.189, f(beta) = 1.186, f(b) = 1.212         HISTORY # Setting limits: 1.432 <= beta <= 2.362                                HISTORY # Starting with beta = 1.575                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.186   1.575   0.4439                                          HISTORY # 2     1.186   1.69    0.3007                                          HISTORY # 3     1.186   1.637   0.1149                                          HISTORY # 4     1.186   1.636   0.06199                                         HISTORY # 5     1.186   1.636   0.024                                           HISTORY # Converged to minimum: chi^2 = 1.186 at beta = 1.636                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.94 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               28.768 / AB magnitude                                   MAG_ERR =                0.058 / AB magnitude errorÅáUõﬁHøH˚0Q°^éø6#∏vã˘ò?*td‚Fıë?SØÜWY9ø8ÿ>aEøC u{òóƒ?OHƒê‘[?ñEdÚÕ        ø;”P5˝Åø-vk¥:?REx@ï                ?BÔç_ö¬ø1åjõ·[                        ?H[˚ÂKö                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        