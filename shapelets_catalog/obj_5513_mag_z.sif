SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.74318153383845 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.0437357821939 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5513 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                9224. / min(X) in image pixels                         XMAX    =                9256. / max(X) in image pixels                         YMIN    =                5431. / min(Y) in image pixels                         YMAX    =                5463. / min(Y) in image pixels                         CENTROID=    (9239.63, 5447.7) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5513 found in the area (9236/5443) to (9243/5451)   HISTORY # Extending the area around object to (9224/5431) to (9256/5463)        HISTORY # Object 5495 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.019672, Centroid = (9239.63/5447.7)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.087, f(beta) = 1.053, f(b) = 1.066          HISTORY # after bracketing: f(a) = 1.087, f(beta) = 1.053, f(b) = 1.066         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.053   4       4.662                                           HISTORY # 2     1.053   4       2.725                                           HISTORY # 3     1.053   4       1.781                                           HISTORY # 4     1.052   3.543   1.197                                           HISTORY # 5     1.052   3.32    0.7398                                          HISTORY # 6     1.052   3.396   0.2225                                          HISTORY # 7     1.052   3.405   0.147                                           HISTORY # 8     1.052   3.403   0.009623                                        HISTORY # Converged to minimum: chi^2 = 1.052 at beta = 3.403                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.403               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.052   0.04432                                         HISTORY # 1     4       1.045   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.722, beta = 3.403, b = 3.743                     HISTORY # after checking limits: a = 2.722, beta = 3.403, b = 3.743             HISTORY # starting values: f(a) = 1.049, f(beta) = 1.045, f(b) = 1.044          HISTORY # after bracketing: f(a) = 1.045, f(beta) = 1.044, f(b) = 1.054         HISTORY # Setting limits: 3.403 <= beta <= 5.615                                HISTORY # Starting with beta = 3.743                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.044   3.743   1.055                                           HISTORY # 2     1.044   3.743   0.6134                                          HISTORY # 3     1.044   3.743   0.403                                           HISTORY # 4     1.044   3.743   0.2343                                          HISTORY # 5     1.044   3.743   0.1539                                          HISTORY # 6     1.044   3.743   0.08949                                         HISTORY # 7     1.044   3.743   0.0588                                          HISTORY # Converged to minimum: chi^2 = 1.044 at beta = 3.743                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.93 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               29.993 / AB magnitude                                   MAG_ERR =                0.151 / AB magnitude error`z¼ì¦|Ó¿;@´ôÏ{¿Lžè?-”Â.=2?’|Be¿p2*É-¿/ðÇÒ/åº¿Cï›¯cÊ?dÆºþ        ?$½€É!¿$x£Ì†Ñr?AßðÞI‰                ?9™#¬e&¿ó2÷°ég                        ?Cá6NñÇ|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        