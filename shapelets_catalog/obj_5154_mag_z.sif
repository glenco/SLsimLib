SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      3.9100232250161 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20322448804982 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5154 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2124. / min(X) in image pixels                         XMAX    =                2154. / max(X) in image pixels                         YMIN    =                5256. / min(Y) in image pixels                         YMAX    =                5286. / min(Y) in image pixels                         CENTROID=   (2139.04, 5270.35) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5154 found in the area (2136/5268) to (2142/5273)   HISTORY # Extending the area around object to (2124/5256) to (2154/5286)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00793371, Centroid = (2139.04/5270.35HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.214, f(beta) = 1.203, f(b) = 1.207          HISTORY # after bracketing: f(a) = 1.214, f(beta) = 1.203, f(b) = 1.207         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.203   3       3.28                                            HISTORY # 2     1.203   3       1.961                                           HISTORY # 3     1.203   3.438   1.146                                           HISTORY # 4     1.203   3.231   0.4377                                          HISTORY # 5     1.203   3.231   0.2336                                          HISTORY # 6     1.203   3.231   0.09081                                         HISTORY # 7     1.203   3.231   0.03628                                         HISTORY # Converged to minimum: chi^2 = 1.203 at beta = 3.231                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.231               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.203   0.0473                                          HISTORY # 1     4       1.206   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.585, beta = 3.231, b = 3.554                     HISTORY # after checking limits: a = 2.585, beta = 3.231, b = 3.554             HISTORY # starting values: f(a) = 1.211, f(beta) = 1.206, f(b) = 1.204          HISTORY # after bracketing: f(a) = 1.206, f(beta) = 1.204, f(b) = 1.209         HISTORY # Setting limits: 3.231 <= beta <= 5.331                                HISTORY # Starting with beta = 3.554                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.204   4.233   1.777                                           HISTORY # 2     1.203   3.92    0.6788                                          HISTORY # 3     1.203   3.92    0.3663                                          HISTORY # 4     1.203   3.92    0.1402                                          HISTORY # 5     1.203   3.909   0.1397                                          HISTORY # 6     1.203   3.91    0.01053                                         HISTORY # Converged to minimum: chi^2 = 1.203 at beta = 3.91                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.92 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               31.179 / AB magnitude                                   MAG_ERR =                0.296 / AB magnitude error~åx2;>˛!œÅ0íqøVäΩÅe?Fé&˙áX$?_…≥™'^øx∞ôú‰8æˇó9„¬Aæ¸ˇΩäT5⁄?C
Ádcàú        øQz*
~?$j‘øù»ëæ∑∏R≠Ë∏Ó                ?äw◊TJ?€Æ‹{U¥                        ?NqÊYÑJ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        