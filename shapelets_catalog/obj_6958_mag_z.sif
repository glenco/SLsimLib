SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.15541752799933 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.24187251482152 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6958 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2386. / min(X) in image pixels                         XMAX    =                2418. / max(X) in image pixels                         YMIN    =                6167. / min(Y) in image pixels                         YMAX    =                6199. / min(Y) in image pixels                         CENTROID=   (2402.07, 6182.68) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6958 found in the area (2398/6180) to (2406/6185)   HISTORY # Extending the area around object to (2386/6167) to (2418/6199)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0103366, Centroid = (2402.07/6182.68)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.322, f(beta) = 1.295, f(b) = 1.242          HISTORY # after bracketing: f(a) = 1.295, f(beta) = 1.242, f(b) = 1.295         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.242   8       2.805                                           HISTORY # 2     1.242   8       1.861                                           HISTORY # 3     1.241   8.488   1.278                                           HISTORY # 4     1.241   8.488   0.797                                           HISTORY # 5     1.241   8.79    0.7896                                          HISTORY # 6     1.241   8.691   0.3016                                          HISTORY # 7     1.241   8.702   0.09891                                         HISTORY # 8     1.241   8.699   0.01118                                         HISTORY # Converged to minimum: chi^2 = 1.241 at beta = 8.699                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 8.699               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.241   0.04432                                         HISTORY # 1     4       1.239   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.96, beta = 8.699, b = 9.569                      HISTORY # after checking limits: a = 6.96, beta = 7.057, b = 7.155              HISTORY # starting values: f(a) = 1.243, f(beta) = 1.242, f(b) = 1.242          HISTORY # after bracketing: f(a) = 1.242, f(beta) = 1.242, f(b) = 1.242         HISTORY # Setting limits: 7.057 <= beta <= 7.242                                HISTORY # Starting with beta = 7.155                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.242   7.155   0.1244                                          HISTORY # Converged to minimum: chi^2 = 1.242 at beta = 7.155                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.77 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =                30.87 / AB magnitude                                   MAG_ERR =                0.223 / AB magnitude error¿?ÖVa‚Hª¿3_œø’±¿ak‚(¯ô?1îîLÞÍ>þÓËA„z¿<º2ÏÄøö?CD½„ž¾óª•øL«—?lfs9C6        ¿_*dÝ€¼û¿1mWF	Œ)¿1D[imz\                >ãM²TOm?Q)U‡ZY                        ¿Bhîºs²                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        