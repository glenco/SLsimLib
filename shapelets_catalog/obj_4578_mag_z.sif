SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.30858307552813 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1991189048195 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4578 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                9124. / min(X) in image pixels                         XMAX    =                9190. / max(X) in image pixels                         YMIN    =                4981. / min(Y) in image pixels                         YMAX    =                5047. / min(Y) in image pixels                         CENTROID=   (9158.31, 5011.89) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4578 found in the area (9136/5001) to (9178/5026)   HISTORY # Extending the area around object to (9124/4981) to (9190/5047)        HISTORY # Object 4733 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.205863, Centroid = (9158.31/5011.89) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 8, b = 16                            HISTORY # after checking limits: a = 0.866, beta = 8, b = 16                    HISTORY # starting values: f(a) = 1.504, f(beta) = 1.335, f(b) = 1.483          HISTORY # after bracketing: f(a) = 1.504, f(beta) = 1.335, f(b) = 1.483         HISTORY # Setting limits: 0.866 <= beta <= 16                                   HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.335   8       10.19                                           HISTORY # 2     1.273   5.275   7.134                                           HISTORY # 3     1.248   3.591   4.409                                           HISTORY # 4     1.248   3.591   2.725                                           HISTORY # 5     1.248   3.591   1.684                                           HISTORY # 6     1.248   3.193   1.041                                           HISTORY # 7     1.248   3.375   0.3976                                          HISTORY # 8     1.248   3.375   0.1881                                          HISTORY # 9     1.248   3.375   0.07614                                         HISTORY # Converged to minimum: chi^2 = 1.248 at beta = 3.375                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.375               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.248   0.02144                                         HISTORY # 1     4       1.224   0.02146                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.7, beta = 3.375, b = 3.712                       HISTORY # after checking limits: a = 2.7, beta = 3.375, b = 3.712               HISTORY # starting values: f(a) = 1.234, f(beta) = 1.224, f(b) = 1.219          HISTORY # after bracketing: f(a) = 1.219, f(beta) = 1.2, f(b) = 1.277           HISTORY # Setting limits: 3.712 <= beta <= 8.352                                HISTORY # Starting with beta = 5.568                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.2     5.568   2.919                                           HISTORY # 2     1.2     5.568   1.772                                           HISTORY # 3     1.2     5.568   1.115                                           HISTORY # 4     1.199   5.297   0.7089                                          HISTORY # 5     1.199   5.309   0.2708                                          HISTORY # 6     1.199   5.309   0.01216                                         HISTORY # Converged to minimum: chi^2 = 1.199 at beta = 5.309                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.08 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.185 / AB magnitude                                   MAG_ERR =                0.031 / AB magnitude erroráK¿5/sq?B·¿~gRVøkÆSÈ›Èø(Æœ›“ò?ay4·≥ÿ?/>yF5(?dıkÿvø tƒ~?õìøBçu5*w©        ?&˚Ò™¯3Ï?9LŒ«≈ñ8?gˆLπ(’                ø@(Qùáp-?SÅ∂¬ƒ˚ı                        ?gO˛Ü„t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        