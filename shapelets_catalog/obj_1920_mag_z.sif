SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.45542272929475 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09417647062686 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1920 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6057. / min(X) in image pixels                         XMAX    =                6091. / max(X) in image pixels                         YMIN    =                3428. / min(Y) in image pixels                         YMAX    =                3462. / min(Y) in image pixels                         CENTROID=   (6073.36, 3445.67) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1920 found in the area (6069/3441) to (6078/3449)   HISTORY # Extending the area around object to (6057/3428) to (6091/3462)        HISTORY # Object 2997 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0206515, Centroid = (6073.36/3445.67)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.116, f(beta) = 1.18, f(b) = 1.272           HISTORY # after bracketing: f(a) = 1.18, f(beta) = 1.116, f(b) = 1.18           HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.102   2.063   3.134                                           HISTORY # 2     1.096   1.685   1.197                                           HISTORY # 3     1.096   1.633   0.819                                           HISTORY # 4     1.095   1.34    0.7673                                          HISTORY # 5     1.094   1.421   0.2931                                          HISTORY # 6     1.094   1.421   0.101                                           HISTORY # 7     1.094   1.421   0.05112                                         HISTORY # Converged to minimum: chi^2 = 1.094 at beta = 1.421                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.421               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.094   0.0417                                          HISTORY # 1     4       1.094   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.137, beta = 1.421, b = 1.563                     HISTORY # after checking limits: a = 1.137, beta = 1.421, b = 1.563             HISTORY # starting values: f(a) = 1.095, f(beta) = 1.094, f(b) = 1.095          HISTORY # after bracketing: f(a) = 1.095, f(beta) = 1.094, f(b) = 1.095         HISTORY # Setting limits: 1.137 <= beta <= 1.563                                HISTORY # Starting with beta = 1.421                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.094   1.421   0.2506                                          HISTORY # 2     1.094   1.475   0.1421                                          HISTORY # 3     1.094   1.461   0.05427                                         HISTORY # 4     1.094   1.454   0.03978                                         HISTORY # 5     1.094   1.455   0.006256                                        HISTORY # Converged to minimum: chi^2 = 1.094 at beta = 1.455                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 5.37 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =                29.52 / AB magnitude                                   MAG_ERR =                0.084 / AB magnitude errorsÍcº‹îø2	∫Ωñ!Ã?:–äıÛØ÷æ—±he~ÉÂ?-ÀO&”∑Sø-Ç–>)!?+TÕzÍ‡Ωø8≠Zd‡˙Wø$»€W;¶        ø3ôÅ©épß?9Ea.$?1Écmˆ‡                ø˛Æ¬j·4>˜ovKëi                        ?ATè◊w÷                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        