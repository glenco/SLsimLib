SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =       1.975215452357 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.00865194659563 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  385 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4780. / min(X) in image pixels                         XMAX    =                4810. / max(X) in image pixels                         YMIN    =                1801. / min(Y) in image pixels                         YMAX    =                1831. / min(Y) in image pixels                         CENTROID=   (4794.65, 1816.66) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 385 found in the area (4792/1814) to (4798/1818)    HISTORY # Extending the area around object to (4780/1801) to (4810/1831)        HISTORY # Object 341 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0121964, Centroid = (4794.65/1816.66)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.024, f(beta) = 1.016, f(b) = 1.021          HISTORY # after bracketing: f(a) = 1.024, f(beta) = 1.016, f(b) = 1.021         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.016   3       3.28                                            HISTORY # 2     1.016   2.185   2.134                                           HISTORY # 3     1.015   2.578   0.8151                                          HISTORY # 4     1.015   2.578   0.3958                                          HISTORY # 5     1.015   2.578   0.1531                                          HISTORY # 6     1.015   2.578   0.15                                            HISTORY # 7     1.015   2.52    0.15                                            HISTORY # 8     1.015   2.528   0.05729                                         HISTORY # Converged to minimum: chi^2 = 1.015 at beta = 2.528                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.528               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.015   0.0473                                          HISTORY # 1     4       1.016   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.023, beta = 2.528, b = 2.781                     HISTORY # after checking limits: a = 2.023, beta = 2.528, b = 2.781             HISTORY # starting values: f(a) = 1.009, f(beta) = 1.016, f(b) = 1.019          HISTORY # after bracketing: f(a) = 1.018, f(beta) = 1.009, f(b) = 1.016         HISTORY # Setting limits: 1.349 <= beta <= 2.528                                HISTORY # Starting with beta = 2.023                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.009   2.023   0.7632                                          HISTORY # 2     1.009   2.023   0.4507                                          HISTORY # 3     1.009   2.023   0.2915                                          HISTORY # 4     1.009   2.023   0.1722                                          HISTORY # 5     1.009   1.985   0.09837                                         HISTORY # 6     1.009   1.975   0.0608                                          HISTORY # 7     1.009   1.975   0.01033                                         HISTORY # Converged to minimum: chi^2 = 1.009 at beta = 1.975                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.77 / photometric redshift                           SED_TYPE=                   13 / SED template                                   MAG     =               30.605 / AB magnitude                                   MAG_ERR =                0.217 / AB magnitude error`xvl¿Kôø7dXk◊æÜøEÏH£/Æ>–ö2V4$K?G€ıÅû™?]Ëí•WTøúgá´4ø&,´<g√Êø2&à·¬        ?6·J¸ã”c?3»DÙÑÁ#?:
 >Ê€…                ?'YŒ∞∂ø'l”uµÖs                        ?BTŸx4Ó                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        