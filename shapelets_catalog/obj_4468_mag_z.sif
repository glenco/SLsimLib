SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.89016518904874 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11489220750682 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4468 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6200. / min(X) in image pixels                         XMAX    =                6236. / max(X) in image pixels                         YMIN    =                4895. / min(Y) in image pixels                         YMAX    =                4931. / min(Y) in image pixels                         CENTROID=   (6218.81, 4911.21) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4468 found in the area (6212/4907) to (6224/4918)   HISTORY # Extending the area around object to (6200/4895) to (6236/4931)        HISTORY # Object 4494 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0185448, Centroid = (6218.81/4911.21)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.125, f(beta) = 1.122, f(b) = 1.12           HISTORY # after bracketing: f(a) = 1.122, f(beta) = 1.12, f(b) = 1.122          HISTORY # Setting limits: 4 <= beta <= 10.43                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.12    6.472   4                                               HISTORY # 2     1.12    6.947   1.528                                           HISTORY # 3     1.12    6.926   0.4754                                          HISTORY # 4     1.12    6.926   0.1946                                          HISTORY # 5     1.12    6.892   0.1735                                          HISTORY # 6     1.12    6.89    0.1392                                          HISTORY # 7     1.12    6.89    0.002108                                        HISTORY # Converged to minimum: chi^2 = 1.12 at beta = 6.89                     HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.89                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.12    0.03937                                         HISTORY # 1     4       1.115   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.512, beta = 6.89, b = 7.579                      HISTORY # after checking limits: a = 5.512, beta = 6.89, b = 7.579              HISTORY # starting values: f(a) = 1.115, f(beta) = 1.115, f(b) = 1.115          HISTORY # after bracketing: f(a) = 1.115, f(beta) = 1.115, f(b) = 1.115         HISTORY # Setting limits: 5.512 <= beta <= 7.579                                HISTORY # Starting with beta = 6.89                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.115   6.89    1.215                                           HISTORY # 2     1.115   6.89    0.7895                                          HISTORY # 3     1.115   6.89    0.4642                                          HISTORY # 4     1.115   6.89    0.3016                                          HISTORY # 5     1.115   6.89    0.1773                                          HISTORY # 6     1.115   6.89    0.1152                                          HISTORY # Converged to minimum: chi^2 = 1.115 at beta = 6.89                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.28 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.068 / AB magnitude                                   MAG_ERR =                0.217 / AB magnitude errorg½òu?@º1FûN¿N®7¦´?9eæ$tz?3zä•U¿5:ð&9¾?¿+éHŒõU?C(ïxÞ"?&!‡B˜S        ¿QÚî8[^~¾•#€ÆÂ")¿,‡˜V¹f                ¿5-bÂ6ó?FP¤,†g                        ¿ IãkÑ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        