SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.52898832371718 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09442363802971 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8506 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7147. / min(X) in image pixels                         XMAX    =                7179. / max(X) in image pixels                         YMIN    =                6967. / min(Y) in image pixels                         YMAX    =                6999. / min(Y) in image pixels                         CENTROID=    (7162.93, 6982.2) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8506 found in the area (7159/6979) to (7166/6986)   HISTORY # Extending the area around object to (7147/6967) to (7179/6999)        HISTORY # Object 8255 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0222808, Centroid = (7162.93/6982.2) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.14, f(beta) = 1.111, f(b) = 1.147           HISTORY # after bracketing: f(a) = 1.14, f(beta) = 1.111, f(b) = 1.147          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.111   4       4.662                                           HISTORY # 2     1.102   2.803   3.134                                           HISTORY # 3     1.102   2.456   1.937                                           HISTORY # 4     1.102   2.585   0.3469                                          HISTORY # 5     1.102   2.595   0.2179                                          HISTORY # 6     1.102   2.591   0.00983                                         HISTORY # Converged to minimum: chi^2 = 1.102 at beta = 2.591                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.591               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.102   0.04432                                         HISTORY # 1     4       1.099   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.072, beta = 2.591, b = 2.85                      HISTORY # after checking limits: a = 2.072, beta = 2.591, b = 2.85              HISTORY # starting values: f(a) = 1.102, f(beta) = 1.099, f(b) = 1.099          HISTORY # after bracketing: f(a) = 1.099, f(beta) = 1.095, f(b) = 1.116         HISTORY # Setting limits: 2.85 <= beta <= 6.412                                 HISTORY # Starting with beta = 4.274                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.095   4.274   2.241                                           HISTORY # 2     1.095   4.274   1.361                                           HISTORY # 3     1.094   4.586   0.8163                                          HISTORY # 4     1.094   4.542   0.3118                                          HISTORY # 5     1.094   4.526   0.2678                                          HISTORY # 6     1.094   4.529   0.01592                                         HISTORY # Converged to minimum: chi^2 = 1.094 at beta = 4.529                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.51 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               29.463 / AB magnitude                                   MAG_ERR =                0.108 / AB magnitude errorh`ŽMOö¶¿/d|ÔÊ¿A«N¬¯?'à'må??„)hª?.*Qá.>?#é¼m²s?8ðæt~p¾ï$ÇÂì¯        ¿D“èd!‚þ?=Ã6ÔYy4?KÔ ÔÍtÅ                ?,‘È[ÿ>Þ?2h,U¦F2                        ?PR¥£h_Î                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        