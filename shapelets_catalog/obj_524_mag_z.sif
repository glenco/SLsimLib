SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.98032946973581 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18884853817693 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  784 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  524 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6524. / min(X) in image pixels                         XMAX    =                6574. / max(X) in image pixels                         YMIN    =                2006. / min(Y) in image pixels                         YMAX    =                2056. / min(Y) in image pixels                         CENTROID=   (6543.87, 2032.15) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 524 found in the area (6536/2024) to (6562/2037)    HISTORY # Extending the area around object to (6524/2006) to (6574/2056)        HISTORY # Object 1034 nearby, but not overlapping.                              HISTORY # Object 513 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0731374, Centroid = (6543.87/2032.15)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.312, f(beta) = 1.245, f(b) = 1.276          HISTORY # after bracketing: f(a) = 1.312, f(beta) = 1.245, f(b) = 1.276         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.245   6       7.426                                           HISTORY # 2     1.229   4.039   5.134                                           HISTORY # 3     1.228   2.827   3.173                                           HISTORY # 4     1.227   3.26    1.212                                           HISTORY # 5     1.227   3.347   0.7786                                          HISTORY # 6     1.227   3.312   0.08701                                         HISTORY # Converged to minimum: chi^2 = 1.227 at beta = 3.312                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.312               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.227   0.02832                                         HISTORY # 1     4       1.205   0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.65, beta = 3.312, b = 3.643                      HISTORY # after checking limits: a = 2.65, beta = 3.312, b = 3.643              HISTORY # starting values: f(a) = 1.216, f(beta) = 1.205, f(b) = 1.203          HISTORY # after bracketing: f(a) = 1.203, f(beta) = 1.191, f(b) = 1.213         HISTORY # Setting limits: 3.643 <= beta <= 8.198                                HISTORY # Starting with beta = 5.465                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   5.465   2.865                                           HISTORY # 2     1.191   5.465   1.74                                            HISTORY # 3     1.189   5.864   1.044                                           HISTORY # 4     1.189   6.044   0.6451                                          HISTORY # 5     1.189   5.982   0.1798                                          HISTORY # 6     1.189   5.98    0.1182                                          HISTORY # 7     1.189   5.98    0.002046                                        HISTORY # Converged to minimum: chi^2 = 1.189 at beta = 5.98                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.91 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.561 / AB magnitude                                   MAG_ERR =                0.065 / AB magnitude errortM¶TñkY¿#†ÁLïÆ¿[o­á?5ÃTo œ?T„XDq??¸á¸!õ¿Tm\	ë‰?6›Ú8ýíó?QžRÜN2º        ?2éfaxÿ¿E£©~êés?(Ž”c~q±                ?UVÆ Mþ?5ý¬gõ_y                        ?bÇ°§oF                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        