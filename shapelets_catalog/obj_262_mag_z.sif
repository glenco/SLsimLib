SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.58765419093568 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18367165897637 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  262 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4660. / min(X) in image pixels                         XMAX    =                4698. / max(X) in image pixels                         YMIN    =                1592. / min(Y) in image pixels                         YMAX    =                1630. / min(Y) in image pixels                         CENTROID=   (4678.33, 1610.28) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 262 found in the area (4672/1604) to (4685/1617)    HISTORY # Extending the area around object to (4660/1592) to (4698/1630)        HISTORY # Object 238 nearby, but not overlapping.                               HISTORY # Object 271 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0582284, Centroid = (4678.33/1610.28)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.284, f(beta) = 1.34, f(b) = 1.575           HISTORY # after bracketing: f(a) = 1.34, f(beta) = 1.284, f(b) = 1.34           HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.223   2.063   3.134                                           HISTORY # 2     1.218   1.843   1.197                                           HISTORY # 3     1.217   1.803   0.9767                                          HISTORY # 4     1.217   1.803   0.3974                                          HISTORY # 5     1.217   1.667   0.3581                                          HISTORY # 6     1.217   1.673   0.1368                                          HISTORY # 7     1.217   1.673   0.05594                                         HISTORY # Converged to minimum: chi^2 = 1.217 at beta = 1.673                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.673               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.217   0.03729                                         HISTORY # 1     4       1.184   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.338, beta = 1.673, b = 1.84                      HISTORY # after checking limits: a = 1.338, beta = 1.673, b = 1.84              HISTORY # starting values: f(a) = 1.191, f(beta) = 1.184, f(b) = 1.188          HISTORY # after bracketing: f(a) = 1.191, f(beta) = 1.184, f(b) = 1.188         HISTORY # Setting limits: 1.338 <= beta <= 1.84                                 HISTORY # Starting with beta = 1.673                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.184   1.545   0.3345                                          HISTORY # 2     1.184   1.589   0.1278                                          HISTORY # 3     1.184   1.588   0.04389                                         HISTORY # 4     1.184   1.588   0.01745                                         HISTORY # Converged to minimum: chi^2 = 1.184 at beta = 1.588                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.19 / photometric redshift                           SED_TYPE=                   15 / SED template                                   MAG     =               28.657 / AB magnitude                                   MAG_ERR =                0.056 / AB magnitude errorÄ{Ï88iø(˙E¿døÒO”ó˝ﬂ?F—Wj“Ï?NùDvèπ¬ø’?+^ôúø;ÃÄ	Ê∑ø©DaNg>ÁW‹≤cÇ‰        ?@|ï˚Iê“?	€∫&ÅmÊ?UÁ(!’l=                ?6Ë<:<FøcÏ24P3                        ?PB‰3‘X                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        