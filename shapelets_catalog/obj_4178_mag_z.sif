SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.67453620551323 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2144496739421 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4178 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1712. / min(X) in image pixels                         XMAX    =                1760. / max(X) in image pixels                         YMIN    =                4783. / min(Y) in image pixels                         YMAX    =                4831. / min(Y) in image pixels                         CENTROID=   (1737.57, 4808.39) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4178 found in the area (1724/4798) to (1747/4816)   HISTORY # Extending the area around object to (1712/4783) to (1760/4831)        HISTORY # Object 4194 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.19811, Centroid = (1737.57/4808.39)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.001, f(beta) = 2.203, f(b) = 3.277          HISTORY # after bracketing: f(a) = 2.203, f(beta) = 2.001, f(b) = 2.203         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.448   2.827   5.134                                           HISTORY # 2     1.409   2.491   1.961                                           HISTORY # 3     1.403   2.423   1.625                                           HISTORY # 4     1.393   1.828   1.557                                           HISTORY # 5     1.387   2.042   0.5946                                          HISTORY # 6     1.387   2.042   0.2263                                          HISTORY # 7     1.387   2.042   0.09449                                         HISTORY # Converged to minimum: chi^2 = 1.387 at beta = 2.042                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.042               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.387   0.0295                                          HISTORY # 1     4       1.301   0.02956                                         HISTORY # 2     6       1.26    0.02964                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.633, beta = 2.042, b = 2.246                     HISTORY # after checking limits: a = 1.633, beta = 2.042, b = 2.246             HISTORY # starting values: f(a) = 1.3, f(beta) = 1.26, f(b) = 1.236             HISTORY # after bracketing: f(a) = 1.26, f(beta) = 1.236, f(b) = 1.241          HISTORY # Setting limits: 2.042 <= beta <= 3.368                                HISTORY # Starting with beta = 2.246                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.214   2.675   1.123                                           HISTORY # 2     1.214   2.675   0.7013                                          HISTORY # 3     1.214   2.675   0.2724                                          HISTORY # 4     1.214   2.675   0.2651                                          HISTORY # 5     1.214   2.675   0.1012                                          HISTORY # 6     1.214   2.675   0.03867                                         HISTORY # Converged to minimum: chi^2 = 1.214 at beta = 2.675                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                  2.7 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               27.288 / AB magnitude                                   MAG_ERR =                0.024 / AB magnitude errorñ5~óËå?B€‰[Jà{øi’ioyÅ±?MéÚ.•–F?RwOBá›øG*±åπÑ9øP}µ8|‘8?Jj˛ Î£yøf˙~u˝Ø%? 4(…[Ì?M,•ıDø"‰ÑK˝¸LøIQCrM¬        øZDMÒ˝?\K‚%bR?fª˝;∆ˇø8Ä›JªÕêø>˙9’L°j                øa“HÒêøB™|ÙéøFQB6erøP§˚¬`·1                        ?i#ƒØó
¡?RcFWÇQ?7—ÑW≤¸                                øW÷©ËÒø`ƒäé©+                                        ?(wÁº[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        