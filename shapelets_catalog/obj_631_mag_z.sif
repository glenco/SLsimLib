SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.31028679425689 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2897680917308 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  631 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4748. / min(X) in image pixels                         XMAX    =                4796. / max(X) in image pixels                         YMIN    =                2157. / min(Y) in image pixels                         YMAX    =                2205. / min(Y) in image pixels                         CENTROID=   (4770.74, 2179.49) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 631 found in the area (4760/2171) to (4783/2190)    HISTORY # Extending the area around object to (4748/2157) to (4796/2205)        HISTORY # Object 633 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.29991, Centroid = (4770.74/2179.49)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 5.455, f(beta) = 5.927, f(b) = 10.97          HISTORY # after bracketing: f(a) = 5.927, f(beta) = 5.455, f(b) = 5.927         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.988   2.827   5.134                                           HISTORY # 2     1.866   2.572   1.961                                           HISTORY # 3     1.848   2.518   1.706                                           HISTORY # 4     1.848   2.518   0.6851                                          HISTORY # 5     1.806   2.277   0.631                                           HISTORY # 6     1.805   2.234   0.39                                            HISTORY # 7     1.805   2.25    0.04303                                         HISTORY # Converged to minimum: chi^2 = 1.805 at beta = 2.25                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.25                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.805   0.0295                                          HISTORY # 1     4       1.346   0.02956                                         HISTORY # 2     6       1.291   0.02964                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.8, beta = 2.25, b = 2.475                        HISTORY # after checking limits: a = 1.8, beta = 2.25, b = 2.475                HISTORY # starting values: f(a) = 1.366, f(beta) = 1.291, f(b) = 1.297          HISTORY # after bracketing: f(a) = 1.366, f(beta) = 1.291, f(b) = 1.297         HISTORY # Setting limits: 1.8 <= beta <= 2.475                                  HISTORY # Starting with beta = 2.25                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.291   2.25    0.3969                                          HISTORY # 2     1.29    2.336   0.225                                           HISTORY # 3     1.29    2.31    0.08595                                         HISTORY # 4     1.29    2.31    0.02636                                         HISTORY # Converged to minimum: chi^2 = 1.29 at beta = 2.31                     HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.82 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               26.452 / AB magnitude                                   MAG_ERR =                0.013 / AB magnitude error®êËC øø?c,úª÷øn¡w”ên?a⁄fˇ©À?t®…µñ-ñøL∞’øÑ>ÁøMùØûÆøI€^¥X@]øvg∑¸ÌF?^TëóD%Û?6wUΩ÷Í˘øPπ”é’¢øM'<≈wh        ?a‡æ2Ræ-?`4äöOh1?qtrÆœóˆøK—`|˙2˙ø8 çÜ∂Li                øB¸HT,*Ûø[≤éÅ¯˚yøGbïÇMøWùZãèÚ«                        ?pÚ*aŒø√€iU®§?Pé\Åpª                                ?L° _‰køW_c	3±⁄                                        ?&öÉgÙO◊                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        