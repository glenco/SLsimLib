SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.05314220214147 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2120683615331 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2434 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3053. / min(X) in image pixels                         XMAX    =                3101. / max(X) in image pixels                         YMIN    =                3780. / min(Y) in image pixels                         YMAX    =                3828. / min(Y) in image pixels                         CENTROID=   (3073.45, 3804.37) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2434 found in the area (3065/3799) to (3088/3809)   HISTORY # Extending the area around object to (3053/3780) to (3101/3828)        HISTORY # Object 2465 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0760004, Centroid = (3073.45/3804.37)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.363, f(beta) = 1.409, f(b) = 1.575          HISTORY # after bracketing: f(a) = 1.409, f(beta) = 1.363, f(b) = 1.409         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.236   2.827   5.134                                           HISTORY # 2     1.23    2.549   1.961                                           HISTORY # 3     1.229   2.488   1.683                                           HISTORY # 4     1.226   1.868   1.622                                           HISTORY # 5     1.225   2.038   0.6195                                          HISTORY # 6     1.225   2.038   0.2009                                          HISTORY # 7     1.225   2.038   0.09624                                         HISTORY # Converged to minimum: chi^2 = 1.225 at beta = 2.038                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.038               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.225   0.0295                                          HISTORY # 1     4       1.212   0.02956                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.63, beta = 2.038, b = 2.241                      HISTORY # after checking limits: a = 1.63, beta = 2.038, b = 2.241              HISTORY # starting values: f(a) = 1.219, f(beta) = 1.212, f(b) = 1.213          HISTORY # after bracketing: f(a) = 1.219, f(beta) = 1.212, f(b) = 1.213         HISTORY # Setting limits: 1.63 <= beta <= 2.241                                 HISTORY # Starting with beta = 2.038                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.212   2.038   0.3594                                          HISTORY # 2     1.212   2.038   0.2335                                          HISTORY # 3     1.212   2.038   0.1373                                          HISTORY # 4     1.212   2.067   0.07783                                         HISTORY # 5     1.212   2.053   0.02973                                         HISTORY # Converged to minimum: chi^2 = 1.212 at beta = 2.053                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.92 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.249 / AB magnitude                                   MAG_ERR =                0.045 / AB magnitude errorÉ)bFo“?Hé2zn∏øO°Òı©?"˝àz5íW?EÄÿ√W;ßø>Ÿí4ˆ¢øE••~s˝Ü??õUã⁄√ø2cÏ≠ï‡†        ?W±}ˆ˛´ø.U‰åzú?3ˆ§dê›                ?Ußo%—™Îø-ßÜ	 (l                        ?AI¨Çv                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        