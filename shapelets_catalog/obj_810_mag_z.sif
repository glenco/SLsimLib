SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      4.4631780624555 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20564288217214 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  810 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5138. / min(X) in image pixels                         XMAX    =                5198. / max(X) in image pixels                         YMIN    =                2360. / min(Y) in image pixels                         YMAX    =                2420. / min(Y) in image pixels                         CENTROID=   (5166.69, 2388.71) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 810 found in the area (5150/2381) to (5186/2398)    HISTORY # Extending the area around object to (5138/2360) to (5198/2420)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.170113, Centroid = (5166.69/2388.71) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 1.515, f(beta) = 1.34, f(b) = 1.479           HISTORY # after bracketing: f(a) = 1.515, f(beta) = 1.34, f(b) = 1.479          HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.34    7       8.808                                           HISTORY # 2     1.279   4.657   6.134                                           HISTORY # 3     1.248   3.209   3.791                                           HISTORY # 4     1.244   2.314   2.343                                           HISTORY # 5     1.242   2.425   0.8949                                          HISTORY # 6     1.242   2.425   0.4101                                          HISTORY # 7     1.242   2.539   0.2996                                          HISTORY # 8     1.242   2.54    0.1852                                          HISTORY # 9     1.242   2.54    0.07154                                         HISTORY # Converged to minimum: chi^2 = 1.242 at beta = 2.54                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.54                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.242   0.02359                                         HISTORY # 1     4       1.227   0.02362                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.032, beta = 2.54, b = 2.794                      HISTORY # after checking limits: a = 2.032, beta = 2.54, b = 2.794              HISTORY # starting values: f(a) = 1.234, f(beta) = 1.227, f(b) = 1.225          HISTORY # after bracketing: f(a) = 1.225, f(beta) = 1.207, f(b) = 1.262         HISTORY # Setting limits: 2.794 <= beta <= 6.287                                HISTORY # Starting with beta = 4.192                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.207   4.192   2.198                                           HISTORY # 2     1.207   4.192   1.334                                           HISTORY # 3     1.206   4.497   0.8005                                          HISTORY # 4     1.206   4.478   0.3058                                          HISTORY # 5     1.206   4.478   0.1286                                          HISTORY # 6     1.206   4.461   0.1095                                          HISTORY # 7     1.206   4.463   0.0169                                          HISTORY # Converged to minimum: chi^2 = 1.206 at beta = 4.463                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.56 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               27.481 / AB magnitude                                   MAG_ERR =                0.038 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?Ñ∫å¢ÀH…?N¯{î„_øf”â’ìc?B7ÉÄ?WŸr£w?K≠õ`ıÔ?bÍìØo˜?#®f´˝Î9øY˝>ÛfÔ°        ?sä¬Ê∂?ÁA£ÊF?H7p`e“l                øbUÎ·œZ?Å’gãVâ                        ?f]à)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        