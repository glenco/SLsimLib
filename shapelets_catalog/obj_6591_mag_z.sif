SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.90080868941117 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07272004402782 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6591 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8890. / min(X) in image pixels                         XMAX    =                8926. / max(X) in image pixels                         YMIN    =                5995. / min(Y) in image pixels                         YMAX    =                6031. / min(Y) in image pixels                         CENTROID=   (8907.45, 6011.66) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6591 found in the area (8902/6007) to (8913/6018)   HISTORY # Extending the area around object to (8890/5995) to (8926/6031)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0468134, Centroid = (8907.45/6011.66)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.134, f(beta) = 1.316, f(b) = 1.554          HISTORY # after bracketing: f(a) = 1.316, f(beta) = 1.134, f(b) = 1.316         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.118   2.063   3.134                                           HISTORY # 2     1.094   1.557   1.197                                           HISTORY # 3     1.094   1.541   0.6906                                          HISTORY # 4     1.094   1.541   0.2736                                          HISTORY # 5     1.093   1.422   0.2577                                          HISTORY # 6     1.093   1.438   0.1187                                          HISTORY # 7     1.093   1.439   0.1026                                          HISTORY # 8     1.093   1.439   0.000966                                        HISTORY # Converged to minimum: chi^2 = 1.093 at beta = 1.439                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.439               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.093   0.03937                                         HISTORY # 1     4       1.083   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.151, beta = 1.439, b = 1.583                     HISTORY # after checking limits: a = 1.151, beta = 1.439, b = 1.583             HISTORY # starting values: f(a) = 1.092, f(beta) = 1.083, f(b) = 1.078          HISTORY # after bracketing: f(a) = 1.083, f(beta) = 1.078, f(b) = 1.089         HISTORY # Setting limits: 1.439 <= beta <= 2.374                                HISTORY # Starting with beta = 1.583                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.073   1.885   0.7913                                          HISTORY # 2     1.073   1.885   0.3438                                          HISTORY # 3     1.073   1.885   0.157                                           HISTORY # 4     1.073   1.885   0.08568                                         HISTORY # 5     1.073   1.885   0.05842                                         HISTORY # 6     1.073   1.901   0.04158                                         HISTORY # 7     1.073   1.901   0.021                                           HISTORY # Converged to minimum: chi^2 = 1.073 at beta = 1.901                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.16 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.779 / AB magnitude                                   MAG_ERR =                0.059 / AB magnitude errorÅ…@ÓÖ?/ˇ*◊u¯5øP'ó9úM?C=à#ÕÇΩ?Qıñ¶´‹îø-T“)'Í~øB´Õ€á?0Ü˛›&%?5ˆÑ˝ﬂ[        øQ˚üókvs?Bw=ÆÄ@?G˛`Íê                >™ì ˘yç?/üHÒˇ                        ?S∆Â˛
r                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        