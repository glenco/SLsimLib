SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.75729919554876 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09670437519338 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3429 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7372. / min(X) in image pixels                         XMAX    =                7414. / max(X) in image pixels                         YMIN    =                4395. / min(Y) in image pixels                         YMAX    =                4437. / min(Y) in image pixels                         CENTROID=   (7394.17, 4415.12) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3429 found in the area (7384/4410) to (7401/4422)   HISTORY # Extending the area around object to (7372/4395) to (7414/4437)        HISTORY # Object 3410 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.11685, Centroid = (7394.17/4415.12)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.476, f(beta) = 2.22, f(b) = 3.334           HISTORY # after bracketing: f(a) = 2.22, f(beta) = 1.476, f(b) = 2.22           HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.317   2.445   4.134                                           HISTORY # 2     1.208   1.875   1.579                                           HISTORY # 3     1.204   1.83    1.009                                           HISTORY # 4     1.202   1.462   0.9641                                          HISTORY # 5     1.194   1.635   0.3683                                          HISTORY # 6     1.194   1.635   0.1745                                          HISTORY # 7     1.194   1.635   0.06742                                         HISTORY # Converged to minimum: chi^2 = 1.194 at beta = 1.635                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.635               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.194   0.03373                                         HISTORY # 1     4       1.099   0.03382                                         HISTORY # 2     6       1.098   0.03394                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.308, beta = 1.635, b = 1.799                     HISTORY # after checking limits: a = 1.323, beta = 1.635, b = 1.799             HISTORY # starting values: f(a) = 1.113, f(beta) = 1.098, f(b) = 1.097          HISTORY # after bracketing: f(a) = 1.098, f(beta) = 1.097, f(b) = 1.166         HISTORY # Setting limits: 1.635 <= beta <= 2.698                                HISTORY # Starting with beta = 1.799                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.097   1.799   0.507                                           HISTORY # 2     1.097   1.799   0.2947                                          HISTORY # 3     1.097   1.736   0.1635                                          HISTORY # 4     1.097   1.757   0.06246                                         HISTORY # 5     1.097   1.757   0.04179                                         HISTORY # 6     1.097   1.757   0.04145                                         HISTORY # 7     1.097   1.757   3.729e-05                                       HISTORY # Converged to minimum: chi^2 = 1.097 at beta = 1.757                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 2.29 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               27.828 / AB magnitude                                   MAG_ERR =                0.044 / AB magnitude errorì œﬁR“?1 ¯¯ÃàøW¬Ó&ç’?(<zn#0?a√°Hß«?'∏n0é}˝ø6nà∑‹éÁ?1¿¯v“S?U˘a$¡÷˚ø3ÓÈ
Õ™?:÷|Ã–Q?9ßw{øÖ?8y¢A¡6Ã        >Ê°s¯yU?¸è€Ì7Ô?\ÒÎ·ø§îZ
MÌø'+∞w‹«                ?Dö;™É|ø"“qÑ-Bø&ﬂ$Q(^·?DLîU’†                        ?a!òπ˜D\?ÜŒØ50ø1‘`e4ÈË                                ømO¯∏µu?4≥$ÊV‹j                                        ?4%zN^                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         