SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.75045238488511 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14795654292484 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6540 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3333. / min(X) in image pixels                         XMAX    =                3363. / max(X) in image pixels                         YMIN    =                5957. / min(Y) in image pixels                         YMAX    =                5987. / min(Y) in image pixels                         CENTROID=     (3348., 5971.72) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6540 found in the area (3345/5969) to (3351/5974)   HISTORY # Extending the area around object to (3333/5957) to (3363/5987)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00879877, Centroid = (3348/5971.72)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.161, f(beta) = 1.161, f(b) = 1.161          HISTORY # after bracketing: f(a) = 1.161, f(beta) = 1.161, f(b) = 1.161         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.151   4.146   3                                               HISTORY # 2     1.151   4.146   1.854                                           HISTORY # 3     1.151   4.146   1.146                                           HISTORY # 4     1.15    4.416   0.7082                                          HISTORY # 5     1.15    4.416   0.4377                                          HISTORY # 6     1.15    4.416   0.2705                                          HISTORY # 7     1.15    4.48    0.1672                                          HISTORY # 8     1.15    4.472   0.06386                                         HISTORY # 9     1.15    4.472   0.008709                                        HISTORY # Converged to minimum: chi^2 = 1.15 at beta = 4.472                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.472               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.15    0.0473                                          HISTORY # 1     4       1.15    0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.577, beta = 4.472, b = 4.919                     HISTORY # after checking limits: a = 3.577, beta = 4.472, b = 4.919             HISTORY # starting values: f(a) = 1.15, f(beta) = 1.15, f(b) = 1.149            HISTORY # after bracketing: f(a) = 1.15, f(beta) = 1.149, f(b) = 1.15           HISTORY # Setting limits: 4.472 <= beta <= 6.753                                HISTORY # Starting with beta = 4.919                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.148   5.619   1.834                                           HISTORY # 2     1.148   5.859   1.133                                           HISTORY # 3     1.148   5.752   0.2395                                          HISTORY # 4     1.148   5.75    0.1329                                          HISTORY # 5     1.148   5.75    0.002271                                        HISTORY # Converged to minimum: chi^2 = 1.148 at beta = 5.75                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 3.46 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               30.636 / AB magnitude                                   MAG_ERR =                0.198 / AB magnitude errorìÔüõ(øπde‹øSqˆ‰UP•>˘† f4sŒ?0∞ıÜãOﬂ?@Cê“éK¬?A%.’·ﬂ?$BÊ¶Kˆ¢?FÅL 8‡        øPè¬O?;S;'ªw˙?Fw€ÌˆLΩ                æ˜ÁÑT:ÁWøîo-™                        ?E%‚zE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        