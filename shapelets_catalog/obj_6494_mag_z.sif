SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.47111742846623 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17778468020961 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6494 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7018. / min(X) in image pixels                         XMAX    =                7058. / max(X) in image pixels                         YMIN    =                5980. / min(Y) in image pixels                         YMAX    =                6020. / min(Y) in image pixels                         CENTROID=   (7038.52, 6000.89) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6494 found in the area (7032/5992) to (7044/6007)   HISTORY # Extending the area around object to (7018/5980) to (7058/6020)        HISTORY # Object 6585 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0302456, Centroid = (7038.52/6000.89)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.428, f(beta) = 1.246, f(b) = 1.206          HISTORY # after bracketing: f(a) = 1.246, f(beta) = 1.206, f(b) = 1.246         HISTORY # Setting limits: 5 <= beta <= 11.6                                     HISTORY # Starting with beta = 10                                               HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.197   8.09    5                                               HISTORY # 2     1.197   8.048   3.09                                            HISTORY # 3     1.197   8.048   1.206                                           HISTORY # 4     1.197   7.901   1.164                                           HISTORY # 5     1.197   7.962   0.1471                                          HISTORY # 6     1.197   7.962   0.06115                                         HISTORY # Converged to minimum: chi^2 = 1.197 at beta = 7.962                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.962               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.197   0.03542                                         HISTORY # 1     4       1.186   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.37, beta = 7.962, b = 8.758                      HISTORY # after checking limits: a = 6.37, beta = 7.962, b = 8.758              HISTORY # starting values: f(a) = 1.181, f(beta) = 1.186, f(b) = 1.186          HISTORY # after bracketing: f(a) = 1.198, f(beta) = 1.181, f(b) = 1.186         HISTORY # Setting limits: 4.246 <= beta <= 7.962                                HISTORY # Starting with beta = 6.37                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.178   5.559   2.123                                           HISTORY # 2     1.178   5.559   1.04                                            HISTORY # 3     1.178   5.559   0.5389                                          HISTORY # 4     1.178   5.559   0.3475                                          HISTORY # 5     1.178   5.471   0.2291                                          HISTORY # 6     1.178   5.471   0.1416                                          HISTORY # Converged to minimum: chi^2 = 1.178 at beta = 5.471                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.51 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               27.946 / AB magnitude                                   MAG_ERR =                0.058 / AB magnitude errorqÙ›sÁZˆ?\ª`Z˜T÷?`J	M¬Öß?^tØàœ&?SºØÿ:?¾;gÊÑ£?™B.¹¿)®oiIœ?.¨ãòÂÇ        ¿D\ÑåI8?MgyN[ð3?/m‚^üÑÈ                ¿D‹a#€¡¿1xAL÷O4                        ?2yäîh}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        