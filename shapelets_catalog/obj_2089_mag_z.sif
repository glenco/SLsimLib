SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.34051386277126 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13827805562229 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2089 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8147. / min(X) in image pixels                         XMAX    =                8193. / max(X) in image pixels                         YMIN    =                3564. / min(Y) in image pixels                         YMAX    =                3610. / min(Y) in image pixels                         CENTROID=    (8169.75, 3586.5) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2089 found in the area (8160/3576) to (8179/3597)   HISTORY # Extending the area around object to (8147/3564) to (8193/3610)        HISTORY # Object 2059 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0627479, Centroid = (8169.75/3586.5) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.225, f(beta) = 1.142, f(b) = 1.171          HISTORY # after bracketing: f(a) = 1.225, f(beta) = 1.142, f(b) = 1.171         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.142   5       6.044                                           HISTORY # 2     1.142   5       3.489                                           HISTORY # 3     1.142   5       2.309                                           HISTORY # 4     1.141   4.397   1.579                                           HISTORY # 5     1.141   4.242   0.9759                                          HISTORY # 6     1.141   4.259   0.1545                                          HISTORY # 7     1.141   4.259   0.06923                                         HISTORY # Converged to minimum: chi^2 = 1.141 at beta = 4.259                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.259               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.141   0.03079                                         HISTORY # 1     4       1.141   0.03085                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.407, beta = 4.259, b = 4.685                     HISTORY # after checking limits: a = 3.407, beta = 4.259, b = 4.685             HISTORY # starting values: f(a) = 1.138, f(beta) = 1.141, f(b) = 1.142          HISTORY # after bracketing: f(a) = 1.148, f(beta) = 1.138, f(b) = 1.141         HISTORY # Setting limits: 2.271 <= beta <= 4.259                                HISTORY # Starting with beta = 3.407                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.138   3.407   1.286                                           HISTORY # 2     1.138   3.407   0.7592                                          HISTORY # 3     1.138   3.407   0.4911                                          HISTORY # 4     1.138   3.407   0.29                                            HISTORY # 5     1.138   3.344   0.1657                                          HISTORY # 6     1.138   3.341   0.1024                                          HISTORY # 7     1.138   3.341   0.04119                                         HISTORY # Converged to minimum: chi^2 = 1.138 at beta = 3.341                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.31 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =                28.56 / AB magnitude                                   MAG_ERR =                0.071 / AB magnitude erroro◊Ì Lóæı	ë{Üø:ø ·í‹π?A≤ÍOÒVø2I/nTå
ø7ÖΩyQ?[NôA∂Z?46ﬂUD>Ô¯|—	ª∞        ?3Yêp≤?÷˜&í?74ÎœI%µ                ?Æ˚Ör/(?CiÄÜèb                        ?GB∆’ÇÛ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        