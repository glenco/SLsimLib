SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.99039966355304 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.25392019091727 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8879 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6623. / min(X) in image pixels                         XMAX    =                6661. / max(X) in image pixels                         YMIN    =                6564. / min(Y) in image pixels                         YMAX    =                6602. / min(Y) in image pixels                         CENTROID=   (6644.07, 6582.66) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8879 found in the area (6635/6577) to (6649/6588)   HISTORY # Extending the area around object to (6623/6564) to (6661/6602)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0386257, Centroid = (6644.07/6582.66)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.301, f(beta) = 1.305, f(b) = 1.402          HISTORY # after bracketing: f(a) = 1.305, f(beta) = 1.301, f(b) = 1.305         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.274   2.063   3.134                                           HISTORY # 2     1.272   1.858   1.197                                           HISTORY # 3     1.272   1.821   0.9917                                          HISTORY # 4     1.272   1.821   0.4013                                          HISTORY # 5     1.272   1.678   0.3649                                          HISTORY # 6     1.272   1.718   0.1431                                          HISTORY # 7     1.272   1.721   0.103                                           HISTORY # 8     1.272   1.72    0.002422                                        HISTORY # Converged to minimum: chi^2 = 1.272 at beta = 1.72                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.72                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.272   0.03729                                         HISTORY # 1     4       1.257   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.376, beta = 1.72, b = 1.892                      HISTORY # after checking limits: a = 1.376, beta = 1.72, b = 1.892              HISTORY # starting values: f(a) = 1.269, f(beta) = 1.257, f(b) = 1.254          HISTORY # after bracketing: f(a) = 1.257, f(beta) = 1.254, f(b) = 1.273         HISTORY # Setting limits: 1.72 <= beta <= 2.837                                 HISTORY # Starting with beta = 1.892                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.254   1.892   0.5332                                          HISTORY # 2     1.254   2.03    0.3613                                          HISTORY # 3     1.254   1.992   0.138                                           HISTORY # 4     1.254   1.991   0.1003                                          HISTORY # 5     1.254   1.99    0.09908                                         HISTORY # 6     1.254   1.99    0.0002859                                       HISTORY # Converged to minimum: chi^2 = 1.254 at beta = 1.99                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.75 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.015 / AB magnitude                                   MAG_ERR =                0.083 / AB magnitude errort’.H.Áeæ»5ÄÛæøMå¶n«}∑?2åë >M¶?;´.ò=º?Aùí∏–àøHy8dˆ2øB©(èâ∞æ˙S∫j<¡        ?6ˆn`√e!??w–?]˘?U¥ aS;Ç                øAjÈ˙Í‹ø@Z∫cà                        ?-ËH‚[„                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        