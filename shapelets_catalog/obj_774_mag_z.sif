SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.48099883612794 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.03026604055793 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  774 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6000. / min(X) in image pixels                         XMAX    =                6036. / max(X) in image pixels                         YMIN    =                2306. / min(Y) in image pixels                         YMAX    =                2342. / min(Y) in image pixels                         CENTROID=    (6016.81, 2323.7) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 774 found in the area (6012/2319) to (6023/2329)    HISTORY # Extending the area around object to (6000/2306) to (6036/2342)        HISTORY # Object 763 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0262614, Centroid = (6016.81/2323.7) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.075, f(beta) = 1.034, f(b) = 1.085          HISTORY # after bracketing: f(a) = 1.075, f(beta) = 1.034, f(b) = 1.085         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.034   4       4.662                                           HISTORY # 2     1.034   4       2.725                                           HISTORY # 3     1.034   4       1.781                                           HISTORY # 4     1.034   4       1.041                                           HISTORY # 5     1.034   4       0.6802                                          HISTORY # 6     1.034   4       0.3976                                          HISTORY # 7     1.034   4       0.2598                                          HISTORY # 8     1.034   3.933   0.1747                                          HISTORY # 9     1.034   3.933   0.0679                                          HISTORY # Converged to minimum: chi^2 = 1.034 at beta = 3.933                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.933               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.034   0.03937                                         HISTORY # 1     4       1.031   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.147, beta = 3.933, b = 4.327                     HISTORY # after checking limits: a = 3.147, beta = 3.933, b = 4.327             HISTORY # starting values: f(a) = 1.035, f(beta) = 1.031, f(b) = 1.03           HISTORY # after bracketing: f(a) = 1.031, f(beta) = 1.03, f(b) = 1.044          HISTORY # Setting limits: 3.933 <= beta <= 6.49                                 HISTORY # Starting with beta = 4.327                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.03    4.327   1.22                                            HISTORY # 2     1.03    4.327   0.709                                           HISTORY # 3     1.03    4.327   0.4659                                          HISTORY # 4     1.03    4.447   0.3156                                          HISTORY # 5     1.03    4.48    0.1951                                          HISTORY # 6     1.03    4.481   0.1622                                          HISTORY # 7     1.03    4.481   0.001243                                        HISTORY # Converged to minimum: chi^2 = 1.03 at beta = 4.481                    HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.66 / photometric redshift                           SED_TYPE=                    1 / SED template                                   MAG     =               29.351 / AB magnitude                                   MAG_ERR =                0.112 / AB magnitude erroreúÊÇlãœ?Ä>](³¿Hì	ykUq¿Aœ:+?¤?H”‘n†~?.á”ç5¿ÒJíð¤Ç¿0›mÜàÙ×¿8ž;ySƒ        ¿]Î­aÁˆß¿5b¬ß§p?"‘Ô’¾ò                >öçÒê“~¾[ê{“çŽü                        ¾ý °ÉW.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        