SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.08325334512229 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14998933834528 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9702 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5498. / min(X) in image pixels                         XMAX    =                5548. / max(X) in image pixels                         YMIN    =                9472. / min(Y) in image pixels                         YMAX    =                9522. / min(Y) in image pixels                         CENTROID=    (5522.55, 9495.3) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9702 found in the area (5510/9486) to (5536/9507)   HISTORY # Extending the area around object to (5498/9472) to (5548/9522)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0937136, Centroid = (5522.55/9495.3) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.308, f(beta) = 1.173, f(b) = 1.174          HISTORY # after bracketing: f(a) = 1.308, f(beta) = 1.173, f(b) = 1.174         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.169   8.292   6                                               HISTORY # 2     1.168   9.708   3.708                                           HISTORY # 3     1.168   9.708   2.292                                           HISTORY # 4     1.168   9.708   1.416                                           HISTORY # 5     1.168   9.708   0.8754                                          HISTORY # 6     1.168   9.502   0.541                                           HISTORY # 7     1.168   9.532   0.2067                                          HISTORY # 8     1.168   9.537   0.176                                           HISTORY # 9     1.168   9.537   0.00453                                         HISTORY # Converged to minimum: chi^2 = 1.168 at beta = 9.537                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.537               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.168   0.02832                                         HISTORY # 1     4       1.151   0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.629, beta = 9.537, b = 10.49                     HISTORY # after checking limits: a = 7.629, beta = 9.537, b = 10.49             HISTORY # starting values: f(a) = 1.15, f(beta) = 1.151, f(b) = 1.152           HISTORY # after bracketing: f(a) = 1.158, f(beta) = 1.15, f(b) = 1.151          HISTORY # Setting limits: 5.086 <= beta <= 9.537                                HISTORY # Starting with beta = 7.629                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.15    7.629   2.879                                           HISTORY # 2     1.15    7.629   1.7                                             HISTORY # 3     1.15    7.258   0.9714                                          HISTORY # 4     1.15    7.156   0.6003                                          HISTORY # 5     1.15    7.156   0.2926                                          HISTORY # 6     1.15    7.083   0.1902                                          HISTORY # Converged to minimum: chi^2 = 1.15 at beta = 7.083                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.14 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.839 / AB magnitude                                   MAG_ERR =                0.056 / AB magnitude errorv4˙–m >ÍÆÀ?EΩøP~yoëÃ?@*–ı¿$!øV¨ÿB∞†ªø@ßºèêúøT∞6XdøUz–5Ê[¢?P˜2⁄b˛7        øJk/Ω¬Ô?!⁄©Ö€‡ıøA”ÍÒƒ†                ?)ÿ?ß◊PÅ?Ë˛⁄·                        ?gzÕÈ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        