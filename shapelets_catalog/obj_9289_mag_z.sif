SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.81159962986702 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.26515211280016 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9289 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4634. / min(X) in image pixels                         XMAX    =                4684. / max(X) in image pixels                         YMIN    =                8039. / min(Y) in image pixels                         YMAX    =                8089. / min(Y) in image pixels                         CENTROID=   (4655.51, 8065.97) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9289 found in the area (4649/8051) to (4668/8077)   HISTORY # Extending the area around object to (4634/8039) to (4684/8089)        HISTORY # Object 8675 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.173054, Centroid = (4655.51/8065.97) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.931, f(beta) = 2.127, f(b) = 2.86           HISTORY # after bracketing: f(a) = 2.127, f(beta) = 1.931, f(b) = 2.127         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.443   2.827   5.134                                           HISTORY # 2     1.377   2.402   1.961                                           HISTORY # 3     1.368   2.32    1.536                                           HISTORY # 4     1.347   1.765   1.454                                           HISTORY # 5     1.343   1.894   0.5553                                          HISTORY # 6     1.343   1.894   0.1643                                          HISTORY # 7     1.343   1.894   0.08433                                         HISTORY # Converged to minimum: chi^2 = 1.343 at beta = 1.894                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.894               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.343   0.02832                                         HISTORY # 1     4       1.291   0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.515, beta = 1.894, b = 2.083                     HISTORY # after checking limits: a = 1.515, beta = 1.894, b = 2.083             HISTORY # starting values: f(a) = 1.333, f(beta) = 1.291, f(b) = 1.281          HISTORY # after bracketing: f(a) = 1.281, f(beta) = 1.27, f(b) = 1.53           HISTORY # Setting limits: 2.083 <= beta <= 4.688                                HISTORY # Starting with beta = 3.125                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.27    3.125   1.639                                           HISTORY # 2     1.265   2.727   1.042                                           HISTORY # 3     1.265   2.821   0.3979                                          HISTORY # 4     1.265   2.804   0.09404                                         HISTORY # 5     1.265   2.812   0.01747                                         HISTORY # Converged to minimum: chi^2 = 1.265 at beta = 2.812                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.08 / photometric redshift                           SED_TYPE=                   12 / SED template                                   MAG     =               27.294 / AB magnitude                                   MAG_ERR =                0.026 / AB magnitude error“¼8Ë¶·Ô?Yœx~¿]Ì)ówÔ¿K)MÞB?YÍ‰J!v¿mb%Ã†A
¿Y*†¶œWI?Z˜3W¡™¿F‡cÞQâô        ¿gx´ŽÌÒ¿	.¶¯5$?f7ƒuÏP>                ?jý²ä~/L¿2j¼M"ÃH                        ?fK‹¼@“ö                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        