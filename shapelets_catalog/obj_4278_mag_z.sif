SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.44690884926457 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.08844334832267 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4278 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7478. / min(X) in image pixels                         XMAX    =                7516. / max(X) in image pixels                         YMIN    =                4818. / min(Y) in image pixels                         YMAX    =                4856. / min(Y) in image pixels                         CENTROID=    (7496.07, 4836.9) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4278 found in the area (7490/4832) to (7503/4841)   HISTORY # Extending the area around object to (7478/4818) to (7516/4856)        HISTORY # Object 4183 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0328622, Centroid = (7496.07/4836.9) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.131, f(beta) = 1.125, f(b) = 1.186          HISTORY # after bracketing: f(a) = 1.131, f(beta) = 1.125, f(b) = 1.186         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   4       4.662                                           HISTORY # 2     1.108   2.803   3.134                                           HISTORY # 3     1.1     2.063   1.937                                           HISTORY # 4     1.1     2.063   1.197                                           HISTORY # 5     1.1     2.063   0.7398                                          HISTORY # 6     1.099   1.888   0.4572                                          HISTORY # 7     1.099   1.893   0.1747                                          HISTORY # 8     1.099   1.893   0.06957                                         HISTORY # Converged to minimum: chi^2 = 1.099 at beta = 1.893                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.893               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.099   0.03729                                         HISTORY # 1     4       1.091   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.514, beta = 1.893, b = 2.082                     HISTORY # after checking limits: a = 1.514, beta = 1.893, b = 2.082             HISTORY # starting values: f(a) = 1.089, f(beta) = 1.091, f(b) = 1.089          HISTORY # after bracketing: f(a) = 1.091, f(beta) = 1.089, f(b) = 1.091         HISTORY # Setting limits: 1.099 <= beta <= 1.893                                HISTORY # Starting with beta = 1.514                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.089   1.514   0.5373                                          HISTORY # 2     1.089   1.514   0.3033                                          HISTORY # 3     1.088   1.454   0.1587                                          HISTORY # 4     1.088   1.452   0.09805                                         HISTORY # 5     1.088   1.452   0.0389                                          HISTORY # 6     1.088   1.447   0.03656                                         HISTORY # Converged to minimum: chi^2 = 1.088 at beta = 1.447                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.54 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               29.137 / AB magnitude                                   MAG_ERR =                0.088 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?qÕ≠·πµ?#¨eÀ˛>ÚlÀ—[†?∑Å∆Uˇ∆?M©‚â‘ÆãøéÍ!˛Jöø!ﬁàÎÊˇÎ?,ÆÚ»∂πuø3LßÄ]Œ        ?MÀPCÁøG9Ïê∞ﬁ?+ó¡π"†                øKØ˝…∏ø∞™SµÜ                        ?IjˇRlâ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        