SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.99602500548741 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.21223894913866 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  348 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4464. / min(X) in image pixels                         XMAX    =                4506. / max(X) in image pixels                         YMIN    =                1761. / min(Y) in image pixels                         YMAX    =                1803. / min(Y) in image pixels                         CENTROID=    (4485.55, 1779.4) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 348 found in the area (4476/1774) to (4494/1789)    HISTORY # Extending the area around object to (4464/1761) to (4506/1803)        HISTORY # Object 362 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0727249, Centroid = (4485.55/1779.4) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.408, f(beta) = 1.446, f(b) = 1.735          HISTORY # after bracketing: f(a) = 1.446, f(beta) = 1.408, f(b) = 1.446         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.258   2.445   4.134                                           HISTORY # 2     1.25    2.194   1.579                                           HISTORY # 3     1.248   2.141   1.328                                           HISTORY # 4     1.247   1.654   1.275                                           HISTORY # 5     1.245   1.864   0.4872                                          HISTORY # 6     1.245   1.864   0.2147                                          HISTORY # 7     1.245   1.864   0.08524                                         HISTORY # Converged to minimum: chi^2 = 1.245 at beta = 1.864                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.864               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.245   0.03373                                         HISTORY # 1     4       1.224   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.491, beta = 1.864, b = 2.05                      HISTORY # after checking limits: a = 1.491, beta = 1.864, b = 2.05              HISTORY # starting values: f(a) = 1.23, f(beta) = 1.224, f(b) = 1.223           HISTORY # after bracketing: f(a) = 1.223, f(beta) = 1.212, f(b) = 1.307         HISTORY # Setting limits: 2.05 <= beta <= 4.613                                 HISTORY # Starting with beta = 3.075                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.212   3.075   1.612                                           HISTORY # 2     1.212   3.075   0.9788                                          HISTORY # 3     1.212   3.075   0.6159                                          HISTORY # 4     1.212   2.926   0.3915                                          HISTORY # 5     1.212   2.996   0.1495                                          HISTORY # 6     1.212   2.996   0.07916                                         HISTORY # 7     1.212   2.996   0.03029                                         HISTORY # Converged to minimum: chi^2 = 1.212 at beta = 2.996                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.55 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =                28.03 / AB magnitude                                   MAG_ERR =                0.042 / AB magnitude errorƒñ¡@ hã>ô‚Þì–nµ¿[?inˆƒJ?SaSA]|?IíŸi+\_?" œµÕý½¿Wïvz2=õ¿>Äðâ k¿A¤;¸­        ¿aR¸wøÚ?TÅ/´¿?^¯,=(ƒ                ¿9M™QY'8?8ûpHŸ&                        ?Y˜Òž'7^                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        