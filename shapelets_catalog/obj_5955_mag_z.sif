SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.09445247884218 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07405445551125 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5955 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8502. / min(X) in image pixels                         XMAX    =                8538. / max(X) in image pixels                         YMIN    =                5638. / min(Y) in image pixels                         YMAX    =                5674. / min(Y) in image pixels                         CENTROID=    (8520.22, 5655.6) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5955 found in the area (8514/5652) to (8525/5660)   HISTORY # Extending the area around object to (8502/5638) to (8538/5674)        HISTORY # Object 5879 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0239546, Centroid = (8520.22/5655.6) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.106, f(beta) = 1.079, f(b) = 1.089          HISTORY # after bracketing: f(a) = 1.106, f(beta) = 1.079, f(b) = 1.089         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.079   4       4.662                                           HISTORY # 2     1.078   2.803   3.134                                           HISTORY # 3     1.077   3.177   1.197                                           HISTORY # 4     1.077   3.177   0.4235                                          HISTORY # 5     1.077   3.177   0.1926                                          HISTORY # 6     1.077   3.177   0.1427                                          HISTORY # 7     1.077   3.122   0.1427                                          HISTORY # 8     1.077   3.136   0.05452                                         HISTORY # Converged to minimum: chi^2 = 1.077 at beta = 3.136                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.136               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.077   0.03937                                         HISTORY # 1     4       1.074   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.509, beta = 3.136, b = 3.45                      HISTORY # after checking limits: a = 2.509, beta = 3.136, b = 3.45              HISTORY # starting values: f(a) = 1.077, f(beta) = 1.074, f(b) = 1.075          HISTORY # after bracketing: f(a) = 1.077, f(beta) = 1.074, f(b) = 1.075         HISTORY # Setting limits: 2.509 <= beta <= 3.45                                 HISTORY # Starting with beta = 3.136                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.074   3.136   0.5532                                          HISTORY # 2     1.074   3.136   0.3594                                          HISTORY # 3     1.074   3.136   0.2113                                          HISTORY # 4     1.074   3.136   0.1373                                          HISTORY # 5     1.074   3.101   0.09152                                         HISTORY # 6     1.074   3.094   0.05656                                         HISTORY # Converged to minimum: chi^2 = 1.074 at beta = 3.094                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                11.08 / photometric redshift                           SED_TYPE=                    1 / SED template                                   MAG     =                  99. / AB magnitude                                   MAG_ERR =               32.548 / AB magnitude errorŒëuÖ?,t[%ç‘l>Óƒì§™¿@,Z1†R(?:{7úý²„¿6Ë~ú	Ç¿B=–Ó´c?ÖdäÍ?Z3³ U         ?R†aùÐ,q¾òÔ.w„Þ¿1ú;“ÄŸ½                ¿=åG›kÃJ?6æk|AGW                        ?2dÆÊ•“Æ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        