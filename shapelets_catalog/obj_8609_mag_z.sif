SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.94649327071706 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13537788282286 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8609 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3554. / min(X) in image pixels                         XMAX    =                3594. / max(X) in image pixels                         YMIN    =                7022. / min(Y) in image pixels                         YMAX    =                7062. / min(Y) in image pixels                         CENTROID=   (3574.38, 7042.35) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8609 found in the area (3566/7035) to (3581/7049)   HISTORY # Extending the area around object to (3554/7022) to (3594/7062)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0662358, Centroid = (3574.38/7042.35)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.365, f(beta) = 1.301, f(b) = 1.613          HISTORY # after bracketing: f(a) = 1.365, f(beta) = 1.301, f(b) = 1.613         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.301   5       6.044                                           HISTORY # 2     1.219   3.421   4.134                                           HISTORY # 3     1.191   2.445   2.555                                           HISTORY # 4     1.186   1.842   1.579                                           HISTORY # 5     1.186   1.842   0.6184                                          HISTORY # 6     1.185   2.072   0.6031                                          HISTORY # 7     1.184   2.046   0.2304                                          HISTORY # 8     1.184   2.046   0.1044                                          HISTORY # 9     1.184   2.018   0.07789                                         HISTORY # Converged to minimum: chi^2 = 1.184 at beta = 2.018                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.018               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.184   0.03542                                         HISTORY # 1     4       1.136   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.614, beta = 2.018, b = 2.219                     HISTORY # after checking limits: a = 1.614, beta = 2.018, b = 2.219             HISTORY # starting values: f(a) = 1.147, f(beta) = 1.136, f(b) = 1.14           HISTORY # after bracketing: f(a) = 1.147, f(beta) = 1.136, f(b) = 1.14          HISTORY # Setting limits: 1.614 <= beta <= 2.219                                HISTORY # Starting with beta = 2.018                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.136   2.018   0.3559                                          HISTORY # 2     1.136   2.018   0.2312                                          HISTORY # 3     1.135   1.959   0.1541                                          HISTORY # 4     1.135   1.951   0.09525                                         HISTORY # 5     1.135   1.951   0.04103                                         HISTORY # 6     1.135   1.946   0.03351                                         HISTORY # Converged to minimum: chi^2 = 1.135 at beta = 1.946                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.64 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               28.225 / AB magnitude                                   MAG_ERR =                0.048 / AB magnitude errorƒ…Ò„iB¿<b‰Á"jƒ?&Ô°|?Çr?F ìæÄ¸?MLN±4•?K6qÃ´€ë¿_š¡c†æ5¿ÄBV:¿K‘½?›š        ?S‹îD€œ?PÓqp¶a?[yFÊ ä2                ¿Tý>,M?6Y*3•	þ                        ?NQRU«€                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        