SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.99669257809296 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1209643349178 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9168 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7249. / min(X) in image pixels                         XMAX    =                7285. / max(X) in image pixels                         YMIN    =                7904. / min(Y) in image pixels                         YMAX    =                7940. / min(Y) in image pixels                         CENTROID=   (7265.53, 7923.56) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9168 found in the area (7261/7916) to (7272/7928)   HISTORY # Extending the area around object to (7249/7904) to (7285/7940)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0239585, Centroid = (7265.53/7923.56)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.159, f(beta) = 1.135, f(b) = 1.151          HISTORY # after bracketing: f(a) = 1.159, f(beta) = 1.135, f(b) = 1.151         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.135   5.528   4                                               HISTORY # 2     1.133   4.809   1.528                                           HISTORY # 3     1.133   4.809   0.7403                                          HISTORY # 4     1.133   4.809   0.2963                                          HISTORY # 5     1.133   4.809   0.2744                                          HISTORY # 6     1.133   4.809   0.1048                                          HISTORY # 7     1.133   4.849   0.1048                                          HISTORY # 8     1.133   4.848   0.04004                                         HISTORY # Converged to minimum: chi^2 = 1.133 at beta = 4.848                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.848               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.133   0.03937                                         HISTORY # 1     4       1.122   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.878, beta = 4.848, b = 5.332                     HISTORY # after checking limits: a = 3.878, beta = 4.848, b = 5.332             HISTORY # starting values: f(a) = 1.121, f(beta) = 1.122, f(b) = 1.122          HISTORY # after bracketing: f(a) = 1.132, f(beta) = 1.121, f(b) = 1.122         HISTORY # Setting limits: 2.585 <= beta <= 4.848                                HISTORY # Starting with beta = 3.878                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.121   3.878   1.463                                           HISTORY # 2     1.121   3.878   0.8641                                          HISTORY # 3     1.121   3.878   0.5589                                          HISTORY # 4     1.121   4.02    0.3703                                          HISTORY # 5     1.121   3.983   0.1415                                          HISTORY # 6     1.121   3.997   0.03616                                         HISTORY # Converged to minimum: chi^2 = 1.121 at beta = 3.997                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.08 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               29.553 / AB magnitude                                   MAG_ERR =                0.178 / AB magnitude errorcêÃ~QïÝ?=Æ›n@mž¿"îüR‚R¿;jÂ
±;ï?@|ç½qJõ?–›¹§ãI¿3MYO½Ù¿#húâ…?:'Î´Šé¿        ¿P¬†Õã¦¿A¡q]àúÊ?(úRO)†                ?Lù<Kì x¿9Lû4×d                        ¿F@)FTš                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        