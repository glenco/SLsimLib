SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.45072172981823 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2591914360218 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7542 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3299. / min(X) in image pixels                         XMAX    =                3333. / max(X) in image pixels                         YMIN    =                6566. / min(Y) in image pixels                         YMAX    =                6600. / min(Y) in image pixels                         CENTROID=   (3315.97, 6582.99) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7542 found in the area (3312/6578) to (3319/6587)   HISTORY # Extending the area around object to (3299/6566) to (3333/6600)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0220333, Centroid = (3315.97/6582.99)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.28, f(beta) = 1.284, f(b) = 1.32            HISTORY # after bracketing: f(a) = 1.284, f(beta) = 1.28, f(b) = 1.284          HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.266   2.063   3.134                                           HISTORY # 2     1.264   1.811   1.197                                           HISTORY # 3     1.264   1.751   0.9449                                          HISTORY # 4     1.263   1.413   0.885                                           HISTORY # 5     1.263   1.413   0.4733                                          HISTORY # 6     1.263   1.413   0.2643                                          HISTORY # 7     1.263   1.413   0.1808                                          HISTORY # 8     1.263   1.413   0.101                                           HISTORY # 9     1.263   1.413   0.06905                                         HISTORY # Converged to minimum: chi^2 = 1.263 at beta = 1.413                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.413               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.263   0.0417                                          HISTORY # 1     4       1.259   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.13, beta = 1.413, b = 1.554                      HISTORY # after checking limits: a = 1.13, beta = 1.413, b = 1.554              HISTORY # starting values: f(a) = 1.261, f(beta) = 1.259, f(b) = 1.259          HISTORY # after bracketing: f(a) = 1.261, f(beta) = 1.259, f(b) = 1.259         HISTORY # Setting limits: 1.13 <= beta <= 1.554                                 HISTORY # Starting with beta = 1.413                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.259   1.413   0.2492                                          HISTORY # 2     1.259   1.467   0.1413                                          HISTORY # 3     1.259   1.448   0.05397                                         HISTORY # 4     1.259   1.451   0.01925                                         HISTORY # Converged to minimum: chi^2 = 1.259 at beta = 1.451                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.11 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =                29.85 / AB magnitude                                   MAG_ERR =                0.119 / AB magnitude errorjP[0?(˜Y«-Lí¿!ƒ­>nîä¾ÒOs?ö¬	?lIÐg5%¿0ã¥û2‡?J?ÒøHÈ?+}Mïê9b>ÉwÞNþ¢D        ??Åõ|+q¿J"Þ4\ú{??œ]ON>‡                ?<„¿dŠþÉ?+¬9âeÖ                        ¿#÷Ö\ä I                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        