SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.84191432574053 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.15492281569789 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  770 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1734 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6604. / min(X) in image pixels                         XMAX    =                6646. / max(X) in image pixels                         YMIN    =                3324. / min(Y) in image pixels                         YMAX    =                3366. / min(Y) in image pixels                         CENTROID=   (6625.73, 3343.94) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1734 found in the area (6619/3336) to (6631/3353)   HISTORY # Extending the area around object to (6604/3324) to (6646/3366)        HISTORY # Object 1741 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0765219, Centroid = (6625.73/3343.94)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.295, f(beta) = 1.324, f(b) = 1.622          HISTORY # after bracketing: f(a) = 1.324, f(beta) = 1.295, f(b) = 1.324         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.212   2.445   4.134                                           HISTORY # 2     1.209   2.222   1.579                                           HISTORY # 3     1.208   2.175   1.356                                           HISTORY # 4     1.208   2.175   0.5474                                          HISTORY # 5     1.207   1.984   0.4999                                          HISTORY # 6     1.207   1.984   0.1951                                          HISTORY # 7     1.207   1.984   0.07705                                         HISTORY # Converged to minimum: chi^2 = 1.207 at beta = 1.984                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.984               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.207   0.03373                                         HISTORY # 1     4       1.157   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.587, beta = 1.984, b = 2.182                     HISTORY # after checking limits: a = 1.587, beta = 1.984, b = 2.182             HISTORY # starting values: f(a) = 1.162, f(beta) = 1.157, f(b) = 1.163          HISTORY # after bracketing: f(a) = 1.162, f(beta) = 1.157, f(b) = 1.163         HISTORY # Setting limits: 1.587 <= beta <= 2.182                                HISTORY # Starting with beta = 1.984                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.155   1.832   0.3968                                          HISTORY # 2     1.155   1.844   0.1516                                          HISTORY # 3     1.155   1.842   0.01126                                         HISTORY # Converged to minimum: chi^2 = 1.155 at beta = 1.842                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.44 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               28.396 / AB magnitude                                   MAG_ERR =                0.048 / AB magnitude errorÇ>*ÏÿøïøC≥Ÿéi≤{?AçZRú?Q9Mí"ﬁ?Sˆµ‰Œå?(v’O:5
øE±‚XÃARøCfá˝®0ø@•ˇ&ÜœÛ        ?lqe`}Å?Jaëø‡ù?PÊüÉÅ                øHy‰[ˆROø0Ê⁄5ÿ¥ä                        ?WuáŸªÚ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        