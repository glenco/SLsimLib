SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.82094957261457 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17729891355184 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3710 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2761. / min(X) in image pixels                         XMAX    =                2797. / max(X) in image pixels                         YMIN    =                4540. / min(Y) in image pixels                         YMAX    =                4576. / min(Y) in image pixels                         CENTROID=   (2779.01, 4558.03) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3710 found in the area (2773/4553) to (2784/4563)   HISTORY # Extending the area around object to (2761/4540) to (2797/4576)        HISTORY # Object 3450 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.050042, Centroid = (2779.01/4558.03) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.305, f(beta) = 1.297, f(b) = 1.631          HISTORY # after bracketing: f(a) = 1.305, f(beta) = 1.297, f(b) = 1.631         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.297   4       4.662                                           HISTORY # 2     1.223   2.803   3.134                                           HISTORY # 3     1.195   2.063   1.937                                           HISTORY # 4     1.194   1.606   1.197                                           HISTORY # 5     1.192   1.792   0.4572                                          HISTORY # 6     1.192   1.792   0.201                                           HISTORY # 7     1.192   1.792   0.08597                                         HISTORY # 8     1.192   1.792   0.04203                                         HISTORY # Converged to minimum: chi^2 = 1.192 at beta = 1.792                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.792               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.192   0.03937                                         HISTORY # 1     4       1.177   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.434, beta = 1.792, b = 1.971                     HISTORY # after checking limits: a = 1.434, beta = 1.792, b = 1.971             HISTORY # starting values: f(a) = 1.183, f(beta) = 1.177, f(b) = 1.178          HISTORY # after bracketing: f(a) = 1.183, f(beta) = 1.177, f(b) = 1.178         HISTORY # Setting limits: 1.434 <= beta <= 1.971                                HISTORY # Starting with beta = 1.792                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.177   1.792   0.3161                                          HISTORY # 2     1.177   1.792   0.2053                                          HISTORY # 3     1.177   1.792   0.1207                                          HISTORY # 4     1.177   1.818   0.06845                                         HISTORY # 5     1.177   1.821   0.0423                                          HISTORY # 6     1.177   1.821   0.00324                                         HISTORY # Converged to minimum: chi^2 = 1.177 at beta = 1.821                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.03 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =                28.65 / AB magnitude                                   MAG_ERR =                0.053 / AB magnitude errorÅà˘cóÀ?82ëD
LC?øs›â.7?u	SpÂ?A9ﬂ7yÉ	øä1”∑Î>´´Vò]ø$√{3_©?4Wl–∞S        ø5∫¶¸\∞ó?JΩ‚ê?D€‰÷¢cì                ?5_n<∏⁄?(`ªG£8                        ?HáVÑøπ_                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        