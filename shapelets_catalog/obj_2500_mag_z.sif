SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.66903478680169 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11498856517736 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2500 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7690. / min(X) in image pixels                         XMAX    =                7722. / max(X) in image pixels                         YMIN    =                3823. / min(Y) in image pixels                         YMAX    =                3855. / min(Y) in image pixels                         CENTROID=   (7705.64, 3838.64) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2500 found in the area (7702/3835) to (7709/3842)   HISTORY # Extending the area around object to (7690/3823) to (7722/3855)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0200022, Centroid = (7705.64/3838.64)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.136, f(beta) = 1.175, f(b) = 1.232          HISTORY # after bracketing: f(a) = 1.175, f(beta) = 1.136, f(b) = 1.175         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.128   2.063   3.134                                           HISTORY # 2     1.121   1.616   1.197                                           HISTORY # 3     1.12    1.57    0.7503                                          HISTORY # 4     1.119   1.301   0.7038                                          HISTORY # 5     1.119   1.329   0.2688                                          HISTORY # 6     1.119   1.329   0.1202                                          HISTORY # 7     1.119   1.364   0.09185                                         HISTORY # 8     1.119   1.353   0.03508                                         HISTORY # Converged to minimum: chi^2 = 1.119 at beta = 1.353                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.353               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.119   0.04432                                         HISTORY # 1     4       1.117   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.083, beta = 1.353, b = 1.489                     HISTORY # after checking limits: a = 1.118, beta = 1.353, b = 1.489             HISTORY # starting values: f(a) = 1.12, f(beta) = 1.117, f(b) = 1.116           HISTORY # after bracketing: f(a) = 1.117, f(beta) = 1.116, f(b) = 1.122         HISTORY # Setting limits: 1.353 <= beta <= 2.233                                HISTORY # Starting with beta = 1.489                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.115   1.773   0.7443                                          HISTORY # 2     1.115   1.669   0.2843                                          HISTORY # 3     1.115   1.669   0.1045                                          HISTORY # 4     1.115   1.669   0.04021                                         HISTORY # 5     1.115   1.669   0.01566                                         HISTORY # Converged to minimum: chi^2 = 1.115 at beta = 1.669                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.55 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               29.701 / AB magnitude                                   MAG_ERR =                0.106 / AB magnitude errornÉú—(W?EÆ;„rÆ$?±'JÕ4¸¿Dxé¨Lþ?5¯IÔé«ˆ¿.—8ú0?!Ö¨		–?"1%›¿­?#Â\Eád        ¿('Rzm*¿8ª"³¾?<4¯ø˜¬ÿ                ?%îâeô‘?†O©2ª&                        ?@û¯ášÖ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        