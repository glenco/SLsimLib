SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      4.6243129053891 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1335880126745 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1535 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4165. / min(X) in image pixels                         XMAX    =                4197. / max(X) in image pixels                         YMIN    =                3146. / min(Y) in image pixels                         YMAX    =                3178. / min(Y) in image pixels                         CENTROID=   (4180.25, 3161.85) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1535 found in the area (4177/3159) to (4184/3165)   HISTORY # Extending the area around object to (4165/3146) to (4197/3178)        HISTORY # Object 1510 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0138161, Centroid = (4180.25/3161.85)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.17, f(beta) = 1.147, f(b) = 1.142           HISTORY # after bracketing: f(a) = 1.147, f(beta) = 1.142, f(b) = 1.147         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.142   6.472   4                                               HISTORY # 2     1.142   7.212   1.528                                           HISTORY # 3     1.142   7.212   0.7395                                          HISTORY # 4     1.142   7.212   0.2825                                          HISTORY # 5     1.142   7.187   0.2825                                          HISTORY # 6     1.142   7.186   0.2576                                          HISTORY # 7     1.142   7.186   0.0008295                                       HISTORY # Converged to minimum: chi^2 = 1.142 at beta = 7.186                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.186               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.142   0.04432                                         HISTORY # 1     4       1.141   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.749, beta = 7.186, b = 7.905                     HISTORY # after checking limits: a = 5.749, beta = 6.452, b = 7.155             HISTORY # starting values: f(a) = 1.136, f(beta) = 1.139, f(b) = 1.14           HISTORY # after bracketing: f(a) = 1.137, f(beta) = 1.136, f(b) = 1.139         HISTORY # Setting limits: 3.833 <= beta <= 6.452                                HISTORY # Starting with beta = 5.749                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.134   5.017   1.916                                           HISTORY # 2     1.134   4.564   1.184                                           HISTORY # 3     1.134   4.564   0.5089                                          HISTORY # 4     1.134   4.564   0.2293                                          HISTORY # 5     1.134   4.564   0.1728                                          HISTORY # 6     1.134   4.63    0.1728                                          HISTORY # 7     1.134   4.624   0.066                                           HISTORY # Converged to minimum: chi^2 = 1.134 at beta = 4.624                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.76 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.586 / AB magnitude                                   MAG_ERR =                0.198 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?]H·Ü™?@V1Îø-µû= ?G$†®v#π?6 [úõÄø-¢omÁ/ø<ŒZ5YP&?,u:§îø2:v˝Fá        ø)'08zrø7–áC:õ1?;É{´çH√                ?>ÅQÀUøDÃ|—©	‰                        ø-;‚\∏T                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        