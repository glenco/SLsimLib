SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.88445410818686 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.32630892302613 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7515 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6321. / min(X) in image pixels                         XMAX    =                6369. / max(X) in image pixels                         YMIN    =                7421. / min(Y) in image pixels                         YMAX    =                7469. / min(Y) in image pixels                         CENTROID=   (6342.45, 7442.24) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7515 found in the area (6335/7433) to (6354/7456)   HISTORY # Extending the area around object to (6321/7421) to (6369/7469)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.161855, Centroid = (6342.45/7442.24) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.857, f(beta) = 2.743, f(b) = 3.8            HISTORY # after bracketing: f(a) = 2.743, f(beta) = 1.857, f(b) = 2.743         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.621   2.827   5.134                                           HISTORY # 2     1.467   2.134   1.961                                           HISTORY # 3     1.459   2.07    1.268                                           HISTORY # 4     1.445   1.61    1.204                                           HISTORY # 5     1.439   1.758   0.4598                                          HISTORY # 6     1.439   1.758   0.1602                                          HISTORY # 7     1.439   1.758   0.06893                                         HISTORY # Converged to minimum: chi^2 = 1.439 at beta = 1.758                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.758               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.439   0.0295                                          HISTORY # 1     4       1.329   0.02956                                         HISTORY # 2     6       1.328   0.02964                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.406, beta = 1.758, b = 1.934                     HISTORY # after checking limits: a = 1.406, beta = 1.758, b = 1.934             HISTORY # starting values: f(a) = 1.351, f(beta) = 1.328, f(b) = 1.326          HISTORY # after bracketing: f(a) = 1.328, f(beta) = 1.326, f(b) = 1.401         HISTORY # Setting limits: 1.758 <= beta <= 2.9                                  HISTORY # Starting with beta = 1.934                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.326   1.934   0.545                                           HISTORY # 2     1.326   1.934   0.3168                                          HISTORY # 3     1.326   1.866   0.1758                                          HISTORY # 4     1.326   1.883   0.06714                                         HISTORY # 5     1.326   1.885   0.05045                                         HISTORY # 6     1.326   1.884   0.00165                                         HISTORY # Converged to minimum: chi^2 = 1.326 at beta = 1.884                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.03 / photometric redshift                           SED_TYPE=                   14 / SED template                                   MAG     =               27.495 / AB magnitude                                   MAG_ERR =                0.024 / AB magnitude erroróLPW}Jó?JRœJ[⁄óøV¿≥¶rí7ø8J:
’;√?g˙÷À?;öóbÜŸçø&Îî5zÜøOß"zÿ úøJÎ∂∫sX?Cn˜/…%Hø?)^*ï˚B>˙∂5ÈCø2
)´FÉÁ        ?8¿+q
ŒøA)˝Ä}˝Í?]FK∫ê?<•a‰ì: øZ{+
∞F                ?Qg•Û¿˜?E≤VT‘ø/Îº4≤JÖ?F!≠)ﬁŸ                        ?dô:v€v€?<äAdiø˙pi	Q                                øºs7zÎøB∆àÌI                                        ?@ﬁ∫à"2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        