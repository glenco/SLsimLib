SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.07999172638968 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07225495105701 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4214 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5047. / min(X) in image pixels                         XMAX    =                5095. / max(X) in image pixels                         YMIN    =                4815. / min(Y) in image pixels                         YMAX    =                4863. / min(Y) in image pixels                         CENTROID=   (5069.38, 4837.78) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4214 found in the area (5064/4827) to (5077/4851)   HISTORY # Extending the area around object to (5047/4815) to (5095/4863)        HISTORY # Object 4284 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0704734, Centroid = (5069.38/4837.78)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.163, f(beta) = 1.098, f(b) = 1.125          HISTORY # after bracketing: f(a) = 1.163, f(beta) = 1.098, f(b) = 1.125         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.098   6       7.426                                           HISTORY # 2     1.098   4.039   5.134                                           HISTORY # 3     1.095   5.017   1.961                                           HISTORY # 4     1.095   5.017   0.9775                                          HISTORY # 5     1.095   5.017   0.3734                                          HISTORY # 6     1.095   5.017   0.1426                                          HISTORY # 7     1.095   5.017   0.05448                                         HISTORY # Converged to minimum: chi^2 = 1.095 at beta = 5.017                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.017               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.095   0.0295                                          HISTORY # 1     4       1.079   0.02956                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.013, beta = 5.017, b = 5.518                     HISTORY # after checking limits: a = 4.013, beta = 5.017, b = 5.518             HISTORY # starting values: f(a) = 1.072, f(beta) = 1.079, f(b) = 1.083          HISTORY # after bracketing: f(a) = 1.094, f(beta) = 1.072, f(b) = 1.079         HISTORY # Setting limits: 2.675 <= beta <= 5.017                                HISTORY # Starting with beta = 4.013                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.072   4.013   1.514                                           HISTORY # 2     1.072   4.013   0.8942                                          HISTORY # 3     1.072   4.013   0.5784                                          HISTORY # 4     1.072   4.013   0.3416                                          HISTORY # 5     1.072   4.013   0.2209                                          HISTORY # 6     1.072   4.069   0.1464                                          HISTORY # 7     1.072   4.08    0.09047                                         HISTORY # Converged to minimum: chi^2 = 1.072 at beta = 4.08                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 3.09 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               28.571 / AB magnitude                                   MAG_ERR =                 0.08 / AB magnitude errornçLí⁄% ?ÕlQGe˛?TD=‘Ir6?}œÑh?RBhÔ`ø)™Î+`∞øI™4V>ÏßeÍˆœøI⁄A+§        øPì•Á∏’?H◊á?=Ûf?C´±4‡                ?Uÿ
_Å‘?§wT›n                        ?;ê±0èh                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        