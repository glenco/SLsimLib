SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.91623035459738 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.03855059475275 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9722 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5551. / min(X) in image pixels                         XMAX    =                5585. / max(X) in image pixels                         YMIN    =                9648. / min(Y) in image pixels                         YMAX    =                9682. / min(Y) in image pixels                         CENTROID=   (5567.85, 9664.93) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9722 found in the area (5563/9661) to (5572/9669)   HISTORY # Extending the area around object to (5551/9648) to (5585/9682)        HISTORY # Object 15352 nearby, but not overlapping.                             HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0347144, Centroid = (5567.85/9664.93)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.088, f(beta) = 1.054, f(b) = 1.089          HISTORY # after bracketing: f(a) = 1.088, f(beta) = 1.054, f(b) = 1.089         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.054   4       4.662                                           HISTORY # 2     1.047   2.803   3.134                                           HISTORY # 3     1.047   2.803   1.299                                           HISTORY # 4     1.047   2.803   0.5592                                          HISTORY # 5     1.047   2.803   0.4572                                          HISTORY # 6     1.047   2.803   0.1747                                          HISTORY # 7     1.047   2.87    0.1747                                          HISTORY # 8     1.047   2.857   0.06671                                         HISTORY # Converged to minimum: chi^2 = 1.047 at beta = 2.857                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.857               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.047   0.0417                                          HISTORY # 1     4       1.041   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.285, beta = 2.857, b = 3.142                     HISTORY # after checking limits: a = 2.285, beta = 2.857, b = 3.142             HISTORY # starting values: f(a) = 1.041, f(beta) = 1.041, f(b) = 1.04           HISTORY # after bracketing: f(a) = 1.041, f(beta) = 1.04, f(b) = 1.042          HISTORY # Setting limits: 2.857 <= beta <= 4.714                                HISTORY # Starting with beta = 3.142                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.039   3.743   1.571                                           HISTORY # 2     1.039   3.743   0.9711                                          HISTORY # 3     1.039   3.743   0.6001                                          HISTORY # 4     1.039   3.884   0.3709                                          HISTORY # 5     1.039   3.884   0.2292                                          HISTORY # 6     1.039   3.884   0.1417                                          HISTORY # 7     1.039   3.918   0.08756                                         HISTORY # 8     1.039   3.916   0.03345                                         HISTORY # Converged to minimum: chi^2 = 1.039 at beta = 3.916                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.69 / photometric redshift                           SED_TYPE=                   10 / SED template                                   MAG     =               29.094 / AB magnitude                                   MAG_ERR =                0.102 / AB magnitude errorq±çtª«?2x∏iøTa¢¯ÿ‰?FL∏öÉ4?Lø@QLjÆø$ *ZΩâáø@@ö±Æ>?#}êe°x{ø(Ù:—        ø-ﬁ#lÇÊø6´ÑUG⁄˝?IWŸ·Æ                ?Fˆ4fRí9ø<∑öó                        ?CN#0Æ÷Ä                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        