SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.51535297893281 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.15543150301325 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5367 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8079. / min(X) in image pixels                         XMAX    =                8123. / max(X) in image pixels                         YMIN    =                5378. / min(Y) in image pixels                         YMAX    =                5422. / min(Y) in image pixels                         CENTROID=    (8101.1, 5400.01) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5367 found in the area (8091/5392) to (8110/5407)   HISTORY # Extending the area around object to (8079/5378) to (8123/5422)        HISTORY # Object 8074 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.20207, Centroid = (8101.1/5400.01)   HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 3.356, f(beta) = 1.674, f(b) = 3.582          HISTORY # after bracketing: f(a) = 3.356, f(beta) = 1.674, f(b) = 3.582         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.674   5       6.044                                           HISTORY # 2     1.306   3.421   4.134                                           HISTORY # 3     1.278   2.77    2.555                                           HISTORY # 4     1.277   2.851   0.6509                                          HISTORY # 5     1.277   2.878   0.5695                                          HISTORY # 6     1.277   2.87    0.02626                                         HISTORY # Converged to minimum: chi^2 = 1.277 at beta = 2.87                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.87                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.277   0.03219                                         HISTORY # 1     4       1.168   0.03227                                         HISTORY # 2     6       1.159   0.03238                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.296, beta = 2.87, b = 3.157                      HISTORY # after checking limits: a = 2.296, beta = 2.87, b = 3.157              HISTORY # starting values: f(a) = 1.157, f(beta) = 1.159, f(b) = 1.167          HISTORY # after bracketing: f(a) = 1.293, f(beta) = 1.157, f(b) = 1.159         HISTORY # Setting limits: 1.531 <= beta <= 2.87                                 HISTORY # Starting with beta = 2.296                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.157   2.296   0.8664                                          HISTORY # 2     1.155   2.515   0.574                                           HISTORY # 3     1.155   2.515   0.362                                           HISTORY # 4     1.155   2.515   0.1428                                          HISTORY # 5     1.155   2.515   0.1355                                          HISTORY # 6     1.155   2.515   0.05176                                         HISTORY # Converged to minimum: chi^2 = 1.155 at beta = 2.515                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 0.22 / photometric redshift                           SED_TYPE=                   15 / SED template                                   MAG     =               27.092 / AB magnitude                                   MAG_ERR =                0.019 / AB magnitude errorôè≤
Ú,ø:/=ñ∑˛˚ø*!ó†˜@Uø9BE2î\â?ATÚEï?&⁄DÛ íx?2Ã”6!?'õ}ùú@?h˚°îJøRøHÉwj⁄ÀøKÑòŸ‰’é>…ñQÑ7X?6e%!”        ?hﬂQVmË¥øU‰–AÛcì?UKû¯»ñ?(COÿ¶Qæ¨é®˛úR                ødz0w~ì[?H••ÑMÂGø3+'ùw–≠?Eµë€<JD                        ?dˇ«#Û”øGÓ4Âˆïø=ì,!!‘ü                                øÔZ¶πÔS? P¶ƒáHÂ                                        ?Q≈^¡ˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        