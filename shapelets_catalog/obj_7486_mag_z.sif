SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     8.52120098870778 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.24709765187477 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7486 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2549. / min(X) in image pixels                         XMAX    =                2597. / max(X) in image pixels                         YMIN    =                6521. / min(Y) in image pixels                         YMAX    =                6569. / min(Y) in image pixels                         CENTROID=   (2572.15, 6543.29) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7486 found in the area (2563/6533) to (2583/6556)   HISTORY # Extending the area around object to (2549/6521) to (2597/6569)        HISTORY # Object 9084 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0653342, Centroid = (2572.15/6543.29)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.308, f(beta) = 1.259, f(b) = 1.262          HISTORY # after bracketing: f(a) = 1.308, f(beta) = 1.259, f(b) = 1.262         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.255   8.292   6                                               HISTORY # 2     1.255   8.292   2.97                                            HISTORY # 3     1.255   8.292   1.554                                           HISTORY # 4     1.255   8.292   1.013                                           HISTORY # 5     1.255   8.292   0.5934                                          HISTORY # 6     1.255   8.292   0.3868                                          HISTORY # 7     1.255   8.391   0.259                                           HISTORY # 8     1.255   8.35    0.09894                                         HISTORY # Converged to minimum: chi^2 = 1.255 at beta = 8.35                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 8.35                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.255   0.0295                                          HISTORY # 1     4       1.247   0.02956                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.68, beta = 8.35, b = 9.185                       HISTORY # after checking limits: a = 6.68, beta = 8.35, b = 9.185               HISTORY # starting values: f(a) = 1.248, f(beta) = 1.247, f(b) = 1.247          HISTORY # after bracketing: f(a) = 1.248, f(beta) = 1.247, f(b) = 1.247         HISTORY # Setting limits: 6.68 <= beta <= 9.185                                 HISTORY # Starting with beta = 8.35                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.247   8.35    1.473                                           HISTORY # 2     1.247   8.669   0.835                                           HISTORY # 3     1.247   8.521   0.3189                                          HISTORY # 4     1.247   8.521   0.1498                                          HISTORY # Converged to minimum: chi^2 = 1.247 at beta = 8.521                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.65 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.852 / AB magnitude                                   MAG_ERR =                0.091 / AB magnitude errorb@ûˇK?MSÎTùhåøXh>g=ﬁá?Cå<º¢„ø(h5V^rà?FGÿÏ‰xøT®§»$L?Dﬂ
böv?D’Ç∞ˆbD        ø\¶Ÿ$dHIø@>€“û§ ø<4`cpÇå                ?<Uê≈ñh?D˝§W√öÀ                        ?.E(lˆ˝                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        