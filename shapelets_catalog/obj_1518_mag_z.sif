SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.95539525971946 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2135428156808 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1518 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2827. / min(X) in image pixels                         XMAX    =                2885. / max(X) in image pixels                         YMIN    =                3143. / min(Y) in image pixels                         YMAX    =                3201. / min(Y) in image pixels                         CENTROID=   (2850.53, 3172.21) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1518 found in the area (2839/3163) to (2872/3180)   HISTORY # Extending the area around object to (2827/3143) to (2885/3201)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.148889, Centroid = (2850.53/3172.21) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 1.513, f(beta) = 1.31, f(b) = 1.443           HISTORY # after bracketing: f(a) = 1.513, f(beta) = 1.31, f(b) = 1.443          HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.31    7       8.808                                           HISTORY # 2     1.244   4.657   6.134                                           HISTORY # 3     1.222   3.209   3.791                                           HISTORY # 4     1.222   3.209   2.343                                           HISTORY # 5     1.222   3.209   1.448                                           HISTORY # 6     1.222   2.867   0.8949                                          HISTORY # 7     1.222   2.912   0.3418                                          HISTORY # 8     1.222   2.912   0.1583                                          HISTORY # 9     1.222   2.955   0.1134                                          HISTORY # Converged to minimum: chi^2 = 1.222 at beta = 2.955                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.955               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.222   0.0244                                          HISTORY # 1     4       1.214   0.02444                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.364, beta = 2.955, b = 3.251                     HISTORY # after checking limits: a = 2.364, beta = 2.955, b = 3.251             HISTORY # starting values: f(a) = 1.216, f(beta) = 1.214, f(b) = 1.214          HISTORY # after bracketing: f(a) = 1.216, f(beta) = 1.214, f(b) = 1.214         HISTORY # Setting limits: 2.364 <= beta <= 3.251                                HISTORY # Starting with beta = 2.955                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.214   2.955   0.5213                                          HISTORY # 2     1.214   2.955   0.3387                                          HISTORY # 3     1.214   2.955   0.1991                                          HISTORY # 4     1.214   2.955   0.1294                                          HISTORY # 5     1.214   2.955   0.07606                                         HISTORY # 6     1.214   2.955   0.04941                                         HISTORY # Converged to minimum: chi^2 = 1.214 at beta = 2.955                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 1.11 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.716 / AB magnitude                                   MAG_ERR =                0.038 / AB magnitude errorÑà˜ù+\?Dô¨¬p’±øS›Z4®YHø>£¬“–ÎÄ?C8<Më˜ø;ÇÀ~˛7òøAîjÎ{??83˚†?S{x(	´«        ?n/äVH2?@3K5	Àhø-è±†BO                >Ì(ÎPÙ‰ZøHws π†œ                        ?6iñ©X»‰                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        