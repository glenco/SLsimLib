SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.21925412398998 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.29279390583169 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5199 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1432. / min(X) in image pixels                         XMAX    =                1466. / max(X) in image pixels                         YMIN    =                5284. / min(Y) in image pixels                         YMAX    =                5318. / min(Y) in image pixels                         CENTROID=   (1447.95, 5299.62) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5199 found in the area (1444/5296) to (1454/5305)   HISTORY # Extending the area around object to (1432/5284) to (1466/5318)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0179343, Centroid = (1447.95/5299.62)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.293, f(beta) = 1.292, f(b) = 1.303          HISTORY # after bracketing: f(a) = 1.293, f(beta) = 1.292, f(b) = 1.303         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.29    5.528   4                                               HISTORY # 2     1.29    5.528   2.472                                           HISTORY # 3     1.29    5.528   1.528                                           HISTORY # 4     1.29    5.528   0.9443                                          HISTORY # 5     1.289   5.305   0.5836                                          HISTORY # 6     1.289   5.341   0.2229                                          HISTORY # 7     1.289   5.341   0.1077                                          HISTORY # 8     1.289   5.371   0.0712                                          HISTORY # Converged to minimum: chi^2 = 1.289 at beta = 5.371                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.371               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.289   0.0417                                          HISTORY # 1     4       1.294   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.297, beta = 5.371, b = 5.908                     HISTORY # after checking limits: a = 4.297, beta = 5.371, b = 5.908             HISTORY # starting values: f(a) = 1.297, f(beta) = 1.294, f(b) = 1.293          HISTORY # after bracketing: f(a) = 1.294, f(beta) = 1.293, f(b) = 1.294         HISTORY # Setting limits: 5.371 <= beta <= 7.656                                HISTORY # Starting with beta = 5.908                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.293   5.908   1.205                                           HISTORY # 2     1.293   6.163   0.6679                                          HISTORY # 3     1.293   6.219   0.4128                                          HISTORY # 4     1.293   6.219   0.3569                                          HISTORY # 5     1.293   6.219   0.1366                                          HISTORY # 6     1.293   6.219   0.1361                                          HISTORY # 7     1.293   6.219   0.05199                                         HISTORY # Converged to minimum: chi^2 = 1.293 at beta = 6.219                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.41 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               29.877 / AB magnitude                                   MAG_ERR =                 0.13 / AB magnitude erroröÎ¯Ôø6À	f˚â\øW4Ô‘{ÔÇ>˜r„rˆ∆s?úF·í,?1ÅA4ª>?/»do*!?/…mëØfÚø7ØñØˇ¬        øZKVÑ˛O?9ñfJfê≥?#}◊'±¸A                øDË¬U? # )Ôç¡                        ?"Fc ˚[,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        