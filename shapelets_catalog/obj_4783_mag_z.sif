SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      3.8256744279628 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.02860624182589 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4783 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2671. / min(X) in image pixels                         XMAX    =                2701. / max(X) in image pixels                         YMIN    =                5058. / min(Y) in image pixels                         YMAX    =                5088. / min(Y) in image pixels                         CENTROID=   (2685.42, 5073.46) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4783 found in the area (2683/5070) to (2689/5076)   HISTORY # Extending the area around object to (2671/5058) to (2701/5088)        HISTORY # Object 4678 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00936964, Centroid = (2685.42/5073.46HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.074, f(beta) = 1.042, f(b) = 1.058          HISTORY # after bracketing: f(a) = 1.074, f(beta) = 1.042, f(b) = 1.058         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.042   3       3.28                                            HISTORY # 2     1.042   3       1.961                                           HISTORY # 3     1.042   3       1.253                                           HISTORY # 4     1.041   2.689   0.8151                                          HISTORY # 5     1.041   2.549   0.5038                                          HISTORY # 6     1.041   2.607   0.1398                                          HISTORY # 7     1.041   2.61    0.08168                                         HISTORY # 8     1.041   2.608   0.002567                                        HISTORY # Converged to minimum: chi^2 = 1.041 at beta = 2.608                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.608               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.041   0.0473                                          HISTORY # 1     4       1.045   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.087, beta = 2.608, b = 2.869                     HISTORY # after checking limits: a = 2.087, beta = 2.608, b = 2.869             HISTORY # starting values: f(a) = 1.048, f(beta) = 1.045, f(b) = 1.04           HISTORY # after bracketing: f(a) = 1.04, f(beta) = 1.03, f(b) = 1.043           HISTORY # Setting limits: 2.869 <= beta <= 6.455                                HISTORY # Starting with beta = 4.304                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.03    4.304   2.256                                           HISTORY # 2     1.029   3.756   1.435                                           HISTORY # 3     1.029   3.764   0.548                                           HISTORY # 4     1.029   3.764   0.2142                                          HISTORY # 5     1.029   3.842   0.2063                                          HISTORY # 6     1.029   3.825   0.0788                                          HISTORY # 7     1.029   3.826   0.01748                                         HISTORY # Converged to minimum: chi^2 = 1.029 at beta = 3.826                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 3.52 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               30.101 / AB magnitude                                   MAG_ERR =                0.141 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?`jØ°·‹¶?CtxâNıø"Ï”ak?>q∆<ﬂŸ?DW©aó:ø0ªD"I?EÔS£◊›?;j€°#?1±Ë
ÈÓ        øD)w;ŒOm?2:-’˝üy?$–«ÀxÔ                ?Då˜Km!øA‚ÒAÔè                        ?E°STl	ï                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        