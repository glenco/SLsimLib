SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.56336707519141 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.25124805786466 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6963 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2253. / min(X) in image pixels                         XMAX    =                2289. / max(X) in image pixels                         YMIN    =                6182. / min(Y) in image pixels                         YMAX    =                6218. / min(Y) in image pixels                         CENTROID=   (2269.63, 6198.31) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6963 found in the area (2265/6194) to (2276/6206)   HISTORY # Extending the area around object to (2253/6182) to (2289/6218)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0452441, Centroid = (2269.63/6198.31)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.318, f(beta) = 1.367, f(b) = 1.516          HISTORY # after bracketing: f(a) = 1.367, f(beta) = 1.318, f(b) = 1.367         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.285   2.063   3.134                                           HISTORY # 2     1.278   1.781   1.197                                           HISTORY # 3     1.277   1.724   0.9145                                          HISTORY # 4     1.273   1.396   0.8581                                          HISTORY # 5     1.273   1.396   0.5303                                          HISTORY # 6     1.273   1.396   0.3278                                          HISTORY # 7     1.273   1.396   0.2026                                          HISTORY # 8     1.273   1.396   0.1252                                          HISTORY # 9     1.273   1.367   0.07738                                         HISTORY # Converged to minimum: chi^2 = 1.273 at beta = 1.367                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.367               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.273   0.03937                                         HISTORY # 1     4       1.253   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.093, beta = 1.367, b = 1.503                     HISTORY # after checking limits: a = 1.118, beta = 1.367, b = 1.503             HISTORY # starting values: f(a) = 1.259, f(beta) = 1.253, f(b) = 1.251          HISTORY # after bracketing: f(a) = 1.253, f(beta) = 1.251, f(b) = 1.262         HISTORY # Setting limits: 1.367 <= beta <= 2.255                                HISTORY # Starting with beta = 1.503                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.251   1.503   0.4238                                          HISTORY # 2     1.251   1.613   0.2871                                          HISTORY # 3     1.251   1.564   0.1097                                          HISTORY # 4     1.251   1.563   0.0607                                          HISTORY # 5     1.251   1.563   0.0237                                          HISTORY # Converged to minimum: chi^2 = 1.251 at beta = 1.563                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.28 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               29.005 / AB magnitude                                   MAG_ERR =                0.072 / AB magnitude errorz·L›ì“¿"^†båøz?"åÞ„Á2¾ó»3°ˆj?6J*ú¶ûW¿OZª Œª¿3Ë>ê¤Ú?xüc†tÛ?@Z9¿ÍòP        ?FõÉÑ‹®®?Gy¿Åþ»¿^	ÑF‘2                ?Tsµ½y?5lþ4òtv                        ?Hû/üx[h                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        