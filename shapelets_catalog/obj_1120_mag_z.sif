SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.36248424269556 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.25623331493403 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1120 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5669. / min(X) in image pixels                         XMAX    =                5737. / max(X) in image pixels                         YMIN    =                2807. / min(Y) in image pixels                         YMAX    =                2875. / min(Y) in image pixels                         CENTROID=   (5703.86, 2843.95) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1120 found in the area (5691/2819) to (5714/2863)   HISTORY # Extending the area around object to (5669/2807) to (5737/2875)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.349451, Centroid = (5703.86/2843.95) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 8, b = 16                            HISTORY # after checking limits: a = 0.866, beta = 8, b = 16                    HISTORY # starting values: f(a) = 2.734, f(beta) = 2.958, f(b) = 4.233          HISTORY # after bracketing: f(a) = 2.958, f(beta) = 2.734, f(b) = 2.958         HISTORY # Setting limits: 0.786 <= beta <= 8                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.545   3.591   7.134                                           HISTORY # 2     1.461   3.123   2.725                                           HISTORY # 3     1.449   3.027   2.257                                           HISTORY # 4     1.446   2.202   2.161                                           HISTORY # 5     1.421   2.601   0.8254                                          HISTORY # 6     1.421   2.601   0.4014                                          HISTORY # 7     1.421   2.601   0.1545                                          HISTORY # Converged to minimum: chi^2 = 1.421 at beta = 2.601                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.601               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.421   0.02081                                         HISTORY # 1     4       1.266   0.02083                                         HISTORY # 2     6       1.259   0.02086                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.081, beta = 2.601, b = 2.861                     HISTORY # after checking limits: a = 2.081, beta = 2.601, b = 2.861             HISTORY # starting values: f(a) = 1.262, f(beta) = 1.259, f(b) = 1.266          HISTORY # after bracketing: f(a) = 1.262, f(beta) = 1.259, f(b) = 1.266         HISTORY # Setting limits: 2.081 <= beta <= 2.861                                HISTORY # Starting with beta = 2.601                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.256   2.402   0.5202                                          HISTORY # 2     1.256   2.36    0.3215                                          HISTORY # 3     1.256   2.362   0.04238                                         HISTORY # Converged to minimum: chi^2 = 1.256 at beta = 2.362                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  3.3 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               26.419 / AB magnitude                                   MAG_ERR =                0.016 / AB magnitude error¢A‘ØæZÆ?aæhÑvÇ?rüπW{2»øké2ï∞ùÍ?sïÉW¥áh?3¥Ê1¯¢?Iﬂï|›Ôòø=€DSN≠Uø`örÍ”Kø$Œ;eJ÷yøR9Ï˙G‚€?8ΩI;u°øI»≤äKó˚        ø`Í[o.iÛ?L> ıùƒy?i eT |?RM#˛u?ñg8£ï                ?-û*‰ãhø‡E¡#?-∑É’(øÇ¿Ü~x                        ?g*éãl#ø6¬∂/Ä√?BÇg›8¯                                ø7írÃmXæÌáwyqF                                        øH´¨t~                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        