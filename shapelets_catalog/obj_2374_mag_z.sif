SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.18628124557909 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12702970160669 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2374 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5900. / min(X) in image pixels                         XMAX    =                5936. / max(X) in image pixels                         YMIN    =                3743. / min(Y) in image pixels                         YMAX    =                3779. / min(Y) in image pixels                         CENTROID=   (5917.06, 3760.71) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2374 found in the area (5913/3755) to (5922/3766)   HISTORY # Extending the area around object to (5900/3743) to (5936/3779)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0192937, Centroid = (5917.06/3760.71)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.167, f(beta) = 1.132, f(b) = 1.142          HISTORY # after bracketing: f(a) = 1.167, f(beta) = 1.132, f(b) = 1.142         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.124   5.528   4                                               HISTORY # 2     1.124   5.528   1.747                                           HISTORY # 3     1.124   5.528   0.8031                                          HISTORY # 4     1.124   5.528   0.5836                                          HISTORY # 5     1.124   5.305   0.5836                                          HISTORY # 6     1.124   5.386   0.2229                                          HISTORY # 7     1.124   5.386   0.08108                                         HISTORY # 8     1.124   5.386   0.03113                                         HISTORY # Converged to minimum: chi^2 = 1.124 at beta = 5.386                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.386               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.124   0.03937                                         HISTORY # 1     4       1.128   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.309, beta = 5.386, b = 5.924                     HISTORY # after checking limits: a = 4.309, beta = 5.386, b = 5.924             HISTORY # starting values: f(a) = 1.13, f(beta) = 1.128, f(b) = 1.128           HISTORY # after bracketing: f(a) = 1.128, f(beta) = 1.128, f(b) = 1.128         HISTORY # Setting limits: 5.386 <= beta <= 8.104                                HISTORY # Starting with beta = 5.924                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.127   6.757   2.179                                           HISTORY # 2     1.127   7.271   1.347                                           HISTORY # 3     1.127   7.271   0.5584                                          HISTORY # 4     1.127   7.271   0.2404                                          HISTORY # 5     1.127   7.196   0.1965                                          HISTORY # 6     1.127   7.182   0.1215                                          HISTORY # 7     1.127   7.186   0.01371                                         HISTORY # Converged to minimum: chi^2 = 1.127 at beta = 7.186                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.92 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               29.633 / AB magnitude                                   MAG_ERR =                 0.12 / AB magnitude errorÃ‚l<o?<ôŒrk‹¿T(C$Ê!¿ÒË¡ 	?KWæ7 ¦ß?A~£n"­o?S¥$c×Ý²¿Aó«Û©¿ô½B=W        ¿VÓ#zw¿Ï'´èÔi¿lbÒJëð                ?'òƒÝ6¦¿I³Ã?ÿ,                        ?1Þ›zœû                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        