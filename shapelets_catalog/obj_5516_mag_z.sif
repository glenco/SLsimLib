SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.92057706251191 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12046948289671 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5516 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.02 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1973. / min(X) in image pixels                         XMAX    =                2013. / max(X) in image pixels                         YMIN    =                5441. / min(Y) in image pixels                         YMAX    =                5481. / min(Y) in image pixels                         CENTROID=     (1990., 5458.09) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5516 found in the area (1986/5453) to (2000/5468)   HISTORY # Extending the area around object to (1973/5441) to (2013/5481)        HISTORY # Object 5521 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0326578, Centroid = (1990/5458.09)   HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.149, f(beta) = 1.13, f(b) = 1.137           HISTORY # after bracketing: f(a) = 1.149, f(beta) = 1.13, f(b) = 1.137          HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.127   6.91    5                                               HISTORY # 2     1.127   6.91    2.67                                            HISTORY # 3     1.127   6.91    1.489                                           HISTORY # 4     1.127   6.91    1.02                                            HISTORY # 5     1.127   6.631   0.7295                                          HISTORY # 6     1.127   6.529   0.4508                                          HISTORY # 7     1.127   6.55    0.1025                                          HISTORY # 8     1.127   6.551   0.08126                                         HISTORY # Converged to minimum: chi^2 = 1.127 at beta = 6.551                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.551               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.127   0.03542                                         HISTORY # 1     4       1.124   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.241, beta = 6.551, b = 7.206                     HISTORY # after checking limits: a = 5.241, beta = 6.551, b = 7.206             HISTORY # starting values: f(a) = 1.122, f(beta) = 1.124, f(b) = 1.125          HISTORY # after bracketing: f(a) = 1.13, f(beta) = 1.121, f(b) = 1.122          HISTORY # Setting limits: 2.329 <= beta <= 5.241                                HISTORY # Starting with beta = 3.494                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.121   4.161   1.747                                           HISTORY # 2     1.12    3.921   0.6672                                          HISTORY # 3     1.12    3.921   0.4868                                          HISTORY # 4     1.12    3.921   0.2229                                          HISTORY # 5     1.12    3.921   0.1222                                          HISTORY # Converged to minimum: chi^2 = 1.12 at beta = 3.921                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.27 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               29.698 / AB magnitude                                   MAG_ERR =                0.142 / AB magnitude errorc+üé?FÀ›˜ë4øH–£vV•ø0∆Myºø+˛¬í§m&>¸dq†u?F≈‹j/¨¿?J◊∑l¬éø€Â)4Y        øL„ 	áπ?1øì$¬e?B1è¨√˘<                ?M<Å:Í>?5ﬂ0∫ƒj                        ø'a…:Î6>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        