SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.86553029786274 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13779990595782 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3198 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7257. / min(X) in image pixels                         XMAX    =                7303. / max(X) in image pixels                         YMIN    =                4263. / min(Y) in image pixels                         YMAX    =                4309. / min(Y) in image pixels                         CENTROID=   (7276.46, 4287.28) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3198 found in the area (7269/4275) to (7291/4297)   HISTORY # Extending the area around object to (7257/4263) to (7303/4309)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.253428, Centroid = (7276.46/4287.28) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.986, f(beta) = 3.125, f(b) = 6.233          HISTORY # after bracketing: f(a) = 3.125, f(beta) = 2.986, f(b) = 3.125         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.374   2.445   4.134                                           HISTORY # 2     1.328   2.263   1.579                                           HISTORY # 3     1.319   2.217   1.397                                           HISTORY # 4     1.31    1.701   1.351                                           HISTORY # 5     1.285   1.932   0.516                                           HISTORY # 6     1.285   1.932   0.2372                                          HISTORY # 7     1.285   1.932   0.0945                                          HISTORY # Converged to minimum: chi^2 = 1.285 at beta = 1.932                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.932               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.285   0.03079                                         HISTORY # 1     4       1.162   0.03085                                         HISTORY # 2     6       1.138   0.03095                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.545, beta = 1.932, b = 2.125                     HISTORY # after checking limits: a = 1.545, beta = 1.932, b = 2.125             HISTORY # starting values: f(a) = 1.151, f(beta) = 1.138, f(b) = 1.145          HISTORY # after bracketing: f(a) = 1.151, f(beta) = 1.138, f(b) = 1.145         HISTORY # Setting limits: 1.545 <= beta <= 2.125                                HISTORY # Starting with beta = 1.932                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.138   1.932   0.3407                                          HISTORY # 2     1.138   1.932   0.2214                                          HISTORY # 3     1.138   1.875   0.1476                                          HISTORY # 4     1.138   1.866   0.0912                                          HISTORY # 5     1.138   1.865   0.08171                                         HISTORY # 6     1.138   1.866   0.0003602                                       HISTORY # Converged to minimum: chi^2 = 1.138 at beta = 1.866                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.28 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               27.036 / AB magnitude                                   MAG_ERR =                0.021 / AB magnitude error ³Bñü?û¢Ä®?qÙmÕÉ×?BÂ<&/?W¯\ÌGŠ¿éÀ’¿q5?Pi8Êv¿8ó=óÉ÷ý?vW¼Æº“b??ÞÑÑ[¨¿;[Ò»Ë ?d´%0^?5wBžÄ}²        >ýÍï®J>0?]æÿpT?^ž;ˆz9ð?9ôQR¦'J?5()t×‡                ?La2±1Â<¿T+HÃÀ?ML`õ‹¥Ç?Sp~§                        ?f,¥äÉó?<–“çª?;,žpFî                                ¿aI&ÁÏ&?GÔh•ÄT                                        ¿:PÊßÍ‹[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        