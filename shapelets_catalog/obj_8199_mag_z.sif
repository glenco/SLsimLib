SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.60129524585923 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.22459928335597 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  770 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8199 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7407. / min(X) in image pixels                         XMAX    =                7459. / max(X) in image pixels                         YMIN    =                7303. / min(Y) in image pixels                         YMAX    =                7355. / min(Y) in image pixels                         CENTROID=   (7432.37, 7333.31) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8199 found in the area (7425/7315) to (7441/7342)   HISTORY # Extending the area around object to (7407/7303) to (7459/7355)        HISTORY # Object 8142 nearby, but not overlapping.                              HISTORY # Object 8247 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.132589, Centroid = (7432.37/7333.31) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.51, f(beta) = 1.893, f(b) = 2.386           HISTORY # after bracketing: f(a) = 1.893, f(beta) = 1.51, f(b) = 1.893          HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.336   2.827   5.134                                           HISTORY # 2     1.272   2.226   1.961                                           HISTORY # 3     1.268   2.158   1.36                                            HISTORY # 4     1.261   1.664   1.292                                           HISTORY # 5     1.258   1.827   0.4934                                          HISTORY # 6     1.258   1.827   0.1763                                          HISTORY # 7     1.258   1.827   0.07572                                         HISTORY # Converged to minimum: chi^2 = 1.258 at beta = 1.827                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.827               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.258   0.02723                                         HISTORY # 1     4       1.226   0.02727                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.462, beta = 1.827, b = 2.01                      HISTORY # after checking limits: a = 1.462, beta = 1.827, b = 2.01              HISTORY # starting values: f(a) = 1.226, f(beta) = 1.226, f(b) = 1.228          HISTORY # after bracketing: f(a) = 1.226, f(beta) = 1.226, f(b) = 1.226         HISTORY # Setting limits: 1.1 <= beta <= 1.827                                  HISTORY # Starting with beta = 1.462                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.225   1.601   0.3654                                          HISTORY # 2     1.225   1.601   0.2518                                          HISTORY # 3     1.225   1.601   0.1123                                          HISTORY # 4     1.225   1.601   0.08627                                         HISTORY # 5     1.225   1.601   0.03295                                         HISTORY # Converged to minimum: chi^2 = 1.225 at beta = 1.601                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  0.2 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.779 / AB magnitude                                   MAG_ERR =                0.032 / AB magnitude error‘¬ñª•?/©†Ý¯L±?R‰¹¤É4F¿% ŸEøÆm?X$×æJ‡;¿K	Åƒ³¿\^>v÷óÕ?5Ê«è‹ò¿V–°„A        ?TBóâi>ÿ£”&ª?_W(\”Šõ                ?$JŒ¼´åþ¿<—ûç%{                        ?XÕ˜ÛRÒZ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        