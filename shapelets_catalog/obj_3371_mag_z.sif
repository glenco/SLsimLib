SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.40590180026843 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.21267884347367 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3371 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6312. / min(X) in image pixels                         XMAX    =                6342. / max(X) in image pixels                         YMIN    =                4354. / min(Y) in image pixels                         YMAX    =                4384. / min(Y) in image pixels                         CENTROID=   (6326.69, 4368.84) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3371 found in the area (6324/4367) to (6329/4371)   HISTORY # Extending the area around object to (6312/4354) to (6342/4384)        HISTORY # Object 3381 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00778793, Centroid = (6326.69/4368.84HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.23, f(beta) = 1.232, f(b) = 1.238           HISTORY # after bracketing: f(a) = 1.232, f(beta) = 1.23, f(b) = 1.232          HISTORY # Setting limits: 0.836 <= beta <= 3                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.23    1.681   2.134                                           HISTORY # 2     1.228   1.278   0.8151                                          HISTORY # 3     1.228   1.277   0.4122                                          HISTORY # 4     1.228   1.277   0.1583                                          HISTORY # 5     1.228   1.201   0.1569                                          HISTORY # 6     1.227   1.232   0.07532                                         HISTORY # 7     1.227   1.232   0.03031                                         HISTORY # Converged to minimum: chi^2 = 1.227 at beta = 1.232                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.232               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.227   0.0473                                          HISTORY # 1     4       1.234   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 0.9852, beta = 1.232, b = 1.355                    HISTORY # after checking limits: a = 1.118, beta = 1.232, b = 1.355             HISTORY # starting values: f(a) = 1.235, f(beta) = 1.234, f(b) = 1.232          HISTORY # after bracketing: f(a) = 1.232, f(beta) = 1.218, f(b) = 1.224         HISTORY # Setting limits: 1.355 <= beta <= 3.048                                HISTORY # Starting with beta = 2.032                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.213   2.42    1.016                                           HISTORY # 2     1.213   2.42    0.4458                                          HISTORY # 3     1.213   2.42    0.2059                                          HISTORY # 4     1.213   2.42    0.1482                                          HISTORY # 5     1.213   2.42    0.05662                                         HISTORY # 6     1.213   2.405   0.05662                                         HISTORY # 7     1.213   2.406   0.01556                                         HISTORY # Converged to minimum: chi^2 = 1.213 at beta = 2.406                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.52 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.811 / AB magnitude                                   MAG_ERR =                0.205 / AB magnitude error®_Ÿ	·n?íX¸*à?_–VN¶¿3ÄÁYhWâ?SI.â7Ú¿„ÁÄ¼´?2,P,Ö9¿3µø­¨M¿Aj|þTu        ¿@¤1ÎLˆª?9>°Ã®}W?6O™F6£                ¿=e‚Ý]Ýo¿ÁNp+
™                        ¿$|Ìß(äù                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        