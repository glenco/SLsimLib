SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.72616050666699 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2638381792573 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8520 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7154. / min(X) in image pixels                         XMAX    =                7202. / max(X) in image pixels                         YMIN    =                7020. / min(Y) in image pixels                         YMAX    =                7068. / min(Y) in image pixels                         CENTROID=   (7178.12, 7044.73) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8520 found in the area (7166/7035) to (7189/7053)   HISTORY # Extending the area around object to (7154/7020) to (7202/7068)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.265175, Centroid = (7178.12/7044.73) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.688, f(beta) = 5.327, f(b) = 8.369          HISTORY # after bracketing: f(a) = 5.327, f(beta) = 2.688, f(b) = 5.327         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     2.023   2.827   5.134                                           HISTORY # 2     1.631   2.142   1.961                                           HISTORY # 3     1.613   2.084   1.276                                           HISTORY # 4     1.58    1.619   1.218                                           HISTORY # 5     1.564   1.778   0.4652                                          HISTORY # 6     1.564   1.778   0.1703                                          HISTORY # 7     1.564   1.778   0.07156                                         HISTORY # Converged to minimum: chi^2 = 1.564 at beta = 1.778                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.778               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.564   0.0295                                          HISTORY # 1     4       1.283   0.02956                                         HISTORY # 2     6       1.264   0.02964                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.423, beta = 1.778, b = 1.956                     HISTORY # after checking limits: a = 1.423, beta = 1.778, b = 1.956             HISTORY # starting values: f(a) = 1.286, f(beta) = 1.264, f(b) = 1.271          HISTORY # after bracketing: f(a) = 1.286, f(beta) = 1.264, f(b) = 1.271         HISTORY # Setting limits: 1.423 <= beta <= 1.956                                HISTORY # Starting with beta = 1.778                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.264   1.778   0.3137                                          HISTORY # 2     1.264   1.778   0.2038                                          HISTORY # 3     1.264   1.727   0.1359                                          HISTORY # 4     1.264   1.726   0.08397                                         HISTORY # 5     1.264   1.726   0.03234                                         HISTORY # Converged to minimum: chi^2 = 1.264 at beta = 1.726                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.27 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               26.934 / AB magnitude                                   MAG_ERR =                0.016 / AB magnitude error§!bÅ6z??	˛§µ±—œø3—Ö¥/ÒøA„Ø˜s4?kòSƒOÇ?'E]bµYø1<ùJ£øQπf1∫1
øÉ®∑ø?MÍ$X˘øG‚Ÿk®mø>‘/{ﬁZøU±-•G        ?Yµv‚Ï?5fã5@aì?kh¢∫ÿ?2î∆∞ÏÛf?UÔ“q0s                ?dÅÑ¿ ?1ìQe»xøSajUykø÷xπß∞                        ?q@ÍíñûW?5∞+RæÙ?5»)<bU                                ø/⁄ÕybÖøCûì÷f                                        ?Z	á±Y¢                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        