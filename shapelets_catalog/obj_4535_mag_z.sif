SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.15541752799933 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.15917752096721 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4535 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1545. / min(X) in image pixels                         XMAX    =                1577. / max(X) in image pixels                         YMIN    =                4929. / min(Y) in image pixels                         YMAX    =                4961. / min(Y) in image pixels                         CENTROID=   (1560.76, 4945.59) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4535 found in the area (1557/4941) to (1564/4949)   HISTORY # Extending the area around object to (1545/4929) to (1577/4961)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0147831, Centroid = (1560.76/4945.59)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.16, f(beta) = 1.16, f(b) = 1.152            HISTORY # after bracketing: f(a) = 1.16, f(beta) = 1.152, f(b) = 1.16           HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.152   8       2.805                                           HISTORY # 2     1.152   7.416   1.528                                           HISTORY # 3     1.151   7.672   0.5836                                          HISTORY # 4     1.151   7.662   0.2557                                          HISTORY # 5     1.151   7.662   0.104                                           HISTORY # 6     1.151   7.654   0.09376                                         HISTORY # 7     1.151   7.653   0.08586                                         HISTORY # 8     1.151   7.653   0.0006487                                       HISTORY # Converged to minimum: chi^2 = 1.151 at beta = 7.653                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.653               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.151   0.04432                                         HISTORY # 1     4       1.159   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.123, beta = 7.653, b = 8.419                     HISTORY # after checking limits: a = 6.123, beta = 6.639, b = 7.155             HISTORY # starting values: f(a) = 1.16, f(beta) = 1.159, f(b) = 1.159           HISTORY # after bracketing: f(a) = 1.159, f(beta) = 1.159, f(b) = 1.159         HISTORY # Setting limits: 6.639 <= beta <= 7.232                                HISTORY # Starting with beta = 7.155                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.159   7.155   0.2738                                          HISTORY # 2     1.159   7.155   0.1519                                          HISTORY # Converged to minimum: chi^2 = 1.159 at beta = 7.155                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.93 / photometric redshift                           SED_TYPE=                   10 / SED template                                   MAG     =               31.494 / AB magnitude                                   MAG_ERR =                0.324 / AB magnitude errorÁŠ:>~Ð¿@±Íäwe¿I—Eu1žX¿6°IÄ1N|¾V½òÚq4`¿ÈTB¿c!$öÎ¿<GYµó¿ì*o…•        ¿T¥Ðo´?Œ»Î
«?ü¾r/                ¿3Mæ×î¿Þih>ên                        ¿2ûŽ¦F·û                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        