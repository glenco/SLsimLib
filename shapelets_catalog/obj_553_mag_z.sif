SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.04293853557022 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.00806659740282 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  515 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  553 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6423. / min(X) in image pixels                         XMAX    =                6459. / max(X) in image pixels                         YMIN    =                2052. / min(Y) in image pixels                         YMAX    =                2088. / min(Y) in image pixels                         CENTROID=   (6442.37, 2070.43) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 553 found in the area (6435/2066) to (6447/2074)    HISTORY # Extending the area around object to (6423/2052) to (6459/2088)        HISTORY # Object 511 nearby, but not overlapping.                               HISTORY # Object 549 nearby, but not overlapping.                               HISTORY # Object 524 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0190844, Centroid = (6442.37/2070.43)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.064, f(beta) = 1.032, f(b) = 1.072          HISTORY # after bracketing: f(a) = 1.064, f(beta) = 1.032, f(b) = 1.072         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.032   4       4.662                                           HISTORY # 2     1.019   2.803   3.134                                           HISTORY # 3     1.019   2.803   1.638                                           HISTORY # 4     1.019   2.803   0.8982                                          HISTORY # 5     1.019   2.803   0.6156                                          HISTORY # 6     1.019   2.803   0.3431                                          HISTORY # 7     1.019   2.803   0.2351                                          HISTORY # 8     1.019   2.803   0.131                                           HISTORY # 9     1.019   2.803   0.08981                                         HISTORY # 10    1.019   2.778   0.06433                                         HISTORY # Converged to minimum: chi^2 = 1.019 at beta = 2.778                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.778               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.019   0.03937                                         HISTORY # 1     4       1.015   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.223, beta = 2.778, b = 3.056                     HISTORY # after checking limits: a = 2.223, beta = 2.778, b = 3.056             HISTORY # starting values: f(a) = 1.009, f(beta) = 1.015, f(b) = 1.017          HISTORY # after bracketing: f(a) = 1.022, f(beta) = 1.009, f(b) = 1.015         HISTORY # Setting limits: 1.482 <= beta <= 2.778                                HISTORY # Starting with beta = 2.223                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.008   1.94    0.7409                                          HISTORY # 2     1.008   2.046   0.283                                           HISTORY # 3     1.008   2.043   0.106                                           HISTORY # 4     1.008   2.043   0.04214                                         HISTORY # Converged to minimum: chi^2 = 1.008 at beta = 2.043                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.35 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.995 / AB magnitude                                   MAG_ERR =                0.087 / AB magnitude errormÒ{ÑÊ?/sØ€¿@€€·’‰?A¿Œ4î0b?AP -³’@¿äÏ.‘Í¿>Áhï\ –¿:N…	õLë¿6 ÇDYŸÂ        ?NqÍº£˜?
¾Ë$ã¡ð?C¬sè÷?§                ¿;Ñð?x›¿Cam€Â-                        ?KQî\±gÍ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        