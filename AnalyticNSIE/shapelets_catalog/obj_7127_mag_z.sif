SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.95144886204603 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14569613411026 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7127 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2777. / min(X) in image pixels                         XMAX    =                2809. / max(X) in image pixels                         YMIN    =                6272. / min(Y) in image pixels                         YMAX    =                6304. / min(Y) in image pixels                         CENTROID=   (2791.97, 6288.65) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7127 found in the area (2789/6284) to (2796/6291)   HISTORY # Extending the area around object to (2777/6272) to (2809/6304)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00960668, Centroid = (2791.97/6288.65HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.208, f(beta) = 1.181, f(b) = 1.15           HISTORY # after bracketing: f(a) = 1.181, f(beta) = 1.15, f(b) = 1.181          HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.149   6.472   4                                               HISTORY # 2     1.148   7.164   1.528                                           HISTORY # 3     1.148   7.143   0.6923                                          HISTORY # 4     1.148   7.143   0.2777                                          HISTORY # 5     1.148   7.081   0.2562                                          HISTORY # 6     1.148   7.07    0.1947                                          HISTORY # 7     1.148   7.071   0.01171                                         HISTORY # Converged to minimum: chi^2 = 1.148 at beta = 7.071                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.071               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.148   0.04432                                         HISTORY # 1     4       1.146   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.657, beta = 7.071, b = 7.778                     HISTORY # after checking limits: a = 5.657, beta = 7.071, b = 7.155             HISTORY # starting values: f(a) = 1.148, f(beta) = 1.146, f(b) = 1.146          HISTORY # after bracketing: f(a) = 1.148, f(beta) = 1.146, f(b) = 1.146         HISTORY # Setting limits: 5.657 <= beta <= 7.155                                HISTORY # Starting with beta = 7.071                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.146   7.071   0.6248                                          HISTORY # 2     1.146   6.864   0.5402                                          HISTORY # 3     1.146   6.958   0.2063                                          HISTORY # 4     1.146   6.951   0.09401                                         HISTORY # Converged to minimum: chi^2 = 1.146 at beta = 6.951                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.93 / photometric redshift                           SED_TYPE=                    4 / SED template                                   MAG     =               30.419 / AB magnitude                                   MAG_ERR =                0.221 / AB magnitude errorıñU˘y∏ø3˝áç†˙8øMLi7Ò≤?::}Ïª®?3’RBÎÑ?4ƒƒñ≠≈ø@Ù æòçπø,!ˇd__≤?@ÌÀ˝öêô        øb‹uöMl?gﬁŸ8ëø«:.5aØ                ?Izqÿ)∏æ’ÈÑ›tè                        ø6¢˝fπ‘                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        