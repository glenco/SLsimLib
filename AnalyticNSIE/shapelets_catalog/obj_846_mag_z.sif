SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.26695226096096 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10122872814198 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  846 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4730. / min(X) in image pixels                         XMAX    =                4764. / max(X) in image pixels                         YMIN    =                2384. / min(Y) in image pixels                         YMAX    =                2418. / min(Y) in image pixels                         CENTROID=     (4747., 2400.98) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 846 found in the area (4743/2396) to (4751/2405)    HISTORY # Extending the area around object to (4730/2384) to (4764/2418)        HISTORY # Object 837 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0162272, Centroid = (4747/2400.98)   HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.112, f(beta) = 1.109, f(b) = 1.112          HISTORY # after bracketing: f(a) = 1.112, f(beta) = 1.109, f(b) = 1.112         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.108   5.528   4                                               HISTORY # 2     1.108   5.528   2.472                                           HISTORY # 3     1.108   5.528   1.528                                           HISTORY # 4     1.108   5.889   0.9443                                          HISTORY # 5     1.108   5.889   0.5836                                          HISTORY # 6     1.108   5.889   0.3607                                          HISTORY # 7     1.108   5.889   0.2229                                          HISTORY # 8     1.108   5.889   0.1378                                          HISTORY # 9     1.108   5.921   0.08514                                         HISTORY # 10    1.108   5.918   0.03252                                         HISTORY # Converged to minimum: chi^2 = 1.108 at beta = 5.918                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.918               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.108   0.0417                                          HISTORY # 1     4       1.105   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.735, beta = 5.918, b = 6.51                      HISTORY # after checking limits: a = 4.735, beta = 5.918, b = 6.51              HISTORY # starting values: f(a) = 1.103, f(beta) = 1.105, f(b) = 1.107          HISTORY # after bracketing: f(a) = 1.103, f(beta) = 1.102, f(b) = 1.103         HISTORY # Setting limits: 1.403 <= beta <= 3.156                                HISTORY # Starting with beta = 2.104                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.102   2.104   1.103                                           HISTORY # 2     1.102   2.104   0.6698                                          HISTORY # 3     1.101   2.258   0.4019                                          HISTORY # 4     1.101   2.267   0.2484                                          HISTORY # 5     1.101   2.267   0.1005                                          HISTORY # Converged to minimum: chi^2 = 1.101 at beta = 2.267                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.19 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               30.254 / AB magnitude                                   MAG_ERR =                 0.21 / AB magnitude error©Ïô”¼?3ZÂd;We¿'£)ïin¿'‹û&M?:›±¶7f¿*¡+†OÇ?<eºKèv?0s)|Œyy¿,P„— \6        ?7„ÛÛ£{¢¿6ÀRý.?0[¯¥K¼                ¿!_/¹*Hï¿<ÀA‘é½                        ¿6!Ý’_H                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        