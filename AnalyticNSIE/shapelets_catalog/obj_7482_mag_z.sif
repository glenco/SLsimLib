SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.59660109518673 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13145961940805 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7482 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8458. / min(X) in image pixels                         XMAX    =                8488. / max(X) in image pixels                         YMIN    =                6487. / min(Y) in image pixels                         YMAX    =                6517. / min(Y) in image pixels                         CENTROID=   (8473.32, 6501.52) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7482 found in the area (8471/6499) to (8475/6504)   HISTORY # Extending the area around object to (8458/6487) to (8488/6517)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00625724, Centroid = (8473.32/6501.52HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.134, f(beta) = 1.139, f(b) = 1.178          HISTORY # after bracketing: f(a) = 1.139, f(beta) = 1.134, f(b) = 1.139         HISTORY # Setting limits: 0.836 <= beta <= 3                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.132   1.681   2.134                                           HISTORY # 2     1.13    2.185   1.319                                           HISTORY # 3     1.13    2.185   0.8151                                          HISTORY # 4     1.13    1.992   0.5038                                          HISTORY # 5     1.13    2.088   0.1924                                          HISTORY # 6     1.13    2.088   0.09603                                         HISTORY # 7     1.13    2.088   0.0367                                          HISTORY # Converged to minimum: chi^2 = 1.13 at beta = 2.088                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.088               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.13    0.0473                                          HISTORY # 1     4       1.133   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.671, beta = 2.088, b = 2.297                     HISTORY # after checking limits: a = 1.671, beta = 2.088, b = 2.297             HISTORY # starting values: f(a) = 1.132, f(beta) = 1.133, f(b) = 1.133          HISTORY # after bracketing: f(a) = 1.133, f(beta) = 1.132, f(b) = 1.133         HISTORY # Setting limits: 1.097 <= beta <= 2.088                                HISTORY # Starting with beta = 1.671                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.132   1.671   0.6368                                          HISTORY # 2     1.132   1.671   0.3787                                          HISTORY # 3     1.131   1.587   0.2191                                          HISTORY # 4     1.131   1.601   0.08369                                         HISTORY # 5     1.131   1.597   0.01392                                         HISTORY # Converged to minimum: chi^2 = 1.131 at beta = 1.597                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.61 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =                30.47 / AB magnitude                                   MAG_ERR =                0.144 / AB magnitude errorb~¡¢ππø¯<—œ¯ø5Áz,∑€/?B–>zÁø *):Gv?/)¸(≠ùø6pø#:Ãø(Wƒs5 {ø5"ÕêÇ˘+        ø*z‘«&9?A4ìC±a?¿Xπ†™…                æÏ6dlﬂ˛Nø0ë ^¡À                        ø?ïÒB˛e                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        