SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.31601906554019 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09824693739341 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2432 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4060. / min(X) in image pixels                         XMAX    =                4090. / max(X) in image pixels                         YMIN    =                3776. / min(Y) in image pixels                         YMAX    =                3806. / min(Y) in image pixels                         CENTROID=   (4074.52, 3790.88) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2432 found in the area (4072/3788) to (4077/3794)   HISTORY # Extending the area around object to (4060/3776) to (4090/3806)        HISTORY # Object 2399 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0127132, Centroid = (4074.52/3790.88)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.113, f(beta) = 1.104, f(b) = 1.102          HISTORY # after bracketing: f(a) = 1.104, f(beta) = 1.102, f(b) = 1.104         HISTORY # Setting limits: 3 <= beta <= 8.69                                     HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.1     4.854   3                                               HISTORY # 2     1.1     4.854   1.367                                           HISTORY # 3     1.1     4.854   0.6587                                          HISTORY # 4     1.1     4.854   0.3882                                          HISTORY # 5     1.1     4.77    0.221                                           HISTORY # 6     1.1     4.77    0.1366                                          HISTORY # 7     1.1     4.77    0.0844                                          HISTORY # 8     1.1     4.75    0.05216                                         HISTORY # Converged to minimum: chi^2 = 1.1 at beta = 4.75                      HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.75                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.1     0.0473                                          HISTORY # 1     4       1.103   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.8, beta = 4.75, b = 5.225                        HISTORY # after checking limits: a = 3.8, beta = 4.75, b = 5.225                HISTORY # starting values: f(a) = 1.1, f(beta) = 1.103, f(b) = 1.104            HISTORY # after bracketing: f(a) = 1.101, f(beta) = 1.1, f(b) = 1.103           HISTORY # Setting limits: 2.533 <= beta <= 4.75                                 HISTORY # Starting with beta = 3.8                                              HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.098   3.316   1.267                                           HISTORY # 2     1.098   3.316   0.5015                                          HISTORY # 3     1.098   3.316   0.2025                                          HISTORY # 4     1.098   3.316   0.01766                                         HISTORY # Converged to minimum: chi^2 = 1.098 at beta = 3.316                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.58 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               30.476 / AB magnitude                                   MAG_ERR =                0.159 / AB magnitude errorihËË;W>À.k{bÁ¿5ådêÄå¾>ð¤½4ŒíÜ¿9b¼{[H?d¹úé($¿@Jly¼N¿ê­OÃ8#¿*?qÖ.1        ¿$+~›iLÜ?#0´•ÕëË?1¦ZXzjÝ                ¿F½n¼­6¿: ýŸ¥ò¦                        ?4 ãÇ¬G                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        