SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.43403038156048 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17308172345559 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9784 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5456. / min(X) in image pixels                         XMAX    =                5522. / max(X) in image pixels                         YMIN    =                9509. / min(Y) in image pixels                         YMAX    =                9575. / min(Y) in image pixels                         CENTROID=    (5486.7, 9536.01) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9784 found in the area (5476/9521) to (5501/9562)   HISTORY # Extending the area around object to (5456/9509) to (5522/9575)        HISTORY # Object 9361 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.18334, Centroid = (5486.7/9536.01)   HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 8, b = 16                            HISTORY # after checking limits: a = 0.866, beta = 8, b = 16                    HISTORY # starting values: f(a) = 1.54, f(beta) = 1.272, f(b) = 1.47            HISTORY # after bracketing: f(a) = 1.54, f(beta) = 1.272, f(b) = 1.47           HISTORY # Setting limits: 0.866 <= beta <= 16                                   HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.272   8       10.19                                           HISTORY # 2     1.206   5.275   7.134                                           HISTORY # 3     1.199   3.591   4.409                                           HISTORY # 4     1.197   4.011   1.684                                           HISTORY # 5     1.197   4.182   1.264                                           HISTORY # 6     1.196   4.108   0.1707                                          HISTORY # 7     1.196   4.11    0.07426                                         HISTORY # Converged to minimum: chi^2 = 1.196 at beta = 4.11                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.11                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.196   0.02144                                         HISTORY # 1     4       1.174   0.02146                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.288, beta = 4.11, b = 4.521                      HISTORY # after checking limits: a = 3.288, beta = 4.11, b = 4.521              HISTORY # starting values: f(a) = 1.183, f(beta) = 1.174, f(b) = 1.173          HISTORY # after bracketing: f(a) = 1.174, f(beta) = 1.173, f(b) = 1.204         HISTORY # Setting limits: 4.11 <= beta <= 6.781                                 HISTORY # Starting with beta = 4.521                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.173   4.521   1.274                                           HISTORY # 2     1.173   4.521   0.7408                                          HISTORY # 3     1.173   4.364   0.411                                           HISTORY # 4     1.173   4.434   0.157                                           HISTORY # 5     1.173   4.434   0.08721                                         HISTORY # 6     1.173   4.434   0.0005862                                       HISTORY # Converged to minimum: chi^2 = 1.173 at beta = 4.434                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 2.91 / photometric redshift                           SED_TYPE=                   14 / SED template                                   MAG     =               27.318 / AB magnitude                                   MAG_ERR =                0.031 / AB magnitude errorˆù &A?5É<tíg?`>åÉùÅ¿a;®A4&?I>áŒß{¾ç û{>C?iL˜žSŠ¿@9yÙÄ?SçÆ?“        ¿kº”Ôv6?4_AÉ•ú¿!4[Ú#ñ7                ¿.žƒ{Qî¿VîTö]†                        ?Mhl¾hñ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        