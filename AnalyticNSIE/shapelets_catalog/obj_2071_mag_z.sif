SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.18140454636587 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18621576424096 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2071 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6669. / min(X) in image pixels                         XMAX    =                6709. / max(X) in image pixels                         YMIN    =                3556. / min(Y) in image pixels                         YMAX    =                3596. / min(Y) in image pixels                         CENTROID=   (6688.51, 3576.52) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2071 found in the area (6681/3569) to (6696/3583)   HISTORY # Extending the area around object to (6669/3556) to (6709/3596)        HISTORY # Object 2018 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.125938, Centroid = (6688.51/3576.52) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.225, f(beta) = 2.318, f(b) = 4.191          HISTORY # after bracketing: f(a) = 2.318, f(beta) = 2.225, f(b) = 2.318         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.27    2.445   4.134                                           HISTORY # 2     1.257   2.312   1.579                                           HISTORY # 3     1.255   2.282   1.446                                           HISTORY # 4     1.255   2.282   0.5713                                          HISTORY # 5     1.248   2.05    0.5408                                          HISTORY # 6     1.248   2.066   0.232                                           HISTORY # 7     1.248   2.073   0.2162                                          HISTORY # 8     1.248   2.072   0.007392                                        HISTORY # Converged to minimum: chi^2 = 1.248 at beta = 2.072                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.072               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.248   0.03542                                         HISTORY # 1     4       1.187   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.657, beta = 2.072, b = 2.279                     HISTORY # after checking limits: a = 1.657, beta = 2.072, b = 2.279             HISTORY # starting values: f(a) = 1.218, f(beta) = 1.187, f(b) = 1.187          HISTORY # after bracketing: f(a) = 1.187, f(beta) = 1.187, f(b) = 1.304         HISTORY # Setting limits: 2.072 <= beta <= 3.418                                HISTORY # Starting with beta = 2.279                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.187   2.279   0.6424                                          HISTORY # 2     1.187   2.279   0.3734                                          HISTORY # 3     1.186   2.2     0.2072                                          HISTORY # 4     1.186   2.177   0.128                                           HISTORY # 5     1.186   2.181   0.0226                                          HISTORY # Converged to minimum: chi^2 = 1.186 at beta = 2.181                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.63 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               27.443 / AB magnitude                                   MAG_ERR =                0.023 / AB magnitude erroróx‚ÉŒ?0ú¢uìbø[(∆DÉ>¯LhVÖ‹.?[’Å+v¢p??ùR‹ãí?,Diìÿß?'æ™»ü„?0?ö÷Wùæ        ?=oê¥ÓÛ?TY›ì ?S=€≤ñtΩ                ø0‡TË9˙À?A…ñIe“                        ?U˝9a–(<                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        