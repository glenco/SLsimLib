SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.07310386621851 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10318603284713 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5049 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8167. / min(X) in image pixels                         XMAX    =                8199. / max(X) in image pixels                         YMIN    =                5192. / min(Y) in image pixels                         YMAX    =                5224. / min(Y) in image pixels                         CENTROID=    (8182.5, 5207.95) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5049 found in the area (8179/5205) to (8186/5211)   HISTORY # Extending the area around object to (8167/5192) to (8199/5224)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0110523, Centroid = (8182.5/5207.95) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.111, f(beta) = 1.129, f(b) = 1.139          HISTORY # after bracketing: f(a) = 1.129, f(beta) = 1.111, f(b) = 1.129         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.111   0.866   1.237                                           HISTORY # 2     1.111   0.866   0.4972                                          HISTORY # 3     1.109   1.041   0.4572                                          HISTORY # 4     1.109   1.041   0.2826                                          HISTORY # 5     1.109   1.041   0.1747                                          HISTORY # 6     1.109   1.041   0.1079                                          HISTORY # 7     1.109   1.015   0.06671                                         HISTORY # Converged to minimum: chi^2 = 1.109 at beta = 1.015                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.015               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.109   0.04432                                         HISTORY # 1     4       1.112   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 0.8122, beta = 1.015, b = 1.117                    HISTORY # after checking limits: a = 1.118, beta = 2.627, b = 4.137             HISTORY # starting values: f(a) = 1.108, f(beta) = 1.106, f(b) = 1.12           HISTORY # after bracketing: f(a) = 1.108, f(beta) = 1.106, f(b) = 1.12          HISTORY # Setting limits: 1.118 <= beta <= 4.137                                HISTORY # Starting with beta = 2.627                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.103   2.051   1.509                                           HISTORY # 2     1.103   2.091   0.5765                                          HISTORY # 3     1.103   2.072   0.0401                                          HISTORY # 4     1.103   2.073   0.0186                                          HISTORY # Converged to minimum: chi^2 = 1.103 at beta = 2.073                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.36 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.619 / AB magnitude                                   MAG_ERR =                0.189 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?]´¯ð÷f?œAçqÓR¿C6á:Ù]Ù?9sNçŠ¹¿*I²–Ï‹‹?(V«¼àÖ¾û©‹d¤ï‚¿5³÷áé­¿@·É>˜ŒÍ        ¿?“äqÏjÄ?Kâ´‚ýl?.~#]                ¿	(ø1Á?,<UÓR,%                        ?,–Š™Ž:°                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        