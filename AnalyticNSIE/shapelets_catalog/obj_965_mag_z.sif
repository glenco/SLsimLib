SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.52134637324385 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.08541103287705 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  965 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6984. / min(X) in image pixels                         XMAX    =                7020. / max(X) in image pixels                         YMIN    =                2544. / min(Y) in image pixels                         YMAX    =                2580. / min(Y) in image pixels                         CENTROID=   (6999.88, 2563.47) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 965 found in the area (6996/2557) to (7007/2567)    HISTORY # Extending the area around object to (6984/2544) to (7020/2580)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0177865, Centroid = (6999.88/2563.47)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.119, f(beta) = 1.088, f(b) = 1.108          HISTORY # after bracketing: f(a) = 1.119, f(beta) = 1.088, f(b) = 1.108         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.088   4       4.662                                           HISTORY # 2     1.088   4       2.725                                           HISTORY # 3     1.088   4       1.781                                           HISTORY # 4     1.088   4       1.041                                           HISTORY # 5     1.088   4       0.6802                                          HISTORY # 6     1.088   3.825   0.4572                                          HISTORY # 7     1.088   3.812   0.2826                                          HISTORY # 8     1.088   3.813   0.01343                                         HISTORY # Converged to minimum: chi^2 = 1.088 at beta = 3.813                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.813               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.088   0.03937                                         HISTORY # 1     4       1.087   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.05, beta = 3.813, b = 4.194                      HISTORY # after checking limits: a = 3.05, beta = 3.813, b = 4.194              HISTORY # starting values: f(a) = 1.092, f(beta) = 1.087, f(b) = 1.086          HISTORY # after bracketing: f(a) = 1.087, f(beta) = 1.086, f(b) = 1.091         HISTORY # Setting limits: 3.813 <= beta <= 6.291                                HISTORY # Starting with beta = 4.194                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.086   4.194   1.182                                           HISTORY # 2     1.085   4.5     0.801                                           HISTORY # 3     1.085   4.528   0.495                                           HISTORY # 4     1.085   4.521   0.02854                                         HISTORY # Converged to minimum: chi^2 = 1.085 at beta = 4.521                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.43 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.813 / AB magnitude                                   MAG_ERR =                0.146 / AB magnitude error˙ÁYâ!øø0(ºkjÇøDîH[C„ˇ?'m˘˚√o?@O¿·¨˚?»p}b˙íøNù7`ÊÇ?A¶ò¬Gÿ°ø-›d∞∂nR        øF+ö’"ÎÃøâG>ñ¶ê?'˛∞êΩ1                ø::Cac5ø/¢£≤IQ                        ?3˚q∑c¿                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        