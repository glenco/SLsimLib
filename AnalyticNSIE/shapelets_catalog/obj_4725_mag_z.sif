SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.38505633089738 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11210776446281 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4725 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2101. / min(X) in image pixels                         XMAX    =                2135. / max(X) in image pixels                         YMIN    =                5037. / min(Y) in image pixels                         YMAX    =                5071. / min(Y) in image pixels                         CENTROID=   (2117.57, 5053.98) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4725 found in the area (2114/5049) to (2122/5059)   HISTORY # Extending the area around object to (2101/5037) to (2135/5071)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0278208, Centroid = (2117.57/5053.98)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.15, f(beta) = 1.109, f(b) = 1.159           HISTORY # after bracketing: f(a) = 1.15, f(beta) = 1.109, f(b) = 1.159          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.109   4       4.662                                           HISTORY # 2     1.109   4       2.725                                           HISTORY # 3     1.109   4       1.781                                           HISTORY # 4     1.108   3.543   1.197                                           HISTORY # 5     1.108   3.664   0.4572                                          HISTORY # 6     1.108   3.665   0.336                                           HISTORY # 7     1.108   3.665   0.129                                           HISTORY # 8     1.108   3.665   0.04991                                         HISTORY # Converged to minimum: chi^2 = 1.108 at beta = 3.665                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.665               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.108   0.0417                                          HISTORY # 1     4       1.112   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.932, beta = 3.665, b = 4.032                     HISTORY # after checking limits: a = 2.932, beta = 3.665, b = 4.032             HISTORY # starting values: f(a) = 1.113, f(beta) = 1.112, f(b) = 1.112          HISTORY # after bracketing: f(a) = 1.113, f(beta) = 1.112, f(b) = 1.112         HISTORY # Setting limits: 2.932 <= beta <= 4.032                                HISTORY # Starting with beta = 3.665                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.112   3.385   0.733                                           HISTORY # 2     1.112   3.385   0.4656                                          HISTORY # 3     1.112   3.385   0.1856                                          HISTORY # 4     1.112   3.385   0.07869                                         HISTORY # 5     1.112   3.385   0.03784                                         HISTORY # Converged to minimum: chi^2 = 1.112 at beta = 3.385                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.93 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =                29.65 / AB magnitude                                   MAG_ERR =                0.111 / AB magnitude errorh0ˆÏ(ÖÇø3L÷ó>@Éø7zÃäEoÚ?4^»"îì?fÉ‹Qê…øÅè›Œ!øQp?ëd–?.Mü†ò"*ø9Ój◊ç≈˙        øTyPùï‘•ø"B“ãpÖ;?•—,≤+                ø2 
Ã¡Mø,5«≤˜Ω                         ?!1˚j©                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        