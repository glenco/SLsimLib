SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.11510102132444 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18223606601389 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8936 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3678. / min(X) in image pixels                         XMAX    =                3712. / max(X) in image pixels                         YMIN    =                6829. / min(Y) in image pixels                         YMAX    =                6863. / min(Y) in image pixels                         CENTROID=   (3694.16, 6844.61) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8936 found in the area (3691/6841) to (3698/6851)   HISTORY # Extending the area around object to (3678/6829) to (3712/6863)        HISTORY # Object 8018 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0260261, Centroid = (3694.16/6844.61)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.21, f(beta) = 1.238, f(b) = 1.323           HISTORY # after bracketing: f(a) = 1.238, f(beta) = 1.21, f(b) = 1.238          HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.192   2.063   3.134                                           HISTORY # 2     1.192   1.877   1.197                                           HISTORY # 3     1.192   1.854   1.011                                           HISTORY # 4     1.191   1.476   0.9875                                          HISTORY # 5     1.191   1.583   0.3772                                          HISTORY # 6     1.191   1.562   0.1065                                          HISTORY # 7     1.191   1.553   0.08564                                         HISTORY # 8     1.191   1.553   0.03845                                         HISTORY # Converged to minimum: chi^2 = 1.191 at beta = 1.553                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.553               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.191   0.0417                                          HISTORY # 1     4       1.193   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.242, beta = 1.553, b = 1.708                     HISTORY # after checking limits: a = 1.242, beta = 1.553, b = 1.708             HISTORY # starting values: f(a) = 1.187, f(beta) = 1.193, f(b) = 1.193          HISTORY # after bracketing: f(a) = 1.193, f(beta) = 1.187, f(b) = 1.193         HISTORY # Setting limits: 1.103 <= beta <= 1.553                                HISTORY # Starting with beta = 1.242                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.187   1.242   0.2583                                          HISTORY # 2     1.185   1.189   0.1397                                          HISTORY # 3     1.184   1.156   0.08632                                         HISTORY # 4     1.183   1.135   0.05335                                         HISTORY # 5     1.182   1.123   0.03297                                         HISTORY # 6     1.182   1.115   0.02038                                         HISTORY # Converged to minimum: chi^2 = 1.182 at beta = 1.115                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  4.5 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.334 / AB magnitude                                   MAG_ERR =                0.098 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?pèß«ì	ô¿/˜».º {?R(¢]v7¯¿9
qDíøÑ?Eyunâ?C1Ì¥p¨‰?`‡ºk»?@ÿz¾c"?Ns§lÏ¼        ?YUäóþ¿<Q[ë§?4?‡Ïï^}                ?+#á¾kÂ>¿4‹¦Ìvq•                        ¿4äy=§c                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        