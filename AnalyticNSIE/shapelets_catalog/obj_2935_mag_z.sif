SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.92073472608957 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14391909881936 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2935 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2345. / min(X) in image pixels                         XMAX    =                2389. / max(X) in image pixels                         YMIN    =                4117. / min(Y) in image pixels                         YMAX    =                4161. / min(Y) in image pixels                         CENTROID=    (2365.31, 4135.7) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2935 found in the area (2359/4129) to (2375/4149)   HISTORY # Extending the area around object to (2345/4117) to (2389/4161)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0928538, Centroid = (2365.31/4135.7) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.422, f(beta) = 1.596, f(b) = 2.209          HISTORY # after bracketing: f(a) = 1.596, f(beta) = 1.422, f(b) = 1.596         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.205   2.445   4.134                                           HISTORY # 2     1.187   2.154   1.579                                           HISTORY # 3     1.184   2.1     1.288                                           HISTORY # 4     1.184   2.1     0.5255                                          HISTORY # 5     1.18    1.92    0.4712                                          HISTORY # 6     1.18    1.808   0.2912                                          HISTORY # 7     1.179   1.848   0.1112                                          HISTORY # 8     1.179   1.85    0.07146                                         HISTORY # Converged to minimum: chi^2 = 1.179 at beta = 1.85                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.85                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.179   0.03219                                         HISTORY # 1     4       1.144   0.03227                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.48, beta = 1.85, b = 2.035                       HISTORY # after checking limits: a = 1.48, beta = 1.85, b = 2.035               HISTORY # starting values: f(a) = 1.16, f(beta) = 1.144, f(b) = 1.145           HISTORY # after bracketing: f(a) = 1.16, f(beta) = 1.144, f(b) = 1.145          HISTORY # Setting limits: 1.48 <= beta <= 2.035                                 HISTORY # Starting with beta = 1.85                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.144   1.85    0.3263                                          HISTORY # 2     1.144   1.921   0.185                                           HISTORY # 3     1.144   1.921   0.1174                                          HISTORY # 4     1.144   1.921   0.04674                                         HISTORY # 5     1.144   1.921   0.04367                                         HISTORY # 6     1.144   1.921   0.01668                                         HISTORY # Converged to minimum: chi^2 = 1.144 at beta = 1.921                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.56 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.828 / AB magnitude                                   MAG_ERR =                0.035 / AB magnitude errorçÓ'04à|?FÿÉâÔæ!?JìWË`µ?E> ı√´?Nê‘@lÆøNÙ@'J?T∆Wíå?'	m©∂o?4©ÁêﬂÒb        øS Ië≈Lø)…QG’e?TL(=xz                ?:Ü‰ﬁI? B‘k^P                        ?Z§MÃ¬P                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        