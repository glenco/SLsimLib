SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.91550075869567 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17932608934835 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4346 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1358. / min(X) in image pixels                         XMAX    =                1406. / max(X) in image pixels                         YMIN    =                4873. / min(Y) in image pixels                         YMAX    =                4921. / min(Y) in image pixels                         CENTROID=    (1383.4, 4895.65) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4346 found in the area (1374/4885) to (1390/4908)   HISTORY # Extending the area around object to (1358/4873) to (1406/4921)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0948095, Centroid = (1383.4/4895.65) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.335, f(beta) = 1.205, f(b) = 1.283          HISTORY # after bracketing: f(a) = 1.335, f(beta) = 1.205, f(b) = 1.283         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.205   6       7.426                                           HISTORY # 2     1.185   4.039   5.134                                           HISTORY # 3     1.185   4.039   3.173                                           HISTORY # 4     1.185   4.039   1.961                                           HISTORY # 5     1.184   3.576   1.212                                           HISTORY # 6     1.184   3.576   0.498                                           HISTORY # 7     1.184   3.753   0.4629                                          HISTORY # 8     1.184   3.67    0.1768                                          HISTORY # 9     1.184   3.67    0.08258                                         HISTORY # Converged to minimum: chi^2 = 1.184 at beta = 3.67                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.67                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.184   0.0295                                          HISTORY # 1     4       1.18    0.02956                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.936, beta = 3.67, b = 4.037                      HISTORY # after checking limits: a = 2.936, beta = 3.67, b = 4.037              HISTORY # starting values: f(a) = 1.179, f(beta) = 1.18, f(b) = 1.18            HISTORY # after bracketing: f(a) = 1.186, f(beta) = 1.179, f(b) = 1.18          HISTORY # Setting limits: 1.958 <= beta <= 3.67                                 HISTORY # Starting with beta = 2.936                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.179   2.936   1.108                                           HISTORY # 2     1.179   2.936   0.6543                                          HISTORY # 3     1.179   2.936   0.4232                                          HISTORY # 4     1.179   2.936   0.2499                                          HISTORY # 5     1.179   2.936   0.1616                                          HISTORY # 6     1.179   2.936   0.09545                                         HISTORY # 7     1.179   2.916   0.05455                                         HISTORY # Converged to minimum: chi^2 = 1.179 at beta = 2.916                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.94 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.229 / AB magnitude                                   MAG_ERR =                0.054 / AB magnitude errorz¼~5ÂZ?A×Ø`†äè?[Çr¢a-¿@Š/}6ËT?DÔmûLP'¿&pªã´ú¿EÏcˆÈ[?!¦µÑ:LÞ¿30çË¹O         ¿B\¿.üž¥¿JA]ª¸É?ëJæIr                ?DD~1¤ð¥¿Ak–C—Ë                        ¿/d™‹ò                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        