SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.65388429257935 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07292340609251 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5958 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6834. / min(X) in image pixels                         XMAX    =                6874. / max(X) in image pixels                         YMIN    =                5656. / min(Y) in image pixels                         YMAX    =                5696. / min(Y) in image pixels                         CENTROID=    (6853.2, 5676.15) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5958 found in the area (6846/5670) to (6862/5681)   HISTORY # Extending the area around object to (6834/5656) to (6874/5696)        HISTORY # Object 8892 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0496371, Centroid = (6853.2/5676.15) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.227, f(beta) = 1.173, f(b) = 1.358          HISTORY # after bracketing: f(a) = 1.227, f(beta) = 1.173, f(b) = 1.358         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.173   5       6.044                                           HISTORY # 2     1.107   3.421   4.134                                           HISTORY # 3     1.092   2.445   2.555                                           HISTORY # 4     1.092   2.445   1.174                                           HISTORY # 5     1.092   2.445   0.5706                                          HISTORY # 6     1.092   2.587   0.3728                                          HISTORY # 7     1.092   2.578   0.1424                                          HISTORY # 8     1.092   2.575   0.1328                                          HISTORY # 9     1.092   2.575   0.1299                                          HISTORY # 10    1.092   2.575   2.799e-05                                       HISTORY # Converged to minimum: chi^2 = 1.092 at beta = 2.575                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.575               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.092   0.03542                                         HISTORY # 1     4       1.073   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.06, beta = 2.575, b = 2.832                      HISTORY # after checking limits: a = 2.06, beta = 2.575, b = 2.832              HISTORY # starting values: f(a) = 1.078, f(beta) = 1.073, f(b) = 1.073          HISTORY # after bracketing: f(a) = 1.078, f(beta) = 1.073, f(b) = 1.073         HISTORY # Setting limits: 2.06 <= beta <= 2.832                                 HISTORY # Starting with beta = 2.575                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.073   2.575   0.4542                                          HISTORY # 2     1.073   2.673   0.2575                                          HISTORY # 3     1.073   2.647   0.09835                                         HISTORY # 4     1.073   2.654   0.0258                                          HISTORY # Converged to minimum: chi^2 = 1.073 at beta = 2.654                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.65 / photometric redshift                           SED_TYPE=                    5 / SED template                                   MAG     =               28.375 / AB magnitude                                   MAG_ERR =                0.075 / AB magnitude error}åñïoP?Ì'3:‡r¿WÌj­@À¿C9!Mívý?B1ÙNÀÌÎ¿	B±}¥¿P¿B«kú{¢“¿&†O_}Uš?/¼cQE?         ?EÖ=eWÝ¿Ad²‚ë?Cpôõ
                ?2BÌÅÌ·¯¿3ä®Uû                        ?Qï£1›äâ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        