SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.93655760846568 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14008135416848 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7409 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7590. / min(X) in image pixels                         XMAX    =                7630. / max(X) in image pixels                         YMIN    =                6469. / min(Y) in image pixels                         YMAX    =                6509. / min(Y) in image pixels                         CENTROID=   (7610.76, 6489.91) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7409 found in the area (7604/6481) to (7616/6496)   HISTORY # Extending the area around object to (7590/6469) to (7630/6509)        HISTORY # Object 7392 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0844264, Centroid = (7610.76/6489.91)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.549, f(beta) = 1.682, f(b) = 2.423          HISTORY # after bracketing: f(a) = 1.682, f(beta) = 1.549, f(b) = 1.682         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.18    2.445   4.134                                           HISTORY # 2     1.169   2.255   1.579                                           HISTORY # 3     1.167   2.212   1.389                                           HISTORY # 4     1.167   2.212   0.5565                                          HISTORY # 5     1.162   2.016   0.5143                                          HISTORY # 6     1.162   1.92    0.3178                                          HISTORY # 7     1.162   1.937   0.09557                                         HISTORY # Converged to minimum: chi^2 = 1.162 at beta = 1.937                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.937               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.162   0.03542                                         HISTORY # 1     4       1.14    0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.549, beta = 1.937, b = 2.13                      HISTORY # after checking limits: a = 1.549, beta = 1.937, b = 2.13              HISTORY # starting values: f(a) = 1.149, f(beta) = 1.14, f(b) = 1.141           HISTORY # after bracketing: f(a) = 1.149, f(beta) = 1.14, f(b) = 1.141          HISTORY # Setting limits: 1.549 <= beta <= 2.13                                 HISTORY # Starting with beta = 1.937                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.14    1.937   0.3416                                          HISTORY # 2     1.14    1.937   0.2219                                          HISTORY # 3     1.14    1.937   0.1305                                          HISTORY # 4     1.14    1.937   0.08476                                         HISTORY # 5     1.14    1.937   0.04984                                         HISTORY # 6     1.14    1.937   0.03238                                         HISTORY # Converged to minimum: chi^2 = 1.14 at beta = 1.937                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.85 / photometric redshift                           SED_TYPE=                    9 / SED template                                   MAG     =               27.996 / AB magnitude                                   MAG_ERR =                0.034 / AB magnitude errorçª(iwÚÓ?5‚„||Ü?Q>v/EÄ?7{‡: 2¬?N’:Ëˆa#ø1ÜgbRÛøP+∫b6=ø2e#Oº/æ˛DDµªjç        øFÉ∫(
?1¯Rö?@÷Ç⁄gQA                ?%éQ“ü?BiÒﬂíï                        ?RÈcﬁ´                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        