SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.09124897070936 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11234278017389 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  770 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5289 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8393. / min(X) in image pixels                         XMAX    =                8437. / max(X) in image pixels                         YMIN    =                5337. / min(Y) in image pixels                         YMAX    =                5381. / min(Y) in image pixels                         CENTROID=   (8416.74, 5355.72) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5289 found in the area (8409/5349) to (8421/5369)   HISTORY # Extending the area around object to (8393/5337) to (8437/5381)        HISTORY # Object 5345 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0481914, Centroid = (8416.74/5355.72)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.155, f(beta) = 1.175, f(b) = 1.207          HISTORY # after bracketing: f(a) = 1.175, f(beta) = 1.155, f(b) = 1.175         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.132   2.445   4.134                                           HISTORY # 2     1.127   2.052   1.579                                           HISTORY # 3     1.126   1.981   1.186                                           HISTORY # 4     1.125   1.555   1.115                                           HISTORY # 5     1.125   1.626   0.4258                                          HISTORY # 6     1.125   1.626   0.2065                                          HISTORY # 7     1.125   1.677   0.1355                                          HISTORY # 8     1.125   1.655   0.05128                                         HISTORY # Converged to minimum: chi^2 = 1.125 at beta = 1.655                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.655               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.125   0.03219                                         HISTORY # 1     4       1.121   0.03227                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.324, beta = 1.655, b = 1.82                      HISTORY # after checking limits: a = 1.324, beta = 1.655, b = 1.82              HISTORY # starting values: f(a) = 1.125, f(beta) = 1.121, f(b) = 1.121          HISTORY # after bracketing: f(a) = 1.121, f(beta) = 1.114, f(b) = 1.126         HISTORY # Setting limits: 1.82 <= beta <= 4.095                                 HISTORY # Starting with beta = 2.73                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.113   3.252   1.365                                           HISTORY # 2     1.112   3.102   0.5214                                          HISTORY # 3     1.112   3.085   0.3715                                          HISTORY # 4     1.112   3.091   0.01665                                         HISTORY # Converged to minimum: chi^2 = 1.112 at beta = 3.091                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.27 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               28.921 / AB magnitude                                   MAG_ERR =                 0.08 / AB magnitude errorq∏nõñÇ>?¿Ö±f’ø@¶´Xüõ@?G≤uÛ˙∑?F‹'…Ê¬ûæ¸vﬂØW◊øO+û˜ı_øHd±Ÿ\Íƒø!Dº˜o£        øSCËÖˇÔæÌˆÛ£Dÿ|?WRmÒQ”n                øE>fûÅ–ªæÓwÕÕñ                        ?H˜˜N†"°                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        