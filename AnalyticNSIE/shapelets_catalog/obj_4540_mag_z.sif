SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.32957626808614 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1354622896767 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4540 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1173. / min(X) in image pixels                         XMAX    =                1215. / max(X) in image pixels                         YMIN    =                4939. / min(Y) in image pixels                         YMAX    =                4981. / min(Y) in image pixels                         CENTROID=   (1191.88, 4956.52) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4540 found in the area (1187/4951) to (1201/4969)   HISTORY # Extending the area around object to (1173/4939) to (1215/4981)        HISTORY # Object 4410 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0797055, Centroid = (1191.88/4956.52)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.211, f(beta) = 1.233, f(b) = 1.316          HISTORY # after bracketing: f(a) = 1.233, f(beta) = 1.211, f(b) = 1.233         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.157   2.445   4.134                                           HISTORY # 2     1.148   2.092   1.579                                           HISTORY # 3     1.146   2.003   1.226                                           HISTORY # 4     1.139   1.569   1.137                                           HISTORY # 5     1.139   1.569   0.7028                                          HISTORY # 6     1.139   1.569   0.4344                                          HISTORY # 7     1.139   1.569   0.2685                                          HISTORY # 8     1.139   1.569   0.1659                                          HISTORY # 9     1.139   1.569   0.1025                                          HISTORY # 10    1.139   1.569   0.06338                                         HISTORY # Converged to minimum: chi^2 = 1.139 at beta = 1.569                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.569               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.139   0.03373                                         HISTORY # 1     4       1.136   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.255, beta = 1.569, b = 1.726                     HISTORY # after checking limits: a = 1.255, beta = 1.569, b = 1.726             HISTORY # starting values: f(a) = 1.136, f(beta) = 1.136, f(b) = 1.137          HISTORY # after bracketing: f(a) = 1.136, f(beta) = 1.136, f(b) = 1.136         HISTORY # Setting limits: 1.102 <= beta <= 1.569                                HISTORY # Starting with beta = 1.255                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.136   1.375   0.3138                                          HISTORY # 2     1.135   1.33    0.1199                                          HISTORY # 3     1.135   1.33    0.07542                                         HISTORY # 4     1.135   1.33    0.02939                                         HISTORY # Converged to minimum: chi^2 = 1.135 at beta = 1.33                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  2.7 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               28.918 / AB magnitude                                   MAG_ERR =                0.073 / AB magnitude errorv‹Oœ¿;û¿U÷ñjïÂ?`9é(”©¿5ƒøËéùr?J` ³øC3¿]­?|9‡?HâZ.æÞ’?*A?–©¿,^Bë²        ?R-˜ÆËÐ¯¿=zã€\	?H¹Ïá                ?zÝ³¿DYÁ‹ëiŒ                        ?6•Ú‚"¡×                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        