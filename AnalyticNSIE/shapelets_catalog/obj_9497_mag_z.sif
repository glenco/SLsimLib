SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.17775166158274 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17020584688716 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9497 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5420. / min(X) in image pixels                         XMAX    =                5460. / max(X) in image pixels                         YMIN    =                8181. / min(Y) in image pixels                         YMAX    =                8221. / min(Y) in image pixels                         CENTROID=   (5439.69, 8203.48) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9497 found in the area (5435/8193) to (5445/8209)   HISTORY # Extending the area around object to (5420/8181) to (5460/8221)        HISTORY # Object 9454 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0563138, Centroid = (5439.69/8203.48)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.343, f(beta) = 1.471, f(b) = 1.731          HISTORY # after bracketing: f(a) = 1.471, f(beta) = 1.343, f(b) = 1.471         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.277   2.445   4.134                                           HISTORY # 2     1.252   1.976   1.579                                           HISTORY # 3     1.249   1.9     1.11                                            HISTORY # 4     1.242   1.505   1.034                                           HISTORY # 5     1.242   1.526   0.3951                                          HISTORY # 6     1.242   1.526   0.1635                                          HISTORY # 7     1.241   1.58    0.1431                                          HISTORY # 8     1.241   1.567   0.05466                                         HISTORY # Converged to minimum: chi^2 = 1.241 at beta = 1.567                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.567               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.241   0.03542                                         HISTORY # 1     4       1.206   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.253, beta = 1.567, b = 1.724                     HISTORY # after checking limits: a = 1.253, beta = 1.567, b = 1.724             HISTORY # starting values: f(a) = 1.236, f(beta) = 1.206, f(b) = 1.191          HISTORY # after bracketing: f(a) = 1.191, f(beta) = 1.186, f(b) = 1.304         HISTORY # Setting limits: 1.724 <= beta <= 3.878                                HISTORY # Starting with beta = 2.585                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.186   2.585   1.355                                           HISTORY # 2     1.171   2.256   0.8618                                          HISTORY # 3     1.171   2.118   0.5326                                          HISTORY # 4     1.17    2.177   0.1376                                          HISTORY # 5     1.17    2.178   0.07926                                         HISTORY # 6     1.17    2.178   0.001329                                        HISTORY # Converged to minimum: chi^2 = 1.17 at beta = 2.178                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.44 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.469 / AB magnitude                                   MAG_ERR =                0.048 / AB magnitude errorÇ”|S¡?U≈„GuîË?L“Eµ√æ®øc¶£û¢*?\m≤∑ã>˛"˚ài ãøC¢;q5˜À?KQOENæUø'^4KÛ(G        øb–õï»ÓòøC√Ÿåa?&≠ÛJ¿˝ã                ?/◊Å§Ë»&?*5ØÓÖ                        ?R∫ª∑\ˆÀ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        