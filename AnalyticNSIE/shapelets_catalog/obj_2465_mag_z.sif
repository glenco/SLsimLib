SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.38047126137273 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1206309464292 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2465 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3037. / min(X) in image pixels                         XMAX    =                3077. / max(X) in image pixels                         YMIN    =                3789. / min(Y) in image pixels                         YMAX    =                3829. / min(Y) in image pixels                         CENTROID=   (3053.23, 3808.82) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2465 found in the area (3049/3805) to (3065/3812)   HISTORY # Extending the area around object to (3037/3789) to (3077/3829)        HISTORY # Object 2434 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0207788, Centroid = (3053.23/3808.82)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.134, f(beta) = 1.127, f(b) = 1.144          HISTORY # after bracketing: f(a) = 1.134, f(beta) = 1.127, f(b) = 1.144         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.126   6.91    5                                               HISTORY # 2     1.124   6.106   1.91                                            HISTORY # 3     1.124   6.08    1.106                                           HISTORY # 4     1.124   6.084   0.02598                                         HISTORY # Converged to minimum: chi^2 = 1.124 at beta = 6.084                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.084               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.124   0.03542                                         HISTORY # 1     4       1.126   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.867, beta = 6.084, b = 6.692                     HISTORY # after checking limits: a = 4.867, beta = 6.084, b = 6.692             HISTORY # starting values: f(a) = 1.122, f(beta) = 1.126, f(b) = 1.127          HISTORY # after bracketing: f(a) = 1.129, f(beta) = 1.122, f(b) = 1.126         HISTORY # Setting limits: 3.245 <= beta <= 6.084                                HISTORY # Starting with beta = 4.867                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.121   4.247   1.622                                           HISTORY # 2     1.121   4.386   0.6197                                          HISTORY # 3     1.121   4.38    0.1391                                          HISTORY # 4     1.121   4.38    0.05679                                         HISTORY # Converged to minimum: chi^2 = 1.121 at beta = 4.38                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.03 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =                29.51 / AB magnitude                                   MAG_ERR =                0.138 / AB magnitude errorÆçR{ÕC¿6­/Ÿâ¿Y	Ž”¹sè¿(‰ªd9Áè¿)í†öcI?Gí#U¥¿2æR\è¯?¹ž7õô¿6ÀÊæÞ        ¿B8ô’ae¿@ƒHQVßÑ¿(a/ƒéT                ?L¿ÓI£ú¿CRÁ**¨Ñ                        ?C§y`ô                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        