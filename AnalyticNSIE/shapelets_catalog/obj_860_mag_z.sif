SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      2.4023942391978 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.04404148252583 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  860 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5935. / min(X) in image pixels                         XMAX    =                5965. / max(X) in image pixels                         YMIN    =                2400. / min(Y) in image pixels                         YMAX    =                2430. / min(Y) in image pixels                         CENTROID=   (5949.62, 2415.16) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 860 found in the area (5947/2412) to (5952/2418)    HISTORY # Extending the area around object to (5935/2400) to (5965/2430)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00751001, Centroid = (5949.62/2415.16HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.065, f(beta) = 1.045, f(b) = 1.066          HISTORY # after bracketing: f(a) = 1.065, f(beta) = 1.045, f(b) = 1.066         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.045   3       3.28                                            HISTORY # 2     1.041   2.185   2.134                                           HISTORY # 3     1.041   2.185   1.319                                           HISTORY # 4     1.041   2.185   0.8151                                          HISTORY # 5     1.041   2.185   0.5038                                          HISTORY # 6     1.041   2.185   0.3113                                          HISTORY # 7     1.041   2.111   0.1924                                          HISTORY # 8     1.041   2.111   0.07828                                         HISTORY # 9     1.041   2.139   0.0735                                          HISTORY # 10    1.041   2.128   0.02807                                         HISTORY # Converged to minimum: chi^2 = 1.041 at beta = 2.128                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.128               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.041   0.0473                                          HISTORY # 1     4       1.045   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.703, beta = 2.128, b = 2.341                     HISTORY # after checking limits: a = 1.703, beta = 2.128, b = 2.341             HISTORY # starting values: f(a) = 1.046, f(beta) = 1.045, f(b) = 1.044          HISTORY # after bracketing: f(a) = 1.045, f(beta) = 1.044, f(b) = 1.053         HISTORY # Setting limits: 2.128 <= beta <= 3.512                                HISTORY # Starting with beta = 2.341                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.044   2.341   0.66                                            HISTORY # 2     1.044   2.341   0.3836                                          HISTORY # 3     1.044   2.341   0.2521                                          HISTORY # 4     1.044   2.407   0.1708                                          HISTORY # 5     1.044   2.402   0.06524                                         HISTORY # 6     1.044   2.402   0.004803                                        HISTORY # Converged to minimum: chi^2 = 1.044 at beta = 2.402                   HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                  3.8 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.116 / AB magnitude                                   MAG_ERR =                0.156 / AB magnitude error`¬“¸Á‹?/–! …ÜŒ¿'™ž>C€v¿,?ÄWBgC?3 `É³À?CN™RŒÝÚ?A—X-÷9ß?3Ù7uú}¾Ûßžý¦‚        >ùA¤Èg¢L?"=Ï!¿‡l˜N˜ç                ¿(tÃ½"¹(¿2þ¨òp~}                        ?;=ÂÐçº                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        