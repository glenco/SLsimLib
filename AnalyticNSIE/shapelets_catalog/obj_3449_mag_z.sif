SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.25048350048098 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16615565961404 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3449 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4304. / min(X) in image pixels                         XMAX    =                4336. / max(X) in image pixels                         YMIN    =                4390. / min(Y) in image pixels                         YMAX    =                4422. / min(Y) in image pixels                         CENTROID=   (4320.15, 4406.37) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3449 found in the area (4316/4402) to (4323/4409)   HISTORY # Extending the area around object to (4304/4390) to (4336/4422)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0182422, Centroid = (4320.15/4406.37)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.18, f(beta) = 1.187, f(b) = 1.228           HISTORY # after bracketing: f(a) = 1.187, f(beta) = 1.18, f(b) = 1.187          HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.173   2.063   3.134                                           HISTORY # 2     1.173   2.152   1.937                                           HISTORY # 3     1.172   2.858   1.848                                           HISTORY # 4     1.172   2.858   0.8714                                          HISTORY # 5     1.172   2.589   0.7057                                          HISTORY # 6     1.172   2.591   0.2696                                          HISTORY # 7     1.172   2.693   0.2667                                          HISTORY # 8     1.172   2.652   0.1019                                          HISTORY # 9     1.172   2.652   0.04214                                         HISTORY # Converged to minimum: chi^2 = 1.172 at beta = 2.652                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.652               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.172   0.04432                                         HISTORY # 1     4       1.174   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.121, beta = 2.652, b = 2.917                     HISTORY # after checking limits: a = 2.121, beta = 2.652, b = 2.917             HISTORY # starting values: f(a) = 1.173, f(beta) = 1.174, f(b) = 1.175          HISTORY # after bracketing: f(a) = 1.173, f(beta) = 1.168, f(b) = 1.173         HISTORY # Setting limits: 1.092 <= beta <= 2.121                                HISTORY # Starting with beta = 1.414                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.168   1.414   0.5928                                          HISTORY # 2     1.166   1.291   0.3227                                          HISTORY # 3     1.166   1.291   0.1995                                          HISTORY # 4     1.166   1.291   0.1233                                          HISTORY # 5     1.166   1.262   0.07619                                         HISTORY # 6     1.166   1.25    0.04709                                         HISTORY # Converged to minimum: chi^2 = 1.166 at beta = 1.25                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                  0.7 / photometric redshift                           SED_TYPE=                   13 / SED template                                   MAG     =               29.922 / AB magnitude                                   MAG_ERR =                0.137 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?d]ÓÒïœª?7f/øŸå?0»)õOY3øL‡ôbmS˜?=) ¢ﬂø{ËHœ ø&).∞r∞l?'ıµ*|ø;ò^!z        ?E‘CÑ1∂ø.q√còÆø“ÈBù…                ø(û¿“tÅ>Ë…CªÕ                        ?6ìhÿ˛Õ	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        