SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.24523817326978 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =       1.105840495292 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4924 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                9520. / min(X) in image pixels                         XMAX    =                9560. / max(X) in image pixels                         YMIN    =                5149. / min(Y) in image pixels                         YMAX    =                5189. / min(Y) in image pixels                         CENTROID=   (9541.29, 5167.41) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4924 found in the area (9532/5161) to (9548/5177)   HISTORY # Extending the area around object to (9520/5149) to (9560/5189)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0526331, Centroid = (9541.29/5167.41)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.183, f(beta) = 1.125, f(b) = 1.129          HISTORY # after bracketing: f(a) = 1.183, f(beta) = 1.125, f(b) = 1.129         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   5       6.044                                           HISTORY # 2     1.125   3.421   4.134                                           HISTORY # 3     1.123   4.173   1.579                                           HISTORY # 4     1.123   4.173   0.7576                                          HISTORY # 5     1.123   3.886   0.7519                                          HISTORY # 6     1.123   3.989   0.2872                                          HISTORY # 7     1.123   3.974   0.1033                                          HISTORY # 8     1.123   3.969   0.08787                                         HISTORY # Converged to minimum: chi^2 = 1.123 at beta = 3.969                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.969               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.123   0.03542                                         HISTORY # 1     4       1.113   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.175, beta = 3.969, b = 4.366                     HISTORY # after checking limits: a = 3.175, beta = 3.969, b = 4.366             HISTORY # starting values: f(a) = 1.106, f(beta) = 1.113, f(b) = 1.118          HISTORY # after bracketing: f(a) = 1.129, f(beta) = 1.106, f(b) = 1.113         HISTORY # Setting limits: 2.117 <= beta <= 3.969                                HISTORY # Starting with beta = 3.175                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.106   3.175   1.198                                           HISTORY # 2     1.106   3.175   0.7075                                          HISTORY # 3     1.106   3.175   0.4576                                          HISTORY # 4     1.106   3.291   0.3032                                          HISTORY # 5     1.106   3.245   0.1158                                          HISTORY # 6     1.106   3.245   0.07099                                         HISTORY # Converged to minimum: chi^2 = 1.106 at beta = 3.245                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.96 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               28.612 / AB magnitude                                   MAG_ERR =                0.091 / AB magnitude errorcôh]à;¿6˜ê»Iz?XNlI3¥?'ðœæóƒ? âdÿX2ö??O`žóÎ¿"Ë¥ÍfØ?<tPôOáœ??3—5ç¹        ?9áíJ‰´*?B%|H//‡?OÓ*›¸×Ü                ¿C"ûsƒ?)â„ÆF'†                        ?Láî`Ú“                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        