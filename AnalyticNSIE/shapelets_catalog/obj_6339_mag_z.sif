SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      2.9698878288823 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11703023988588 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  769 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6339 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1636. / min(X) in image pixels                         XMAX    =                1666. / max(X) in image pixels                         YMIN    =                5850. / min(Y) in image pixels                         YMAX    =                5880. / min(Y) in image pixels                         CENTROID=   (1651.18, 5865.57) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6339 found in the area (1648/5862) to (1654/5868)   HISTORY # Extending the area around object to (1636/5850) to (1666/5880)        HISTORY # Object 6289 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0111417, Centroid = (1651.18/5865.57)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.143, f(beta) = 1.13, f(b) = 1.154           HISTORY # after bracketing: f(a) = 1.143, f(beta) = 1.13, f(b) = 1.154          HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.13    3       3.28                                            HISTORY # 2     1.13    3       1.961                                           HISTORY # 3     1.129   3.438   1.146                                           HISTORY # 4     1.129   3.438   0.5062                                          HISTORY # 5     1.129   3.438   0.2357                                          HISTORY # 6     1.129   3.438   0.06852                                         HISTORY # 7     1.129   3.438   0.02617                                         HISTORY # Converged to minimum: chi^2 = 1.129 at beta = 3.438                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.438               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.129   0.0473                                          HISTORY # 1     4       1.119   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.75, beta = 3.438, b = 3.781                      HISTORY # after checking limits: a = 2.75, beta = 3.438, b = 3.781              HISTORY # starting values: f(a) = 1.118, f(beta) = 1.119, f(b) = 1.122          HISTORY # after bracketing: f(a) = 1.128, f(beta) = 1.118, f(b) = 1.119         HISTORY # Setting limits: 1.833 <= beta <= 3.438                                HISTORY # Starting with beta = 2.75                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.118   2.75    1.038                                           HISTORY # 2     1.117   3.013   0.6875                                          HISTORY # 3     1.117   2.973   0.2626                                          HISTORY # 4     1.117   2.972   0.2228                                          HISTORY # 5     1.117   2.972   0.08595                                         HISTORY # 6     1.117   2.97    0.0846                                          HISTORY # 7     1.117   2.97    0.001814                                        HISTORY # Converged to minimum: chi^2 = 1.117 at beta = 2.97                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.25 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.375 / AB magnitude                                   MAG_ERR =                0.152 / AB magnitude error×7?‡”+×¿TPU¸&¿6°"$ŸE¿A8é£Ü¿2j—u¯}?6ÿ#÷Í®ï?C9Oû—‘Û¾òª$Î9ú	        ¿Q…5Cà…ƒ¿ éµYg?+#ùú¢”                ¿Lì]Óë¡¿)žp±Ho                        ?*ÈÄÚH                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        