SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.82643086299354 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13314232728734 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3437 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8374. / min(X) in image pixels                         XMAX    =                8406. / max(X) in image pixels                         YMIN    =                4386. / min(Y) in image pixels                         YMAX    =                4418. / min(Y) in image pixels                         CENTROID=   (8389.62, 4401.19) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3437 found in the area (8387/4398) to (8393/4406)   HISTORY # Extending the area around object to (8374/4386) to (8406/4418)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0112486, Centroid = (8389.62/4401.19)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.144, f(beta) = 1.161, f(b) = 1.202          HISTORY # after bracketing: f(a) = 1.161, f(beta) = 1.144, f(b) = 1.161         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.14    2.063   3.134                                           HISTORY # 2     1.138   1.622   1.197                                           HISTORY # 3     1.138   1.615   0.7565                                          HISTORY # 4     1.137   1.329   0.7488                                          HISTORY # 5     1.137   1.329   0.4628                                          HISTORY # 6     1.137   1.329   0.286                                           HISTORY # 7     1.137   1.329   0.1768                                          HISTORY # 8     1.137   1.329   0.1092                                          HISTORY # 9     1.137   1.303   0.06752                                         HISTORY # Converged to minimum: chi^2 = 1.137 at beta = 1.303                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.303               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.137   0.04432                                         HISTORY # 1     4       1.139   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.042, beta = 1.303, b = 1.433                     HISTORY # after checking limits: a = 1.118, beta = 1.303, b = 1.433             HISTORY # starting values: f(a) = 1.141, f(beta) = 1.139, f(b) = 1.137          HISTORY # after bracketing: f(a) = 1.137, f(beta) = 1.135, f(b) = 1.154         HISTORY # Setting limits: 1.433 <= beta <= 3.225                                HISTORY # Starting with beta = 2.15                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.135   2.15    1.127                                           HISTORY # 2     1.133   1.876   0.7167                                          HISTORY # 3     1.133   1.815   0.4429                                          HISTORY # 4     1.133   1.824   0.06136                                         HISTORY # 5     1.133   1.827   0.05219                                         HISTORY # 6     1.133   1.826   0.00265                                         HISTORY # Converged to minimum: chi^2 = 1.133 at beta = 1.826                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.03 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               30.289 / AB magnitude                                   MAG_ERR =                0.166 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?bjò°Ú? 5^æ®⁄ﬂ?)'ù“◊Í?!Òˇí¸ÍøeíÓ|&Ëø0‚tÿ›[øø ¸Í§mﬂ7?5Ä˘qˇÀ§øF¬k◊íz        øIY>˜–_?*v¢Mﬂ•A?7K7Â5                ø9Ê$ÉÀµ?4’C®ì                        ?*èŒßæ¡Ü                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        