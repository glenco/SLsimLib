SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.38259187485243 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16492190711638 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2697 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3713. / min(X) in image pixels                         XMAX    =                3769. / max(X) in image pixels                         YMIN    =                3973. / min(Y) in image pixels                         YMAX    =                4029. / min(Y) in image pixels                         CENTROID=    (3742.83, 4000.5) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2697 found in the area (3725/3988) to (3756/4013)   HISTORY # Extending the area around object to (3713/3973) to (3769/4029)        HISTORY # Object 2497 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.225112, Centroid = (3742.83/4000.5)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 2.103, f(beta) = 1.42, f(b) = 2.003           HISTORY # after bracketing: f(a) = 2.103, f(beta) = 1.42, f(b) = 2.003          HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.42    7       8.808                                           HISTORY # 2     1.238   4.657   6.134                                           HISTORY # 3     1.206   3.209   3.791                                           HISTORY # 4     1.206   3.209   1.496                                           HISTORY # 5     1.206   3.209   0.6012                                          HISTORY # 6     1.206   3.209   0.5531                                          HISTORY # 7     1.204   3.42    0.5531                                          HISTORY # 8     1.204   3.433   0.3418                                          HISTORY # 9     1.204   3.433   0.1386                                          HISTORY # Converged to minimum: chi^2 = 1.204 at beta = 3.433                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.433               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.204   0.02528                                         HISTORY # 1     4       1.165   0.02531                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.747, beta = 3.433, b = 3.777                     HISTORY # after checking limits: a = 2.747, beta = 3.433, b = 3.777             HISTORY # starting values: f(a) = 1.174, f(beta) = 1.165, f(b) = 1.167          HISTORY # after bracketing: f(a) = 1.174, f(beta) = 1.165, f(b) = 1.167         HISTORY # Setting limits: 2.747 <= beta <= 3.777                                HISTORY # Starting with beta = 3.433                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.165   3.433   0.6056                                          HISTORY # 2     1.165   3.433   0.3934                                          HISTORY # 3     1.165   3.333   0.2623                                          HISTORY # 4     1.165   3.383   0.1002                                          HISTORY # 5     1.165   3.383   0.04958                                         HISTORY # Converged to minimum: chi^2 = 1.165 at beta = 3.383                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.76 / photometric redshift                           SED_TYPE=                   14 / SED template                                   MAG     =               26.809 / AB magnitude                                   MAG_ERR =                0.026 / AB magnitude errorî>\ùæ øÁeRyÏàø+Ì•‡Ÿä{ø≥ñµ!æU?`á<Îr*Ú?FÉ§ù†uøj¬øŒ ??Qèã-?S≈oﬂ]"        ?ZcyÕB
ø+µ™?ZRÛd9I                ?8 ÜRÕ»øA4;
G#                        ?Súùç<„K                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        