SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      3.4486823921586 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11247254424847 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6001 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6620. / min(X) in image pixels                         XMAX    =                6652. / max(X) in image pixels                         YMIN    =                5674. / min(Y) in image pixels                         YMAX    =                5706. / min(Y) in image pixels                         CENTROID=    (6636.1, 5690.73) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6001 found in the area (6632/5687) to (6639/5693)   HISTORY # Extending the area around object to (6620/5674) to (6652/5706)        HISTORY # Object 5883 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0206367, Centroid = (6636.1/5690.73) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.174, f(beta) = 1.153, f(b) = 1.147          HISTORY # after bracketing: f(a) = 1.153, f(beta) = 1.147, f(b) = 1.153         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.147   8       2.805                                           HISTORY # 2     1.147   8       1.861                                           HISTORY # 3     1.147   8.488   1.278                                           HISTORY # 4     1.147   8.25    0.488                                           HISTORY # 5     1.147   8.25    0.2502                                          HISTORY # 6     1.147   8.25    0.09565                                         HISTORY # 7     1.147   8.247   0.09552                                         HISTORY # 8     1.147   8.247   0.003396                                        HISTORY # Converged to minimum: chi^2 = 1.147 at beta = 8.247                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 8.247               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.147   0.04432                                         HISTORY # 1     4       1.143   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 6.597, beta = 8.247, b = 9.071                     HISTORY # after checking limits: a = 6.597, beta = 6.876, b = 7.155             HISTORY # starting values: f(a) = 1.139, f(beta) = 1.14, f(b) = 1.141           HISTORY # after bracketing: f(a) = 1.135, f(beta) = 1.118, f(b) = 1.123         HISTORY # Setting limits: 1.955 <= beta <= 4.398                                HISTORY # Starting with beta = 2.932                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.113   3.492   1.466                                           HISTORY # 2     1.113   3.492   0.5698                                          HISTORY # 3     1.113   3.492   0.2237                                          HISTORY # 4     1.113   3.492   0.2139                                          HISTORY # 5     1.113   3.41    0.2139                                          HISTORY # 6     1.112   3.449   0.0817                                          HISTORY # Converged to minimum: chi^2 = 1.112 at beta = 3.449                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  5.2 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.094 / AB magnitude                                   MAG_ERR =                0.246 / AB magnitude errorf$Ÿûyóhø@9ÌHJ>6æÎ7wr:?Nêpné––?IÎ∆ù—	?ˆªÀ_»?'µª£'Ñ?3H,:ñ?ÒC˝•GW        ø Ú∆?<WÈ~˚é{?>∞"\ÂÊß                ?>cñ\˚u?!ÜZ][HY                        ?P¶W∂∫◊Í                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        