SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.55364541325722 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.23886733052429 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5693 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3694. / min(X) in image pixels                         XMAX    =                3728. / max(X) in image pixels                         YMIN    =                5522. / min(Y) in image pixels                         YMAX    =                5556. / min(Y) in image pixels                         CENTROID=   (3710.45, 5538.44) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5693 found in the area (3707/5534) to (3714/5544)   HISTORY # Extending the area around object to (3694/5522) to (3728/5556)        HISTORY # Object 5738 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0128462, Centroid = (3710.45/5538.44)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.261, f(beta) = 1.24, f(b) = 1.257           HISTORY # after bracketing: f(a) = 1.261, f(beta) = 1.24, f(b) = 1.257          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.24    5.528   4                                               HISTORY # 2     1.239   4.869   1.528                                           HISTORY # 3     1.239   4.869   0.6743                                          HISTORY # 4     1.239   4.869   0.2668                                          HISTORY # 5     1.239   4.869   0.2518                                          HISTORY # 6     1.239   4.869   0.09618                                         HISTORY # 7     1.239   4.905   0.09618                                         HISTORY # 8     1.239   4.89    0.03674                                         HISTORY # Converged to minimum: chi^2 = 1.239 at beta = 4.89                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.89                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.239   0.0417                                          HISTORY # 1     4       1.244   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.912, beta = 4.89, b = 5.379                      HISTORY # after checking limits: a = 3.912, beta = 4.89, b = 5.379              HISTORY # starting values: f(a) = 1.244, f(beta) = 1.244, f(b) = 1.242          HISTORY # after bracketing: f(a) = 1.244, f(beta) = 1.242, f(b) = 1.244         HISTORY # Setting limits: 4.89 <= beta <= 7.652                                 HISTORY # Starting with beta = 5.379                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.239   6.247   2.272                                           HISTORY # 2     1.239   6.612   1.404                                           HISTORY # 3     1.239   6.556   0.3642                                          HISTORY # 4     1.239   6.555   0.309                                           HISTORY # 5     1.239   6.555   0.1189                                          HISTORY # 6     1.239   6.554   0.1175                                          HISTORY # 7     1.239   6.554   0.001236                                        HISTORY # Converged to minimum: chi^2 = 1.239 at beta = 6.554                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.78 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               29.739 / AB magnitude                                   MAG_ERR =                0.131 / AB magnitude errormé¼•÷N?;ü*¾®çM¿VÅ=Ô›Ê¿F]e‘­¿&®%óT?öA¾k¿3S­±ÞZO¿-v«÷ì…£?*Qrôn¦œ        ¿\rÖƒ%D™? h¨õ~º«?(6rÕ»‘¹                ¿Fgª+?Uá¿$é¬òw                         ?FœXíÐ¹®                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        