SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.89271828303494 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16758366279295 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3117 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4412. / min(X) in image pixels                         XMAX    =                4446. / max(X) in image pixels                         YMIN    =                4198. / min(Y) in image pixels                         YMAX    =                4232. / min(Y) in image pixels                         CENTROID=    (4431.2, 4214.45) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3117 found in the area (4425/4210) to (4432/4219)   HISTORY # Extending the area around object to (4412/4198) to (4446/4232)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0253348, Centroid = (4431.2/4214.45) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.214, f(beta) = 1.189, f(b) = 1.188          HISTORY # after bracketing: f(a) = 1.189, f(beta) = 1.188, f(b) = 1.189         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.188   8       3.383                                           HISTORY # 2     1.187   8.709   1.855                                           HISTORY # 3     1.187   9.146   1.146                                           HISTORY # 4     1.187   9.417   0.7085                                          HISTORY # 5     1.187   9.584   0.4379                                          HISTORY # 6     1.187   9.688   0.2706                                          HISTORY # 7     1.187   9.752   0.1673                                          HISTORY # 8     1.187   9.791   0.1034                                          HISTORY # 9     1.187   9.815   0.06389                                         HISTORY # Converged to minimum: chi^2 = 1.187 at beta = 9.815                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.815               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.187   0.0417                                          HISTORY # 1     4       1.177   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.852, beta = 9.815, b = 10.8                      HISTORY # after checking limits: a = 4.36, beta = 5.981, b = 7.603              HISTORY # starting values: f(a) = 1.172, f(beta) = 1.168, f(b) = 1.171          HISTORY # after bracketing: f(a) = 1.172, f(beta) = 1.168, f(b) = 1.171         HISTORY # Setting limits: 4.36 <= beta <= 7.603                                 HISTORY # Starting with beta = 5.981                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.168   5.981   2.24                                            HISTORY # 2     1.168   5.981   1.238                                           HISTORY # 3     1.168   5.981   0.8557                                          HISTORY # 4     1.168   5.981   0.473                                           HISTORY # 5     1.168   5.891   0.2365                                          HISTORY # 6     1.168   5.893   0.09034                                         HISTORY # Converged to minimum: chi^2 = 1.168 at beta = 5.893                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 0.75 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               30.025 / AB magnitude                                   MAG_ERR =                0.173 / AB magnitude errorú≤Úûç2>ﬁê“t
◊ıæ“•e›+œVøﬂ*¯)·`?<x∆Øˆ˘?1¯Õ2()	ø6U«
¨‘g?N∆8	£î?LèÔ£bœ        ø>a‚˜ß¨‚?9w¨GÁ¿?EÚÄ÷º                ?P[yøöe∏Y"Õ                        ø ¶Œà∏Ä                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        