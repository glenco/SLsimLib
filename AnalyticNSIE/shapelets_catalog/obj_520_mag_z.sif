SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.60661641624097 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12346286223812 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  520 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4024. / min(X) in image pixels                         XMAX    =                4070. / max(X) in image pixels                         YMIN    =                2016. / min(Y) in image pixels                         YMAX    =                2062. / min(Y) in image pixels                         CENTROID=   (4049.71, 2040.61) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 520 found in the area (4036/2029) to (4057/2049)    HISTORY # Extending the area around object to (4024/2016) to (4070/2062)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.233624, Centroid = (4049.71/2040.61) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.493, f(beta) = 2.418, f(b) = 4.674          HISTORY # after bracketing: f(a) = 2.493, f(beta) = 2.418, f(b) = 4.674         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     2.418   5       6.044                                           HISTORY # 2     1.526   3.421   4.134                                           HISTORY # 3     1.239   2.445   2.555                                           HISTORY # 4     1.236   1.842   1.579                                           HISTORY # 5     1.218   2.131   0.6031                                          HISTORY # 6     1.218   2.131   0.2904                                          HISTORY # 7     1.218   2.131   0.1118                                          HISTORY # 8     1.218   2.131   0.04362                                         HISTORY # Converged to minimum: chi^2 = 1.218 at beta = 2.131                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.131               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.218   0.03079                                         HISTORY # 1     4       1.153   0.03085                                         HISTORY # 2     6       1.133   0.03095                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.705, beta = 2.131, b = 2.344                     HISTORY # after checking limits: a = 1.705, beta = 2.131, b = 2.344             HISTORY # starting values: f(a) = 1.157, f(beta) = 1.133, f(b) = 1.127          HISTORY # after bracketing: f(a) = 1.133, f(beta) = 1.127, f(b) = 1.176         HISTORY # Setting limits: 2.131 <= beta <= 3.516                                HISTORY # Starting with beta = 2.344                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   2.792   1.172                                           HISTORY # 2     1.123   2.606   0.4477                                          HISTORY # 3     1.123   2.607   0.186                                           HISTORY # 4     1.123   2.607   0.07165                                         HISTORY # 5     1.123   2.607   0.02798                                         HISTORY # Converged to minimum: chi^2 = 1.123 at beta = 2.607                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.14 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               27.119 / AB magnitude                                   MAG_ERR =                 0.02 / AB magnitude errorù6M]qmjøC+”e˜\óøk£(ux≥âøIN_Ú˘Q¨?f¿˙Ózø2ÒÊ°C’øJÍ»Ö“ê†ø+{M~Pê‰?Zf[q≤Ì?ÿÈƒ€X??ÉûËRSªøM0ï»	s?PÆ38“        øhC‘ ÃW?GX!ú•*O?`©«^è]gøE~:¬◊fü?0øØO∫}                ø>´√›=KøHı¥zmßø?k:N>Î?CÚy⁄⁄                        ?_÷«qÑ%%ø6èn^˙ø˘∆æ≠e‰                                øPzƒƒ˝Y?#KöbD™                                        ø>Åñ‘'ZG                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        