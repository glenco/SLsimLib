SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.62133569066162 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.15248691785331 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4210 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1775. / min(X) in image pixels                         XMAX    =                1817. / max(X) in image pixels                         YMIN    =                4792. / min(Y) in image pixels                         YMAX    =                4834. / min(Y) in image pixels                         CENTROID=   (1794.97, 4810.38) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4210 found in the area (1790/4804) to (1802/4821)   HISTORY # Extending the area around object to (1775/4792) to (1817/4834)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0994771, Centroid = (1794.97/4810.38)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.381, f(beta) = 1.819, f(b) = 2.475          HISTORY # after bracketing: f(a) = 1.819, f(beta) = 1.381, f(b) = 1.819         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.298   2.445   4.134                                           HISTORY # 2     1.233   1.867   1.579                                           HISTORY # 3     1.229   1.814   1.001                                           HISTORY # 4     1.218   1.452   0.9478                                          HISTORY # 5     1.218   1.506   0.362                                           HISTORY # 6     1.218   1.506   0.1715                                          HISTORY # 7     1.218   1.536   0.1177                                          HISTORY # 8     1.217   1.525   0.03081                                         HISTORY # Converged to minimum: chi^2 = 1.217 at beta = 1.525                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.525               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.217   0.03373                                         HISTORY # 1     4       1.154   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.22, beta = 1.525, b = 1.678                      HISTORY # after checking limits: a = 1.22, beta = 1.525, b = 1.678              HISTORY # starting values: f(a) = 1.181, f(beta) = 1.154, f(b) = 1.153          HISTORY # after bracketing: f(a) = 1.154, f(beta) = 1.153, f(b) = 1.239         HISTORY # Setting limits: 1.525 <= beta <= 2.517                                HISTORY # Starting with beta = 1.678                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.153   1.678   0.4729                                          HISTORY # 2     1.153   1.678   0.2749                                          HISTORY # 3     1.152   1.619   0.1525                                          HISTORY # 4     1.152   1.621   0.05826                                         HISTORY # 5     1.152   1.621   0.0234                                          HISTORY # Converged to minimum: chi^2 = 1.152 at beta = 1.621                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.58 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.101 / AB magnitude                                   MAG_ERR =                0.036 / AB magnitude erroréıé	5™æÁR‰~(HøCÇZ3€∆?@º¶~ l¢?`<3éW¬øIÓ»Ωâ©≤?Q◊∆<mÕ'?Q;Z´‡ø>ó†π˝        ?Ab1ˇ)cã?)I_eà]??Vπ‹AÁ¿                ?O¡è«ı–?LeΩ(04                        ?Qû∏ *ôA                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        