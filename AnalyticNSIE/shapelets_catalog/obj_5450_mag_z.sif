SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.84903966756747 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10653994885649 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5450 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                9003. / min(X) in image pixels                         XMAX    =                9031. / max(X) in image pixels                         YMIN    =                5400. / min(Y) in image pixels                         YMAX    =                5428. / min(Y) in image pixels                         CENTROID=   (9017.07, 5414.07) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5450 found in the area (9015/5412) to (9019/5416)   HISTORY # Extending the area around object to (9003/5400) to (9031/5428)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00792092, Centroid = (9017.07/5414.07HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.125, f(beta) = 1.135, f(b) = 1.136          HISTORY # after bracketing: f(a) = 1.135, f(beta) = 1.125, f(b) = 1.135         HISTORY # Setting limits: 0.836 <= beta <= 3                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.125   0.866   0.8451                                          HISTORY # 2     1.125   0.866   0.3413                                          HISTORY # 3     1.124   0.9849  0.3113                                          HISTORY # 4     1.124   0.9849  0.1924                                          HISTORY # 5     1.124   0.9849  0.1189                                          HISTORY # 6     1.124   0.9849  0.0735                                          HISTORY # 7     1.124   0.9676  0.04542                                         HISTORY # Converged to minimum: chi^2 = 1.124 at beta = 0.9676                  HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 0.9676              HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.124   0.0507                                          HISTORY # 1     4       1.129   0.051                                           HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 0.7741, beta = 0.9676, b = 1.064                   HISTORY # after checking limits: a = 1.118, beta = 2.404, b = 3.69              HISTORY # starting values: f(a) = 1.126, f(beta) = 1.126, f(b) = 1.128          HISTORY # after bracketing: f(a) = 1.126, f(beta) = 1.126, f(b) = 1.126         HISTORY # Setting limits: 1.108 <= beta <= 2.404                                HISTORY # Starting with beta = 1.118                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.112   1.609   1.286                                           HISTORY # 2     1.107   1.913   0.7946                                          HISTORY # 3     1.107   1.913   0.4911                                          HISTORY # 4     1.107   1.797   0.3035                                          HISTORY # 5     1.107   1.848   0.1159                                          HISTORY # 6     1.107   1.849   0.06421                                         HISTORY # 7     1.107   1.849   0.0006412                                       HISTORY # Converged to minimum: chi^2 = 1.107 at beta = 1.849                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.45 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.918 / AB magnitude                                   MAG_ERR =                0.282 / AB magnitude error¢∫≈ø(ö
xc?:øæÈ~ø3·±≥›møBU˜◊z?e
>˛∏ø&‘AaüÕ¿øC‡izÛE?%ëË/hÏ        øFª¶ø6' Öy9?Gjw_Ï                æ„RÉœEo±?F!≠tè√y                        ?C⁄ê¢kÛü                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        