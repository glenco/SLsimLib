SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.45022195295416 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07680808683635 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1340 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5402. / min(X) in image pixels                         XMAX    =                5434. / max(X) in image pixels                         YMIN    =                2976. / min(Y) in image pixels                         YMAX    =                3008. / min(Y) in image pixels                         CENTROID=   (5417.06, 2991.49) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1340 found in the area (5415/2988) to (5420/2995)   HISTORY # Extending the area around object to (5402/2976) to (5434/3008)        HISTORY # Object 1269 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0121573, Centroid = (5417.06/2991.49)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.1, f(beta) = 1.096, f(b) = 1.12             HISTORY # after bracketing: f(a) = 1.1, f(beta) = 1.096, f(b) = 1.12            HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.096   4       4.662                                           HISTORY # 2     1.089   2.803   3.134                                           HISTORY # 3     1.088   2.063   1.937                                           HISTORY # 4     1.087   1.943   1.197                                           HISTORY # 5     1.086   1.531   1.077                                           HISTORY # 6     1.086   1.531   0.6653                                          HISTORY # 7     1.086   1.531   0.4112                                          HISTORY # 8     1.086   1.531   0.2541                                          HISTORY # 9     1.086   1.591   0.1571                                          HISTORY # 10    1.086   1.563   0.05999                                         HISTORY # Converged to minimum: chi^2 = 1.086 at beta = 1.563                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.563               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.086   0.04432                                         HISTORY # 1     4       1.077   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.25, beta = 1.563, b = 1.719                      HISTORY # after checking limits: a = 1.25, beta = 1.563, b = 1.719              HISTORY # starting values: f(a) = 1.077, f(beta) = 1.077, f(b) = 1.079          HISTORY # after bracketing: f(a) = 1.077, f(beta) = 1.077, f(b) = 1.079         HISTORY # Setting limits: 1.25 <= beta <= 1.719                                 HISTORY # Starting with beta = 1.563                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.077   1.444   0.3126                                          HISTORY # 2     1.077   1.449   0.1194                                          HISTORY # 3     1.077   1.45    0.1138                                          HISTORY # 4     1.077   1.45    0.113                                           HISTORY # 5     1.077   1.45    0.0003023                                       HISTORY # Converged to minimum: chi^2 = 1.077 at beta = 1.45                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.46 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.277 / AB magnitude                                   MAG_ERR =                0.166 / AB magnitude erroraÐ]Hwn‘¿5Ñj÷“?9éŸ3…‹ü?"u8yþŠG?Až¡C,†õ¿6oú-ïäz¿4¦…TgöC?E?qÌ2ÕÓ?,e´€•¯        ¾è¡õGÉª8?<¡ªi<Þ?< +œ
­_                ¿4nvÿ}?ü‘e¦l[                        ?85†ƒpõ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        