SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.35866263185126 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11994354338825 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5646 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6627. / min(X) in image pixels                         XMAX    =                6663. / max(X) in image pixels                         YMIN    =                5498. / min(Y) in image pixels                         YMAX    =                5534. / min(Y) in image pixels                         CENTROID=   (6645.14, 5516.96) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5646 found in the area (6640/5510) to (6650/5522)   HISTORY # Extending the area around object to (6627/5498) to (6663/5534)        HISTORY # Object 5631 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0436259, Centroid = (6645.14/5516.96)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.187, f(beta) = 1.263, f(b) = 1.512          HISTORY # after bracketing: f(a) = 1.263, f(beta) = 1.187, f(b) = 1.263         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.152   2.063   3.134                                           HISTORY # 2     1.147   1.805   1.197                                           HISTORY # 3     1.147   1.768   0.9385                                          HISTORY # 4     1.147   1.768   0.3811                                          HISTORY # 5     1.147   1.598   0.3445                                          HISTORY # 6     1.147   1.632   0.1705                                          HISTORY # 7     1.147   1.637   0.136                                           HISTORY # 8     1.147   1.635   0.00515                                         HISTORY # Converged to minimum: chi^2 = 1.147 at beta = 1.635                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.635               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.147   0.03937                                         HISTORY # 1     4       1.128   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.308, beta = 1.635, b = 1.799                     HISTORY # after checking limits: a = 1.308, beta = 1.635, b = 1.799             HISTORY # starting values: f(a) = 1.12, f(beta) = 1.128, f(b) = 1.134           HISTORY # after bracketing: f(a) = 1.128, f(beta) = 1.12, f(b) = 1.128          HISTORY # Setting limits: 1.102 <= beta <= 1.635                                HISTORY # Starting with beta = 1.308                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.12    1.308   0.3315                                          HISTORY # 2     1.12    1.308   0.2038                                          HISTORY # 3     1.12    1.356   0.1249                                          HISTORY # 4     1.12    1.359   0.07721                                         HISTORY # 5     1.12    1.359   0.03114                                         HISTORY # Converged to minimum: chi^2 = 1.12 at beta = 1.359                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.41 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               29.054 / AB magnitude                                   MAG_ERR =                0.065 / AB magnitude error{¡uãÆýv¿!ØšÄìà?CÏÖž ¥š?=€‰ñ)e›?PKÇ†¿ìž*Ì«K?3Ž’û±)s?8x¶`{¾?B©|‹±e¦        ¾Ùž
*ì\·?«;&
?RSkŠÛX                ?7e0;?Â?  Ufªœ‚                        ?A›Z,ÂÈú                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        