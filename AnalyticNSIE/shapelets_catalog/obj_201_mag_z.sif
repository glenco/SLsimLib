SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.63130108912861 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.19336522072788 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  201 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4964. / min(X) in image pixels                         XMAX    =                5006. / max(X) in image pixels                         YMIN    =                1509. / min(Y) in image pixels                         YMAX    =                1551. / min(Y) in image pixels                         CENTROID=   (4986.72, 1530.35) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 201 found in the area (4976/1522) to (4993/1537)    HISTORY # Extending the area around object to (4964/1509) to (5006/1551)        HISTORY # Object 207 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.10805, Centroid = (4986.72/1530.35)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.031, f(beta) = 2.056, f(b) = 3.336          HISTORY # after bracketing: f(a) = 2.056, f(beta) = 2.031, f(b) = 2.056         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.311   2.445   4.134                                           HISTORY # 2     1.3     2.302   1.579                                           HISTORY # 3     1.299   2.27    1.436                                           HISTORY # 4     1.299   2.27    0.5679                                          HISTORY # 5     1.294   2.063   0.5363                                          HISTORY # 6     1.294   2.081   0.2068                                          HISTORY # 7     1.294   2.087   0.1887                                          HISTORY # 8     1.294   2.086   0.005779                                        HISTORY # Converged to minimum: chi^2 = 1.294 at beta = 2.086                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.086               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.294   0.03373                                         HISTORY # 1     4       1.218   0.03382                                         HISTORY # 2     6       1.211   0.03394                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.669, beta = 2.086, b = 2.295                     HISTORY # after checking limits: a = 1.669, beta = 2.086, b = 2.295             HISTORY # starting values: f(a) = 1.224, f(beta) = 1.211, f(b) = 1.202          HISTORY # after bracketing: f(a) = 1.211, f(beta) = 1.202, f(b) = 1.241         HISTORY # Setting limits: 2.086 <= beta <= 3.442                                HISTORY # Starting with beta = 2.295                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.194   2.733   1.147                                           HISTORY # 2     1.193   2.631   0.4383                                          HISTORY # 3     1.193   2.631   0.1031                                          HISTORY # 4     1.193   2.631   0.04017                                         HISTORY # Converged to minimum: chi^2 = 1.193 at beta = 2.631                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 4.45 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               27.478 / AB magnitude                                   MAG_ERR =                0.025 / AB magnitude errorîÿaZöA<?!ÂÊsÆõŸøgàÍı>hÔøæ(ÅöL*?Zê˝¥I~?+ı"j∂∫øÉ#:3MΩø8ÖﬁV[?B'ü¿ ©??»»Íë—Ë?//cﬁ;føE`°mëÚ?KÇ”√Ò        ø_√-tÉ≠ñ?.ÂCùXS?[Û
¸Ù1ø2∏∑ÑŸ‚øKÆ∆rfá                øLí„Ò◊¨V?H ∑ª}søÚVÃ’˘?&∏hÇmv∑                        ?eÔ–æááø@!OÚ",øQKÔiÙ¥                                øWo´0˛-¡øÑyù                                        ?0¸ÕÓ≤vm                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        