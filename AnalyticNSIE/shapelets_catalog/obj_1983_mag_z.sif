SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.90807202607137 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.26425262719489 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1983 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2681. / min(X) in image pixels                         XMAX    =                2715. / max(X) in image pixels                         YMIN    =                3483. / min(Y) in image pixels                         YMAX    =                3517. / min(Y) in image pixels                         CENTROID=   (2696.53, 3499.89) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1983 found in the area (2693/3497) to (2702/3503)   HISTORY # Extending the area around object to (2681/3483) to (2715/3517)        HISTORY # Object 1986 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0172574, Centroid = (2696.53/3499.89)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.281, f(beta) = 1.284, f(b) = 1.294          HISTORY # after bracketing: f(a) = 1.284, f(beta) = 1.281, f(b) = 1.284         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.279   2.063   3.134                                           HISTORY # 2     1.279   2.803   1.937                                           HISTORY # 3     1.279   2.659   0.7398                                          HISTORY # 4     1.279   2.431   0.5955                                          HISTORY # 5     1.279   2.481   0.2274                                          HISTORY # 6     1.279   2.486   0.178                                           HISTORY # 7     1.279   2.485   0.00513                                         HISTORY # Converged to minimum: chi^2 = 1.279 at beta = 2.485                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.485               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.279   0.0417                                          HISTORY # 1     4       1.27    0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.988, beta = 2.485, b = 2.734                     HISTORY # after checking limits: a = 1.988, beta = 2.485, b = 2.734             HISTORY # starting values: f(a) = 1.264, f(beta) = 1.27, f(b) = 1.273           HISTORY # after bracketing: f(a) = 1.274, f(beta) = 1.264, f(b) = 1.27          HISTORY # Setting limits: 1.325 <= beta <= 2.485                                HISTORY # Starting with beta = 1.988                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.264   1.988   0.7502                                          HISTORY # 2     1.264   1.988   0.443                                           HISTORY # 3     1.264   1.892   0.2531                                          HISTORY # 4     1.264   1.91    0.09669                                         HISTORY # 5     1.264   1.908   0.01808                                         HISTORY # Converged to minimum: chi^2 = 1.264 at beta = 1.908                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.47 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.615 / AB magnitude                                   MAG_ERR =                0.162 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?`'^k?4•Ωﬂ1 Ïø)pÛˆ˛?!rJAó|?;Œ(-=≤Œ?>
DÀÆ(º?/c
	`eø'Ÿ „≤í˚?4ﬂÅ/j        >’©•ZHÄ?:ﬂ{hM?Q»äjC¨                ø$ùhıD?B6Ó™                        ?8ˆ&dlæ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        