SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.89755570879161 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11112966066432 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  769 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6367 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7066. / min(X) in image pixels                         XMAX    =                7100. / max(X) in image pixels                         YMIN    =                5862. / min(Y) in image pixels                         YMAX    =                5896. / min(Y) in image pixels                         CENTROID=   (7082.35, 5878.63) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6367 found in the area (7078/5875) to (7087/5882)   HISTORY # Extending the area around object to (7066/5862) to (7100/5896)        HISTORY # Object 6235 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0226777, Centroid = (7082.35/5878.63)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.151, f(beta) = 1.142, f(b) = 1.15           HISTORY # after bracketing: f(a) = 1.151, f(beta) = 1.142, f(b) = 1.15          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.142   4       4.662                                           HISTORY # 2     1.142   4       2.725                                           HISTORY # 3     1.142   4       1.781                                           HISTORY # 4     1.142   3.543   1.197                                           HISTORY # 5     1.142   3.658   0.4572                                          HISTORY # 6     1.142   3.66    0.3421                                          HISTORY # 7     1.142   3.66    0.132                                           HISTORY # 8     1.142   3.66    0.05178                                         HISTORY # Converged to minimum: chi^2 = 1.142 at beta = 3.66                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.66                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.142   0.0417                                          HISTORY # 1     4       1.124   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.928, beta = 3.66, b = 4.026                      HISTORY # after checking limits: a = 2.928, beta = 3.66, b = 4.026              HISTORY # starting values: f(a) = 1.134, f(beta) = 1.124, f(b) = 1.118          HISTORY # after bracketing: f(a) = 1.124, f(beta) = 1.118, f(b) = 1.119         HISTORY # Setting limits: 3.66 <= beta <= 6.039                                 HISTORY # Starting with beta = 4.026                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.111   4.795   2.013                                           HISTORY # 2     1.111   4.901   1.244                                           HISTORY # 3     1.111   4.896   0.1058                                          HISTORY # 4     1.111   4.898   0.004779                                        HISTORY # Converged to minimum: chi^2 = 1.111 at beta = 4.898                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.73 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               30.299 / AB magnitude                                   MAG_ERR =                0.157 / AB magnitude errorÀÈDÆ¨? ±ØKâ¦	?9…}É«Óf¿H—'Ôxº?>X¸Õ¦"?9êDâÐ•î¿Ih3U¯*?4ß/g´ðø?@ÁC2Ä—…        ¿BX^²áÕ¾ÕÀî+q/Ž?W·—Ë²S                ? æD	Í:¿hšæŸ^                        ?"÷w“q £                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        