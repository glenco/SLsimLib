SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.07967138384357 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18084584997195 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1332 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7453. / min(X) in image pixels                         XMAX    =                7505. / max(X) in image pixels                         YMIN    =                3000. / min(Y) in image pixels                         YMAX    =                3052. / min(Y) in image pixels                         CENTROID=   (7478.88, 3024.95) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1332 found in the area (7466/3012) to (7492/3039)   HISTORY # Extending the area around object to (7453/3000) to (7505/3052)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.350012, Centroid = (7478.88/3024.95) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 3.043, f(beta) = 1.68, f(b) = 2.861           HISTORY # after bracketing: f(a) = 3.043, f(beta) = 1.68, f(b) = 2.861          HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.68    6       7.426                                           HISTORY # 2     1.343   4.039   5.134                                           HISTORY # 3     1.292   2.827   3.173                                           HISTORY # 4     1.285   2.925   1.212                                           HISTORY # 5     1.284   3.35    1.114                                           HISTORY # 6     1.28    3.151   0.4256                                          HISTORY # 7     1.28    3.151   0.2277                                          HISTORY # 8     1.28    3.151   0.08818                                         HISTORY # Converged to minimum: chi^2 = 1.28 at beta = 3.151                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.151               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.28    0.02723                                         HISTORY # 1     4       1.184   0.02727                                         HISTORY # 2     6       1.181   0.02734                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.52, beta = 3.151, b = 3.466                      HISTORY # after checking limits: a = 2.52, beta = 3.151, b = 3.466              HISTORY # starting values: f(a) = 1.189, f(beta) = 1.181, f(b) = 1.183          HISTORY # after bracketing: f(a) = 1.189, f(beta) = 1.181, f(b) = 1.183         HISTORY # Setting limits: 2.52 <= beta <= 3.466                                 HISTORY # Starting with beta = 3.151                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.181   3.151   0.5557                                          HISTORY # 2     1.181   3.151   0.361                                           HISTORY # 3     1.181   3.059   0.2407                                          HISTORY # 4     1.181   3.082   0.09193                                         HISTORY # 5     1.181   3.08    0.0238                                          HISTORY # Converged to minimum: chi^2 = 1.181 at beta = 3.08                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.33 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =                26.75 / AB magnitude                                   MAG_ERR =                0.019 / AB magnitude errorõm-¨ƒÆØ?DõE˚q?jßuÿ{ÒyøXÈgR3Kå?ZˇgÎ◊ø6Õ≤0ˆFæ⁄ºÏ‡‘çmø@r“Z˙xI?vË«G®AG?@à9:«u}?J‰›ŸàEøEúGD—?23/ÜÙ Œ        øY˜xt3!p?Hˆ§˝€ã?kõôÃm1øAûµiÈﬁ?*yàºÒÀõ                ?QÛs2˝ﬂ]øR>†¨òÔø*ïQB¡äÂ>‹£ES™@∏                        ?Z·&˘"ûøóã¯°∫ø5¡òπ2k%                                ø)–;
[•∏?LﬁK®t˜-                                        ?(Å©ÃD                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        