SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      2.8376625567394 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07952144829635 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  323 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4251. / min(X) in image pixels                         XMAX    =                4281. / max(X) in image pixels                         YMIN    =                1702. / min(Y) in image pixels                         YMAX    =                1732. / min(Y) in image pixels                         CENTROID=   (4266.32, 1717.08) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 323 found in the area (4263/1714) to (4269/1720)    HISTORY # Extending the area around object to (4251/1702) to (4281/1732)        HISTORY # Object 322 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0119893, Centroid = (4266.32/1717.08)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.142, f(beta) = 1.106, f(b) = 1.123          HISTORY # after bracketing: f(a) = 1.142, f(beta) = 1.106, f(b) = 1.123         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.106   3       3.28                                            HISTORY # 2     1.102   2.185   2.134                                           HISTORY # 3     1.101   1.681   1.319                                           HISTORY # 4     1.1     1.861   0.5038                                          HISTORY # 5     1.1     1.915   0.3242                                          HISTORY # 6     1.1     1.9     0.05445                                         HISTORY # Converged to minimum: chi^2 = 1.1 at beta = 1.9                       HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.9                 HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.1     0.0473                                          HISTORY # 1     4       1.095   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.52, beta = 1.9, b = 2.09                         HISTORY # after checking limits: a = 1.52, beta = 1.9, b = 2.09                 HISTORY # starting values: f(a) = 1.103, f(beta) = 1.095, f(b) = 1.092          HISTORY # after bracketing: f(a) = 1.092, f(beta) = 1.082, f(b) = 1.102         HISTORY # Setting limits: 2.09 <= beta <= 4.702                                 HISTORY # Starting with beta = 3.134                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.082   3.134   1.643                                           HISTORY # 2     1.08    2.735   1.045                                           HISTORY # 3     1.08    2.828   0.3991                                          HISTORY # 4     1.08    2.845   0.3068                                          HISTORY # 5     1.08    2.838   0.01782                                         HISTORY # Converged to minimum: chi^2 = 1.08 at beta = 2.838                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.87 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.937 / AB magnitude                                   MAG_ERR =                 0.14 / AB magnitude errore⁄∂`yfJø B
1Zÿèø=ûµS?PJ[ôÂtø;ã(>m=¡ø2IJ’™ÚI?B£!Ãø5¿3”HÂ?≠†b‡vR        ø@j)∏v"?L§Zõ›ÊY?@h±⁄3#I                ø'}¿@Ú“øç‚8Í\ò                        ?d\ÎM,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        