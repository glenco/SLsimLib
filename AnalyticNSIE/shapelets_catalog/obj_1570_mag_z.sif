SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      1.8565146733442 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1026113853093 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1570 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5515. / min(X) in image pixels                         XMAX    =                5545. / max(X) in image pixels                         YMIN    =                3164. / min(Y) in image pixels                         YMAX    =                3194. / min(Y) in image pixels                         CENTROID=   (5530.01, 3178.56) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1570 found in the area (5528/3176) to (5532/3182)   HISTORY # Extending the area around object to (5515/3164) to (5545/3194)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00838143, Centroid = (5530.01/3178.56HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.116, f(beta) = 1.118, f(b) = 1.125          HISTORY # after bracketing: f(a) = 1.118, f(beta) = 1.116, f(b) = 1.118         HISTORY # Setting limits: 0.836 <= beta <= 3                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.109   1.681   2.134                                           HISTORY # 2     1.109   1.71    1.319                                           HISTORY # 3     1.109   1.71    0.5218                                          HISTORY # 4     1.109   1.739   0.4926                                          HISTORY # 5     1.109   1.916   0.4641                                          HISTORY # 6     1.109   1.879   0.1773                                          HISTORY # 7     1.109   1.879   0.0909                                          HISTORY # 8     1.109   1.857   0.05338                                         HISTORY # Converged to minimum: chi^2 = 1.109 at beta = 1.857                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.857               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.109   0.0473                                          HISTORY # 1     4       1.103   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.485, beta = 1.857, b = 2.042                     HISTORY # after checking limits: a = 1.485, beta = 1.857, b = 2.042             HISTORY # starting values: f(a) = 1.107, f(beta) = 1.103, f(b) = 1.103          HISTORY # after bracketing: f(a) = 1.107, f(beta) = 1.103, f(b) = 1.103         HISTORY # Setting limits: 1.485 <= beta <= 2.042                                HISTORY # Starting with beta = 1.857                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.103   1.857   0.3275                                          HISTORY # 2     1.103   1.857   0.2127                                          HISTORY # 3     1.103   1.857   0.1251                                          HISTORY # 4     1.103   1.857   0.08126                                         HISTORY # 5     1.103   1.857   0.04778                                         HISTORY # 6     1.103   1.857   0.03104                                         HISTORY # Converged to minimum: chi^2 = 1.103 at beta = 1.857                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.15 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.638 / AB magnitude                                   MAG_ERR =                0.198 / AB magnitude error‘|tj¿9Ö§)“E¾Ï`ôØ¨›ï¾åŽ=(Î¸ø?;á{ÜŸ#¿!}êbñ¿ÿAÖä€?94.+ªÓ¿0ñ:íÇ•ÿ        ¿7îÿµç›‹?(öçý«ö?C2H„?¼†                ?&[Êµ‡´M¿=À#x{y                        ¿5¹`6×Þ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        