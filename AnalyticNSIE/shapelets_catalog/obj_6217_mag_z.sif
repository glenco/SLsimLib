SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.83580035332134 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16768858152429 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6217 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2217. / min(X) in image pixels                         XMAX    =                2259. / max(X) in image pixels                         YMIN    =                5798. / min(Y) in image pixels                         YMAX    =                5840. / min(Y) in image pixels                         CENTROID=   (2238.53, 5819.15) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6217 found in the area (2229/5813) to (2246/5825)   HISTORY # Extending the area around object to (2217/5798) to (2259/5840)        HISTORY # Object 6233 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0858005, Centroid = (2238.53/5819.15)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.388, f(beta) = 1.525, f(b) = 1.94           HISTORY # after bracketing: f(a) = 1.525, f(beta) = 1.388, f(b) = 1.525         HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.206   2.445   4.134                                           HISTORY # 2     1.196   2.2     1.579                                           HISTORY # 3     1.195   2.151   1.334                                           HISTORY # 4     1.195   2.151   0.5397                                          HISTORY # 5     1.192   1.964   0.4909                                          HISTORY # 6     1.192   1.9     0.3034                                          HISTORY # 7     1.192   1.921   0.06384                                         HISTORY # Converged to minimum: chi^2 = 1.192 at beta = 1.921                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.921               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.192   0.03373                                         HISTORY # 1     4       1.168   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.537, beta = 1.921, b = 2.113                     HISTORY # after checking limits: a = 1.537, beta = 1.921, b = 2.113             HISTORY # starting values: f(a) = 1.173, f(beta) = 1.168, f(b) = 1.171          HISTORY # after bracketing: f(a) = 1.173, f(beta) = 1.168, f(b) = 1.171         HISTORY # Setting limits: 1.537 <= beta <= 2.113                                HISTORY # Starting with beta = 1.921                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.168   1.775   0.3843                                          HISTORY # 2     1.168   1.836   0.1468                                          HISTORY # 3     1.168   1.836   0.0618                                          HISTORY # 4     1.168   1.836   0.02397                                         HISTORY # Converged to minimum: chi^2 = 1.168 at beta = 1.836                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.95 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.218 / AB magnitude                                   MAG_ERR =                0.041 / AB magnitude errorâÆ¸º]?KsAâKsøJÛ(ÏÛdøêf¯%Ú?GG›µtÙÈøBÈó±%?5!ik„±?@)w<[?1@óEç8B        ?RßMÑ?º‰ø=+H¨>8?KùE5ñ                ?5¿Nƒ´2æ?P◊QÃßí`                        ?Sø~“5                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        