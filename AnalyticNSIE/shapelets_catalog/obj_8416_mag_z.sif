SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.02511690175068 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1519561398998 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8416 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5958. / min(X) in image pixels                         XMAX    =                5992. / max(X) in image pixels                         YMIN    =                7240. / min(Y) in image pixels                         YMAX    =                7274. / min(Y) in image pixels                         CENTROID=   (5974.83, 7255.97) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8416 found in the area (5970/7252) to (5980/7261)   HISTORY # Extending the area around object to (5958/7240) to (5992/7274)        HISTORY # Object 8355 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0266429, Centroid = (5974.83/7255.97)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.188, f(beta) = 1.167, f(b) = 1.156          HISTORY # after bracketing: f(a) = 1.167, f(beta) = 1.156, f(b) = 1.167         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.156   8       3.383                                           HISTORY # 2     1.156   8.709   1.855                                           HISTORY # 3     1.156   8.86    1.146                                           HISTORY # 4     1.156   9.24    0.9946                                          HISTORY # 5     1.156   9.475   0.6147                                          HISTORY # 6     1.156   9.62    0.3799                                          HISTORY # 7     1.156   9.71    0.2348                                          HISTORY # 8     1.156   9.765   0.1451                                          HISTORY # 9     1.156   9.8     0.08968                                         HISTORY # 10    1.156   9.821   0.05543                                         HISTORY # Converged to minimum: chi^2 = 1.156 at beta = 9.821                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.821               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.156   0.0417                                          HISTORY # 1     4       1.161   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.857, beta = 9.821, b = 10.8                      HISTORY # after checking limits: a = 4.36, beta = 5.981, b = 7.603              HISTORY # starting values: f(a) = 1.156, f(beta) = 1.156, f(b) = 1.162          HISTORY # after bracketing: f(a) = 1.165, f(beta) = 1.156, f(b) = 1.156         HISTORY # Setting limits: 2.907 <= beta <= 5.981                                HISTORY # Starting with beta = 4.36                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.152   4.98    1.621                                           HISTORY # 2     1.152   4.98    0.7385                                          HISTORY # 3     1.152   4.98    0.3558                                          HISTORY # 4     1.152   4.98    0.2096                                          HISTORY # 5     1.152   5.025   0.1193                                          HISTORY # Converged to minimum: chi^2 = 1.152 at beta = 5.025                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.29 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               30.125 / AB magnitude                                   MAG_ERR =                0.196 / AB magnitude errorž”Í¦¿
Gð´UŽÑ¿:ZBj}à¿-uKŠiÊš>øˆ„ëV[C¿3˜4`{?B92…v.¬¿¥òöª%n?aè´Á­¡        ?A´¼-`G{?9ReKk¶??Žm4;¸                ?@íóxÅr¿!
‡è¼šž                        ?Q¼5Éáîå                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        