SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.49002565119634 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12959192398246 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  769 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4875 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8154. / min(X) in image pixels                         XMAX    =                8196. / max(X) in image pixels                         YMIN    =                5132. / min(Y) in image pixels                         YMAX    =                5174. / min(Y) in image pixels                         CENTROID=   (8173.35, 5153.04) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4875 found in the area (8166/5144) to (8184/5162)   HISTORY # Extending the area around object to (8154/5132) to (8196/5174)        HISTORY # Object 4814 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0701009, Centroid = (8173.35/5153.04)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.28, f(beta) = 1.143, f(b) = 1.181           HISTORY # after bracketing: f(a) = 1.28, f(beta) = 1.143, f(b) = 1.181          HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.143   5       6.044                                           HISTORY # 2     1.141   3.421   4.134                                           HISTORY # 3     1.14    4.078   1.579                                           HISTORY # 4     1.14    4.078   0.6715                                          HISTORY # 5     1.14    4.078   0.2656                                          HISTORY # 6     1.14    4.078   0.2509                                          HISTORY # 7     1.139   3.982   0.2509                                          HISTORY # 8     1.139   3.982   0.09584                                         HISTORY # Converged to minimum: chi^2 = 1.139 at beta = 3.982                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.982               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.139   0.03373                                         HISTORY # 1     4       1.13    0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.186, beta = 3.982, b = 4.38                      HISTORY # after checking limits: a = 3.186, beta = 3.982, b = 4.38              HISTORY # starting values: f(a) = 1.13, f(beta) = 1.13, f(b) = 1.131            HISTORY # after bracketing: f(a) = 1.149, f(beta) = 1.13, f(b) = 1.13           HISTORY # Setting limits: 2.124 <= beta <= 3.982                                HISTORY # Starting with beta = 3.186                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.13    3.186   1.202                                           HISTORY # 2     1.13    3.49    0.7965                                          HISTORY # 3     1.13    3.49    0.521                                           HISTORY # 4     1.13    3.49    0.2168                                          HISTORY # 5     1.13    3.49    0.188                                           HISTORY # 6     1.13    3.49    0.07182                                         HISTORY # Converged to minimum: chi^2 = 1.13 at beta = 3.49                     HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.68 / photometric redshift                           SED_TYPE=                   14 / SED template                                   MAG     =               28.429 / AB magnitude                                   MAG_ERR =                0.064 / AB magnitude erroru9∂∂y±høıﬁ¢‰¿Ú?D ß¿gï?.%-9™à?0Ç>?@Ï"CµÍ™?Pq√M∏ø#5#AÁßÔ?E¡§ùàÈ        ?∏{™Z√Åø4t–Ó
Ñ?P|JΩ„…e                ø,Cå¥wø+îûÒ…ò                        ?@˜∆ÂzÍ$                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        