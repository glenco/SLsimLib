SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.71780514564669 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11325013941569 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7527 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7140. / min(X) in image pixels                         XMAX    =                7170. / max(X) in image pixels                         YMIN    =                7816. / min(Y) in image pixels                         YMAX    =                7846. / min(Y) in image pixels                         CENTROID=   (7155.39, 7831.17) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7527 found in the area (7152/7829) to (7158/7833)   HISTORY # Extending the area around object to (7140/7816) to (7170/7846)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0103081, Centroid = (7155.39/7831.17)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.137, f(beta) = 1.124, f(b) = 1.114          HISTORY # after bracketing: f(a) = 1.124, f(beta) = 1.114, f(b) = 1.124         HISTORY # Setting limits: 3 <= beta <= 8.69                                     HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.114   6       3.836                                           HISTORY # 2     1.114   6       2.173                                           HISTORY # 3     1.114   6       1.465                                           HISTORY # 4     1.114   6       0.8302                                          HISTORY # 5     1.114   6       0.5597                                          HISTORY # 6     1.114   6       0.3171                                          HISTORY # 7     1.114   6       0.2138                                          HISTORY # 8     1.114   6.057   0.1499                                          HISTORY # 9     1.114   6.032   0.05727                                         HISTORY # Converged to minimum: chi^2 = 1.114 at beta = 6.032                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.032               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.114   0.0473                                          HISTORY # 1     4       1.114   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.826, beta = 6.032, b = 6.636                     HISTORY # after checking limits: a = 4.826, beta = 6.032, b = 6.636             HISTORY # starting values: f(a) = 1.114, f(beta) = 1.114, f(b) = 1.113          HISTORY # after bracketing: f(a) = 1.114, f(beta) = 1.113, f(b) = 1.114         HISTORY # Setting limits: 6.032 <= beta <= 6.769                                HISTORY # Starting with beta = 6.636                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.113   6.636   0.3632                                          HISTORY # 2     1.113   6.636   0.2208                                          HISTORY # 3     1.113   6.686   0.1328                                          HISTORY # 4     1.113   6.718   0.08207                                         HISTORY # Converged to minimum: chi^2 = 1.113 at beta = 6.718                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  3.7 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.639 / AB magnitude                                   MAG_ERR =                0.229 / AB magnitude error›HÈ
ð¿­°™$Î]¿Iôƒëç‡?"®)Âá?2«`…„0k¿8í7£è¹¿G‹íòý`?ž"Ì$Õ¿AóØÅ7P´        ¿Kýk"÷¿A8ÄI~å¾ÓÇH˜72                ¾õi¹ä?@Ü²iã{C                        ??¤¸ª÷G                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        