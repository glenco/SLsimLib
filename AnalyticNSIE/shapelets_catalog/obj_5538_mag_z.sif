SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.84662372893032 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18196559750692 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5538 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5505. / min(X) in image pixels                         XMAX    =                5559. / max(X) in image pixels                         YMIN    =                5474. / min(Y) in image pixels                         YMAX    =                5528. / min(Y) in image pixels                         CENTROID=   (5531.03, 5501.62) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5538 found in the area (5520/5486) to (5543/5515)   HISTORY # Extending the area around object to (5505/5474) to (5559/5528)        HISTORY # Object 5656 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.124863, Centroid = (5531.03/5501.62) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.35, f(beta) = 1.243, f(b) = 1.312           HISTORY # after bracketing: f(a) = 1.35, f(beta) = 1.243, f(b) = 1.312          HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.243   6       7.426                                           HISTORY # 2     1.229   4.039   5.134                                           HISTORY # 3     1.229   4.039   2.11                                            HISTORY # 4     1.229   4.039   0.898                                           HISTORY # 5     1.229   4.039   0.749                                           HISTORY # 6     1.229   4.039   0.2861                                          HISTORY # 7     1.229   4.039   0.1093                                          HISTORY # Converged to minimum: chi^2 = 1.229 at beta = 4.039                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.039               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.229   0.02622                                         HISTORY # 1     4       1.183   0.02626                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.231, beta = 4.039, b = 4.443                     HISTORY # after checking limits: a = 3.231, beta = 4.039, b = 4.443             HISTORY # starting values: f(a) = 1.189, f(beta) = 1.183, f(b) = 1.187          HISTORY # after bracketing: f(a) = 1.189, f(beta) = 1.183, f(b) = 1.187         HISTORY # Setting limits: 3.231 <= beta <= 4.443                                HISTORY # Starting with beta = 4.039                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.182   3.73    0.8078                                          HISTORY # 2     1.182   3.848   0.3086                                          HISTORY # 3     1.182   3.847   0.1176                                          HISTORY # 4     1.182   3.847   0.04585                                         HISTORY # Converged to minimum: chi^2 = 1.182 at beta = 3.847                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.68 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               27.819 / AB magnitude                                   MAG_ERR =                0.048 / AB magnitude errorT}åvË?DÇÍ†d@k¿AÃ–Üfû?(m£·T?R¶ÒÇjß¿Eý¡ü‡kä¿`/¥9€od?DçËüµ€_¿J('›k‚Š        ?Ñ”0ú×Û¿VÞ°¾ŒC?`…<Ö[/                ?SåaÆ¿K¨^[´Ÿ»                        ?R	ë+ÇÔ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        