SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.12125445472648 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2963360340747 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6237 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4185. / min(X) in image pixels                         XMAX    =                4227. / max(X) in image pixels                         YMIN    =                5822. / min(Y) in image pixels                         YMAX    =                5864. / min(Y) in image pixels                         CENTROID=   (4206.25, 5845.16) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6237 found in the area (4198/5834) to (4214/5852)   HISTORY # Extending the area around object to (4185/5822) to (4227/5864)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.112801, Centroid = (4206.25/5845.16) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.199, f(beta) = 1.438, f(b) = 1.868          HISTORY # after bracketing: f(a) = 2.199, f(beta) = 1.438, f(b) = 1.868         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.438   5       6.044                                           HISTORY # 2     1.363   3.421   4.134                                           HISTORY # 3     1.363   3.421   1.911                                           HISTORY # 4     1.363   3.421   0.935                                           HISTORY # 5     1.363   3.421   0.5622                                          HISTORY # 6     1.363   3.294   0.3318                                          HISTORY # 7     1.363   3.294   0.1782                                          HISTORY # 8     1.363   3.294   0.0999                                          HISTORY # Converged to minimum: chi^2 = 1.363 at beta = 3.294                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.294               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.363   0.03373                                         HISTORY # 1     4       1.307   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.635, beta = 3.294, b = 3.624                     HISTORY # after checking limits: a = 2.635, beta = 3.294, b = 3.624             HISTORY # starting values: f(a) = 1.338, f(beta) = 1.307, f(b) = 1.3            HISTORY # after bracketing: f(a) = 1.307, f(beta) = 1.3, f(b) = 1.311           HISTORY # Setting limits: 3.294 <= beta <= 5.435                                HISTORY # Starting with beta = 3.624                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.297   4.316   1.812                                           HISTORY # 2     1.296   4.142   0.6921                                          HISTORY # 3     1.296   4.142   0.5207                                          HISTORY # 4     1.296   4.142   0.2003                                          HISTORY # 5     1.296   4.142   0.198                                           HISTORY # 6     1.296   4.142   0.07563                                         HISTORY # 7     1.296   4.119   0.07563                                         HISTORY # 8     1.296   4.121   0.02267                                         HISTORY # Converged to minimum: chi^2 = 1.296 at beta = 4.121                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.57 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               27.453 / AB magnitude                                   MAG_ERR =                 0.03 / AB magnitude erroråú´1jø.¢ﬁGÓiøZ}_§Ä∆øF·F=°*	?c¨EvıÜ?»'fÀÓ?!Ô∑ã≥µﬁ?2¸¯iu‚øDAÆŸÇÁ*        øJ8óÁ>˛—øÑBè?]a’ài„                ø1˜Rc	ø9”(íº2                        ?V»Ö.Œ}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        