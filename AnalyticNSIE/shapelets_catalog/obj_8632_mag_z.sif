SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.15793033778166 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18751631376439 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8632 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2504. / min(X) in image pixels                         XMAX    =                2534. / max(X) in image pixels                         YMIN    =                7050. / min(Y) in image pixels                         YMAX    =                7080. / min(Y) in image pixels                         CENTROID=   (2518.63, 7064.38) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8632 found in the area (2516/7062) to (2521/7067)   HISTORY # Extending the area around object to (2504/7050) to (2534/7080)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00766147, Centroid = (2518.63/7064.38HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.192, f(beta) = 1.185, f(b) = 1.2            HISTORY # after bracketing: f(a) = 1.192, f(beta) = 1.185, f(b) = 1.2           HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.185   3       3.28                                            HISTORY # 2     1.185   3       1.961                                           HISTORY # 3     1.185   3       1.253                                           HISTORY # 4     1.185   3       0.749                                           HISTORY # 5     1.185   3.167   0.4377                                          HISTORY # 6     1.185   3.164   0.1672                                          HISTORY # 7     1.185   3.164   0.06559                                         HISTORY # 8     1.185   3.158   0.06279                                         HISTORY # 9     1.185   3.158   0.006737                                        HISTORY # Converged to minimum: chi^2 = 1.185 at beta = 3.158                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.158               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.185   0.0473                                          HISTORY # 1     4       1.188   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.526, beta = 3.158, b = 3.474                     HISTORY # after checking limits: a = 2.526, beta = 3.158, b = 3.474             HISTORY # starting values: f(a) = 1.189, f(beta) = 1.188, f(b) = 1.188          HISTORY # after bracketing: f(a) = 1.189, f(beta) = 1.188, f(b) = 1.188         HISTORY # Setting limits: 2.526 <= beta <= 3.474                                HISTORY # Starting with beta = 3.158                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.188   3.158   0.557                                           HISTORY # 2     1.188   3.158   0.3619                                          HISTORY # 3     1.188   3.158   0.2128                                          HISTORY # 4     1.188   3.158   0.1382                                          HISTORY # 5     1.188   3.158   0.08127                                         HISTORY # 6     1.188   3.158   0.0528                                          HISTORY # Converged to minimum: chi^2 = 1.188 at beta = 3.158                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.74 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =                30.71 / AB magnitude                                   MAG_ERR =                 0.21 / AB magnitude erroræ±Öv>–›ª”†üøR.∆ø—’øãF´ÙAzø,îˆ‹!?-söÇ?Pø02"é†»k?(7ƒÜÒ?2#ò©ñ        øRÚ&”6Aø@{e›‹Œ?2∂≈o‚Àä                ?1èI\rdø5”<eê’ó                        >ı±—2¬ÀΩ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        