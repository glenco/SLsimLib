SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.15633591445658 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14880639493453 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5949 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8458. / min(X) in image pixels                         XMAX    =                8502. / max(X) in image pixels                         YMIN    =                5646. / min(Y) in image pixels                         YMAX    =                5690. / min(Y) in image pixels                         CENTROID=   (8479.84, 5668.17) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5949 found in the area (8470/5662) to (8489/5673)   HISTORY # Extending the area around object to (8458/5646) to (8502/5690)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0485195, Centroid = (8479.84/5668.17)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.211, f(beta) = 1.157, f(b) = 1.19           HISTORY # after bracketing: f(a) = 1.211, f(beta) = 1.157, f(b) = 1.19          HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.157   5       6.044                                           HISTORY # 2     1.155   3.421   4.134                                           HISTORY # 3     1.153   4.04    1.579                                           HISTORY # 4     1.153   4.04    0.6345                                          HISTORY # 5     1.153   4.04    0.2522                                          HISTORY # 6     1.153   4.04    0.2363                                          HISTORY # 7     1.153   3.949   0.2363                                          HISTORY # 8     1.153   3.979   0.09024                                         HISTORY # Converged to minimum: chi^2 = 1.153 at beta = 3.979                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.979               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.153   0.03219                                         HISTORY # 1     4       1.149   0.03227                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.184, beta = 3.979, b = 4.377                     HISTORY # after checking limits: a = 3.184, beta = 3.979, b = 4.377             HISTORY # starting values: f(a) = 1.151, f(beta) = 1.149, f(b) = 1.149          HISTORY # after bracketing: f(a) = 1.151, f(beta) = 1.149, f(b) = 1.149         HISTORY # Setting limits: 3.184 <= beta <= 4.377                                HISTORY # Starting with beta = 3.979                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.149   3.979   0.7019                                          HISTORY # 2     1.149   4.131   0.3979                                          HISTORY # 3     1.149   4.181   0.2459                                          HISTORY # 4     1.149   4.156   0.0497                                          HISTORY # Converged to minimum: chi^2 = 1.149 at beta = 4.156                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                  1.3 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =                29.01 / AB magnitude                                   MAG_ERR =                0.096 / AB magnitude errorj]ÂŒ'!ø"ùn!ÁE≤øW∏?mM`IøC˛˘uÂ¨?3≠•5¶z?à˙C€‘?(ƒ¯ëÿCß?2;FK«üø;-tC‰ÔØ        ?A‰¨ı/rmø=‹öÊÍ‹O?7»"	FÀÉ                >˝ãU˝øxê?3˝ätH”/                        ?<ôõP^eÍ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        