SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.03645295012434 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.01034678458782 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  512 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8971 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                8056. / min(X) in image pixels                         XMAX    =                8086. / max(X) in image pixels                         YMIN    =                6650. / min(Y) in image pixels                         YMAX    =                6680. / min(Y) in image pixels                         CENTROID=   (8070.49, 6664.43) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8971 found in the area (8068/6662) to (8073/6667)   HISTORY # Extending the area around object to (8056/6650) to (8086/6680)        HISTORY # Object 8975 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0075436, Centroid = (8070.49/6664.43)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.034, f(beta) = 1.021, f(b) = 1.044          HISTORY # after bracketing: f(a) = 1.034, f(beta) = 1.021, f(b) = 1.044         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.021   3       3.28                                            HISTORY # 2     1.021   3       1.961                                           HISTORY # 3     1.019   3.438   1.146                                           HISTORY # 4     1.019   3.708   0.7082                                          HISTORY # 5     1.019   3.61    0.2705                                          HISTORY # 6     1.019   3.602   0.172                                           HISTORY # 7     1.019   3.604   0.007513                                        HISTORY # Converged to minimum: chi^2 = 1.019 at beta = 3.604                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.604               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.019   0.0473                                          HISTORY # 1     4       1.012   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.884, beta = 3.604, b = 3.965                     HISTORY # after checking limits: a = 2.884, beta = 3.604, b = 3.965             HISTORY # starting values: f(a) = 1.019, f(beta) = 1.012, f(b) = 1.01           HISTORY # after bracketing: f(a) = 1.012, f(beta) = 1.01, f(b) = 1.018          HISTORY # Setting limits: 3.604 <= beta <= 5.947                                HISTORY # Starting with beta = 3.965                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.01    3.965   1.118                                           HISTORY # 2     1.01    3.965   0.6497                                          HISTORY # 3     1.01    3.965   0.4269                                          HISTORY # 4     1.01    4.075   0.2892                                          HISTORY # 5     1.01    4.041   0.1105                                          HISTORY # 6     1.01    4.037   0.07653                                         HISTORY # 7     1.01    4.036   0.07226                                         HISTORY # 8     1.01    4.036   0.0006833                                       HISTORY # Converged to minimum: chi^2 = 1.01 at beta = 4.036                    HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.31 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.471 / AB magnitude                                   MAG_ERR =                0.189 / AB magnitude error                             END                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ?R-ˆ˜ŽÚ?BGLh§ì?¿S9µ†­r¾¿Ö!8vŒ¿à7¤÷?D­þó¼«Ë¿-™³eúc|>ÉJšLC~
¿8ëSˆ>Nù        ¿GpáâJtÄ¿Qï»€§n?@5ÍWÖy                ?@Í2hÊ.?F²Žföá                        ?6ÙÇ@Ã"\                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        