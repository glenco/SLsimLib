SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.41248971335918 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.0980255319685 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2182 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5830. / min(X) in image pixels                         XMAX    =                5864. / max(X) in image pixels                         YMIN    =                3616. / min(Y) in image pixels                         YMAX    =                3650. / min(Y) in image pixels                         CENTROID=   (5845.73, 3634.14) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2182 found in the area (5842/3628) to (5851/3637)   HISTORY # Extending the area around object to (5830/3616) to (5864/3650)        HISTORY # Object 2204 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0192916, Centroid = (5845.73/3634.14)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.135, f(beta) = 1.11, f(b) = 1.158           HISTORY # after bracketing: f(a) = 1.135, f(beta) = 1.11, f(b) = 1.158          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.11    4       4.662                                           HISTORY # 2     1.108   2.803   3.134                                           HISTORY # 3     1.108   3.099   1.197                                           HISTORY # 4     1.108   3.099   1.036                                           HISTORY # 5     1.108   3.099   0.4788                                          HISTORY # 6     1.108   3.099   0.1346                                          HISTORY # 7     1.108   3.099   0.05142                                         HISTORY # Converged to minimum: chi^2 = 1.108 at beta = 3.099                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.099               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.108   0.0417                                          HISTORY # 1     4       1.104   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.479, beta = 3.099, b = 3.409                     HISTORY # after checking limits: a = 2.479, beta = 3.099, b = 3.409             HISTORY # starting values: f(a) = 1.098, f(beta) = 1.104, f(b) = 1.107          HISTORY # after bracketing: f(a) = 1.107, f(beta) = 1.098, f(b) = 1.104         HISTORY # Setting limits: 1.653 <= beta <= 3.099                                HISTORY # Starting with beta = 2.479                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.098   2.479   0.9355                                          HISTORY # 2     1.098   2.479   0.5524                                          HISTORY # 3     1.098   2.359   0.3157                                          HISTORY # 4     1.098   2.413   0.1206                                          HISTORY # 5     1.098   2.412   0.05416                                         HISTORY # Converged to minimum: chi^2 = 1.098 at beta = 2.412                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.22 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.728 / AB magnitude                                   MAG_ERR =                0.113 / AB magnitude errori\D"ú¸(¿,3
d¿Íü¡¾¥Š¿pUöG–¿0{æP*?1E¨ûë½ï¿%Ê"u(z¿5¶x›Ù˜?"É;X‚ª        ¿¦ÝîMåâ¿@’ü_tÛ´?(¢…K‰¯                ¿8á¶ÿP_À¿0	ê¯H«                        ?McÍ‚›þ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        