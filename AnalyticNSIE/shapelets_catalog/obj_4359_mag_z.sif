SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.98207494751023 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11967373424005 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4359 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6686. / min(X) in image pixels                         XMAX    =                6718. / max(X) in image pixels                         YMIN    =                4847. / min(Y) in image pixels                         YMAX    =                4879. / min(Y) in image pixels                         CENTROID=    (6701.43, 4862.6) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4359 found in the area (6698/4859) to (6705/4867)   HISTORY # Extending the area around object to (6686/4847) to (6718/4879)        HISTORY # Object 4268 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0117906, Centroid = (6701.43/4862.6) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.126, f(beta) = 1.132, f(b) = 1.143          HISTORY # after bracketing: f(a) = 1.132, f(beta) = 1.126, f(b) = 1.132         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.123   2.063   3.134                                           HISTORY # 2     1.123   2.144   1.937                                           HISTORY # 3     1.123   2.144   0.7899                                          HISTORY # 4     1.122   2.415   0.7089                                          HISTORY # 5     1.122   2.582   0.4381                                          HISTORY # 6     1.122   2.582   0.2028                                          HISTORY # 7     1.122   2.582   0.09933                                         HISTORY # 8     1.122   2.558   0.06392                                         HISTORY # Converged to minimum: chi^2 = 1.122 at beta = 2.558                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.558               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.122   0.04432                                         HISTORY # 1     4       1.123   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.046, beta = 2.558, b = 2.814                     HISTORY # after checking limits: a = 2.046, beta = 2.558, b = 2.814             HISTORY # starting values: f(a) = 1.12, f(beta) = 1.123, f(b) = 1.125           HISTORY # after bracketing: f(a) = 1.121, f(beta) = 1.12, f(b) = 1.123          HISTORY # Setting limits: 1.364 <= beta <= 2.558                                HISTORY # Starting with beta = 2.046                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.12    2.046   0.7721                                          HISTORY # 2     1.12    2.046   0.4559                                          HISTORY # 3     1.12    1.947   0.2605                                          HISTORY # 4     1.12    1.978   0.09951                                         HISTORY # 5     1.12    1.981   0.06814                                         HISTORY # 6     1.12    1.982   0.06501                                         HISTORY # 7     1.12    1.982   0.0009366                                       HISTORY # Converged to minimum: chi^2 = 1.12 at beta = 1.982                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.32 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               30.513 / AB magnitude                                   MAG_ERR =                0.187 / AB magnitude error•™G6xò?'•ÒÆÆÔû?"¯EO5 ¿$¬›äQè¿5_r}¼z?!V)I~<¶?:wÆ‹€ù:?A0sTò¿=?@ùŠ‹Bäù        ¿8™ã×{æ,¿7z&f¡í»?¡û 8¯Ô                ?(çkÄÏ<m¿ %keÜûé                        ?*LNzÄ€                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        