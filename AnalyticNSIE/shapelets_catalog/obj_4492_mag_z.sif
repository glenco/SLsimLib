SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.59404715574922 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17623596770595 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4492 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7546. / min(X) in image pixels                         XMAX    =                7602. / max(X) in image pixels                         YMIN    =                4955. / min(Y) in image pixels                         YMAX    =                5011. / min(Y) in image pixels                         CENTROID=   (7573.62, 4978.62) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4492 found in the area (7564/4967) to (7583/4999)   HISTORY # Extending the area around object to (7546/4955) to (7602/5011)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.234577, Centroid = (7573.62/4978.62) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 2.434, f(beta) = 2.201, f(b) = 3.114          HISTORY # after bracketing: f(a) = 2.434, f(beta) = 2.201, f(b) = 3.114         HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     2.201   7       8.808                                           HISTORY # 2     1.777   4.657   6.134                                           HISTORY # 3     1.561   3.209   3.791                                           HISTORY # 4     1.536   2.314   2.343                                           HISTORY # 5     1.529   2.495   0.8949                                          HISTORY # 6     1.529   2.495   0.4534                                          HISTORY # 7     1.528   2.613   0.2729                                          HISTORY # 8     1.528   2.58    0.1188                                          HISTORY # Converged to minimum: chi^2 = 1.528 at beta = 2.58                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.58                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.528   0.02528                                         HISTORY # 1     4       1.226   0.02531                                         HISTORY # 2     6       1.176   0.02537                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.064, beta = 2.58, b = 2.838                      HISTORY # after checking limits: a = 2.064, beta = 2.58, b = 2.838              HISTORY # starting values: f(a) = 1.216, f(beta) = 1.176, f(b) = 1.183          HISTORY # after bracketing: f(a) = 1.216, f(beta) = 1.176, f(b) = 1.183         HISTORY # Setting limits: 2.064 <= beta <= 2.838                                HISTORY # Starting with beta = 2.58                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.176   2.58    0.455                                           HISTORY # 2     1.176   2.58    0.2956                                          HISTORY # 3     1.176   2.58    0.1738                                          HISTORY # 4     1.176   2.58    0.1129                                          HISTORY # 5     1.176   2.58    0.06639                                         HISTORY # 6     1.176   2.594   0.03764                                         HISTORY # Converged to minimum: chi^2 = 1.176 at beta = 2.594                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.02 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               26.907 / AB magnitude                                   MAG_ERR =                 0.02 / AB magnitude erroróbàu¯Ôøg{égO˘Ï?pE|nc5ñ?sNR1AÍ?rpÒ:à´øM—ã…‰| ?Wà‹zLN?4¯PÎ`%øs2©JV“øL∞<>Hø]øÇÇ˜DËøL9Ë>y‰øXÜ√≥∞        øgì£q-£?S≠6jLk'?bGø≠°ê∞øP†ÈÀh?Mïµb¨5                øC=á|"€?\Ï/î[ù?CPb2aöóø(5^”oYM                        ?g;V„⁄øPk¡)Ò7‹øH±òÂﬂ                                ?'Œ‘9äøVj!û{l∫                                        ø.){r`·                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        