SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.81928271945471 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13310259854792 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6750 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3668. / min(X) in image pixels                         XMAX    =                3700. / max(X) in image pixels                         YMIN    =                6067. / min(Y) in image pixels                         YMAX    =                6099. / min(Y) in image pixels                         CENTROID=   (3684.05, 6082.79) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6750 found in the area (3680/6079) to (3688/6086)   HISTORY # Extending the area around object to (3668/6067) to (3700/6099)        HISTORY # Object 6704 nearby, but not overlapping.                              HISTORY # Object 6730 nearby, but not overlapping.                              HISTORY # Object 6607 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0137463, Centroid = (3684.05/6082.79)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.165, f(beta) = 1.135, f(b) = 1.189          HISTORY # after bracketing: f(a) = 1.165, f(beta) = 1.135, f(b) = 1.189         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.135   4       4.662                                           HISTORY # 2     1.135   4       2.725                                           HISTORY # 3     1.134   4.584   1.528                                           HISTORY # 4     1.133   4.367   0.5836                                          HISTORY # 5     1.133   4.354   0.3669                                          HISTORY # 6     1.133   4.358   0.01244                                         HISTORY # Converged to minimum: chi^2 = 1.133 at beta = 4.358                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.358               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.133   0.04432                                         HISTORY # 1     4       1.134   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.486, beta = 4.358, b = 4.794                     HISTORY # after checking limits: a = 3.486, beta = 4.358, b = 4.794             HISTORY # starting values: f(a) = 1.134, f(beta) = 1.134, f(b) = 1.134          HISTORY # after bracketing: f(a) = 1.134, f(beta) = 1.134, f(b) = 1.134         HISTORY # Setting limits: 3.486 <= beta <= 4.794                                HISTORY # Starting with beta = 4.358                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.133   4.025   0.8716                                          HISTORY # 2     1.133   3.819   0.5387                                          HISTORY # 3     1.133   3.819   0.3329                                          HISTORY # 4     1.133   3.819   0.2058                                          HISTORY # 5     1.133   3.819   0.1272                                          HISTORY # 6     1.133   3.819   0.07859                                         HISTORY # Converged to minimum: chi^2 = 1.133 at beta = 3.819                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                  3.5 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               29.895 / AB magnitude                                   MAG_ERR =                0.127 / AB magnitude errora÷˜Õ-µ?0fúZ7¡øQi ËTF“??Xkgõ	?$≥–~«Ôø)Iòd/›F?:∆Öaé∞´øC¿î≈∂—kø
ßœ:|!        øVãÛà>ıæ˚ÎÄô6áø-]3lãß                ø8œzQCèø÷‰Îb°                        ø7[¿F›!u                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        