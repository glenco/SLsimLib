SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.44770089399817 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1531724720094 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9082 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6777. / min(X) in image pixels                         XMAX    =                6821. / max(X) in image pixels                         YMIN    =                6524. / min(Y) in image pixels                         YMAX    =                6568. / min(Y) in image pixels                         CENTROID=   (6799.83, 6545.07) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9082 found in the area (6792/6536) to (6805/6556)   HISTORY # Extending the area around object to (6777/6524) to (6821/6568)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0473068, Centroid = (6799.83/6545.07)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.218, f(beta) = 1.155, f(b) = 1.167          HISTORY # after bracketing: f(a) = 1.218, f(beta) = 1.155, f(b) = 1.167         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.153   6.91    5                                               HISTORY # 2     1.153   6.91    3.09                                            HISTORY # 3     1.153   6.18    1.91                                            HISTORY # 4     1.153   6.512   0.7295                                          HISTORY # 5     1.153   6.526   0.398                                           HISTORY # 6     1.153   6.526   0.161                                           HISTORY # 7     1.153   6.538   0.1465                                          HISTORY # 8     1.153   6.537   0.01206                                         HISTORY # Converged to minimum: chi^2 = 1.153 at beta = 6.537                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.537               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.153   0.03219                                         HISTORY # 1     4       1.153   0.03227                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.23, beta = 6.537, b = 7.191                      HISTORY # after checking limits: a = 5.23, beta = 6.537, b = 7.191              HISTORY # starting values: f(a) = 1.156, f(beta) = 1.153, f(b) = 1.154          HISTORY # after bracketing: f(a) = 1.156, f(beta) = 1.153, f(b) = 1.154         HISTORY # Setting limits: 5.23 <= beta <= 7.191                                 HISTORY # Starting with beta = 6.537                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.153   6.537   1.153                                           HISTORY # 2     1.153   6.537   0.7491                                          HISTORY # 3     1.153   6.537   0.4404                                          HISTORY # 4     1.153   6.537   0.2861                                          HISTORY # 5     1.153   6.464   0.1907                                          HISTORY # 6     1.153   6.448   0.1179                                          HISTORY # Converged to minimum: chi^2 = 1.153 at beta = 6.448                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.07 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =               28.983 / AB magnitude                                   MAG_ERR =                0.093 / AB magnitude errorhâ)yåΩˇ?(Ã°J‰ZøCˆä =?0Ka-ªùaø2Å€{¨˙"æ˘%R?˝8ø,Nm=ó>Çø>›Ákß!F>¸ö.?#Ê        ø^∞Õ†èm?ìÍrDL£?A<›ÔISø                >å≤zRÿ⁄Ñ>Ûn£Õ?@                        ø+·;)≈Xd                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        