SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.07431311674559 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.05377964489943 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1702 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5023. / min(X) in image pixels                         XMAX    =                5069. / max(X) in image pixels                         YMIN    =                3282. / min(Y) in image pixels                         YMAX    =                3328. / min(Y) in image pixels                         CENTROID=   (5045.35, 3307.96) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1702 found in the area (5035/3295) to (5056/3315)   HISTORY # Extending the area around object to (5023/3282) to (5069/3328)        HISTORY # Object 1564 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0787687, Centroid = (5045.35/3307.96)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.192, f(beta) = 1.069, f(b) = 1.085          HISTORY # after bracketing: f(a) = 1.192, f(beta) = 1.069, f(b) = 1.085         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.069   5       6.044                                           HISTORY # 2     1.069   5       3.489                                           HISTORY # 3     1.069   5       2.309                                           HISTORY # 4     1.069   5       1.333                                           HISTORY # 5     1.068   5.279   0.7295                                          HISTORY # 6     1.068   5.28    0.4508                                          HISTORY # 7     1.068   5.28    0.1732                                          HISTORY # 8     1.068   5.346   0.1716                                          HISTORY # 9     1.068   5.324   0.06555                                         HISTORY # Converged to minimum: chi^2 = 1.068 at beta = 5.324                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.324               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.068   0.03079                                         HISTORY # 1     4       1.061   0.03085                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.259, beta = 5.324, b = 5.856                     HISTORY # after checking limits: a = 4.259, beta = 5.324, b = 5.856             HISTORY # starting values: f(a) = 1.054, f(beta) = 1.061, f(b) = 1.064          HISTORY # after bracketing: f(a) = 1.074, f(beta) = 1.054, f(b) = 1.061         HISTORY # Setting limits: 2.839 <= beta <= 5.324                                HISTORY # Starting with beta = 4.259                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.054   4.259   1.607                                           HISTORY # 2     1.054   4.259   0.9489                                          HISTORY # 3     1.054   4.052   0.5422                                          HISTORY # 4     1.054   4.086   0.2071                                          HISTORY # 5     1.054   4.074   0.03432                                         HISTORY # Converged to minimum: chi^2 = 1.054 at beta = 4.074                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.94 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               28.314 / AB magnitude                                   MAG_ERR =                0.065 / AB magnitude errors‰fËÓÚ¿õ¶“ªüÂ¿3~@Ÿóm?$q€«®-?Dž‹zŠR?>ŽôC@Â?D¤–ªPw(?æ¶-$hõ¿[ñ}l        ?U8Ña²œo?+–?Qÿ/Ÿ?E|€K„4                ¿Q•T •ùÇ?!mdRÍº                        ?Sh¯ŒXV                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        