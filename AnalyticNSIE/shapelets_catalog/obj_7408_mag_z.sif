SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.38523166383383 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20401173610035 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7408 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3300. / min(X) in image pixels                         XMAX    =                3346. / max(X) in image pixels                         YMIN    =                6471. / min(Y) in image pixels                         YMAX    =                6517. / min(Y) in image pixels                         CENTROID=   (3320.41, 6496.12) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7408 found in the area (3312/6484) to (3333/6504)   HISTORY # Extending the area around object to (3300/6471) to (3346/6517)        HISTORY # Object 7390 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0794694, Centroid = (3320.41/6496.12)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.486, f(beta) = 1.286, f(b) = 1.435          HISTORY # after bracketing: f(a) = 1.486, f(beta) = 1.286, f(b) = 1.435         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.286   5       6.044                                           HISTORY # 2     1.235   3.421   4.134                                           HISTORY # 3     1.229   2.445   2.555                                           HISTORY # 4     1.226   2.677   0.9759                                          HISTORY # 5     1.226   2.677   0.516                                           HISTORY # 6     1.226   2.785   0.2843                                          HISTORY # 7     1.226   2.769   0.1086                                          HISTORY # 8     1.226   2.775   0.0165                                          HISTORY # Converged to minimum: chi^2 = 1.226 at beta = 2.775                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.775               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.226   0.03079                                         HISTORY # 1     4       1.209   0.03085                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.22, beta = 2.775, b = 3.052                      HISTORY # after checking limits: a = 2.22, beta = 2.775, b = 3.052              HISTORY # starting values: f(a) = 1.22, f(beta) = 1.209, f(b) = 1.206           HISTORY # after bracketing: f(a) = 1.209, f(beta) = 1.206, f(b) = 1.224         HISTORY # Setting limits: 2.775 <= beta <= 4.578                                HISTORY # Starting with beta = 3.052                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.205   3.635   1.526                                           HISTORY # 2     1.204   3.385   0.5829                                          HISTORY # 3     1.204   3.385   0.2505                                          HISTORY # 4     1.204   3.385   0.09601                                         HISTORY # 5     1.204   3.385   0.03699                                         HISTORY # Converged to minimum: chi^2 = 1.204 at beta = 3.385                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.51 / photometric redshift                           SED_TYPE=                   18 / SED template                                   MAG     =                28.17 / AB magnitude                                   MAG_ERR =                0.047 / AB magnitude error“)KÿÔ?E"œÿ¯#ø£r`mÇøKB`2‚…‚ø0T§^ºèø#NN^>X?hè•≥àïiøLèÂ ıø<Ä;í_gõ        øPU"Ÿü‚øHupdNSP?YIilI                ø;A˜Q∫élø:J/                        ?@Úˇ`Uc                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        