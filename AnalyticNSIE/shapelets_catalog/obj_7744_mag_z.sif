SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     7.27557143667881 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.2245731943399 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7744 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5152. / min(X) in image pixels                         XMAX    =                5186. / max(X) in image pixels                         YMIN    =                7654. / min(Y) in image pixels                         YMAX    =                7688. / min(Y) in image pixels                         CENTROID=   (5167.43, 7670.72) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7744 found in the area (5164/7667) to (5173/7675)   HISTORY # Extending the area around object to (5152/7654) to (5186/7688)        HISTORY # Object 8280 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0210019, Centroid = (5167.43/7670.72)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.267, f(beta) = 1.244, f(b) = 1.233          HISTORY # after bracketing: f(a) = 1.244, f(beta) = 1.233, f(b) = 1.244         HISTORY # Setting limits: 4 <= beta <= 9.855                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.226   6.472   4                                               HISTORY # 2     1.226   6.261   2.472                                           HISTORY # 3     1.226   6.261   0.2184                                          HISTORY # 4     1.226   6.261   0.08764                                         HISTORY # 5     1.226   6.261   0.0808                                          HISTORY # 6     1.226   6.291   0.0808                                          HISTORY # 7     1.226   6.291   0.03086                                         HISTORY # Converged to minimum: chi^2 = 1.226 at beta = 6.291                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.291               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.226   0.0417                                          HISTORY # 1     4       1.226   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.033, beta = 6.291, b = 6.92                      HISTORY # after checking limits: a = 5.033, beta = 6.291, b = 6.92              HISTORY # starting values: f(a) = 1.228, f(beta) = 1.226, f(b) = 1.225          HISTORY # after bracketing: f(a) = 1.226, f(beta) = 1.225, f(b) = 1.226         HISTORY # Setting limits: 6.291 <= beta <= 7.666                                HISTORY # Starting with beta = 6.92                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.225   7.205   0.7458                                          HISTORY # 2     1.225   7.281   0.461                                           HISTORY # 3     1.225   7.276   0.07686                                         HISTORY # Converged to minimum: chi^2 = 1.225 at beta = 7.276                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.76 / photometric redshift                           SED_TYPE=                   17 / SED template                                   MAG     =               30.123 / AB magnitude                                   MAG_ERR =                 0.15 / AB magnitude erroröÊ˜™¿5ö¶SJ­T¿aÙt6KÛ?HïZ‡Sƒé¿Åì ¬.¾õ/£:ñ›?0¸ý©]mž?4W®Xm
¿6ê]P,        ¿P;æô…œ?'êªeÂ?5½A*Žž                ¿BŸZLˆÛÝ¿OcÆ
jñ                        ?DÒ<=$£y                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        