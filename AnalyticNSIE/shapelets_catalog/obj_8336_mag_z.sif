SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      1.6221620204175 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16221808794515 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8336 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2454. / min(X) in image pixels                         XMAX    =                2492. / max(X) in image pixels                         YMIN    =                6859. / min(Y) in image pixels                         YMAX    =                6897. / min(Y) in image pixels                         CENTROID=   (2472.59, 6877.53) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8336 found in the area (2467/6871) to (2478/6885)   HISTORY # Extending the area around object to (2454/6859) to (2492/6897)        HISTORY # Object 8210 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.109724, Centroid = (2472.59/6877.53) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.343, f(beta) = 1.742, f(b) = 2.478          HISTORY # after bracketing: f(a) = 1.742, f(beta) = 1.343, f(b) = 1.742         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.287   2.063   3.134                                           HISTORY # 2     1.235   1.599   1.197                                           HISTORY # 3     1.234   1.574   0.7327                                          HISTORY # 4     1.234   1.574   0.2951                                          HISTORY # 5     1.232   1.471   0.2705                                          HISTORY # 6     1.232   1.461   0.1671                                          HISTORY # 7     1.232   1.464   0.009774                                        HISTORY # Converged to minimum: chi^2 = 1.232 at beta = 1.464                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.464               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.232   0.03729                                         HISTORY # 1     4       1.167   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.171, beta = 1.464, b = 1.611                     HISTORY # after checking limits: a = 1.171, beta = 1.464, b = 1.611             HISTORY # starting values: f(a) = 1.199, f(beta) = 1.167, f(b) = 1.162          HISTORY # after bracketing: f(a) = 1.167, f(beta) = 1.162, f(b) = 1.246         HISTORY # Setting limits: 1.464 <= beta <= 2.416                                HISTORY # Starting with beta = 1.611                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.162   1.611   0.454                                           HISTORY # 2     1.162   1.611   0.2639                                          HISTORY # 3     1.162   1.611   0.1734                                          HISTORY # 4     1.162   1.611   0.1008                                          HISTORY # 5     1.162   1.611   0.06624                                         HISTORY # 6     1.162   1.628   0.04488                                         HISTORY # 7     1.162   1.622   0.01714                                         HISTORY # Converged to minimum: chi^2 = 1.162 at beta = 1.622                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.05 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               28.188 / AB magnitude                                   MAG_ERR =                0.039 / AB magnitude errorçmÃ.(?3Ôúqë,?øÏF}L?Rï‘hâr?W,%b8S©øJ¿ÖÔ??TÉ?›>ı{Ú2{9Ê?í>%&5û        øT6∆q© v?2™ÚîòËØ?R#¸åªkM                ?FÏ∏ë\?ñ±Q¶	¶                        ?^Ñ$ÖêôE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        