SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.73590191897604 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.11917222063956 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  769 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8560 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3234. / min(X) in image pixels                         XMAX    =                3268. / max(X) in image pixels                         YMIN    =                7096. / min(Y) in image pixels                         YMAX    =                7130. / min(Y) in image pixels                         CENTROID=    (3251.7, 7112.73) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8560 found in the area (3246/7110) to (3256/7116)   HISTORY # Extending the area around object to (3234/7096) to (3268/7130)        HISTORY # Object 8576 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0249299, Centroid = (3251.7/7112.73) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.133, f(beta) = 1.153, f(b) = 1.19           HISTORY # after bracketing: f(a) = 1.153, f(beta) = 1.133, f(b) = 1.153         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.133   0.866   1.237                                           HISTORY # 2     1.128   1.323   1.197                                           HISTORY # 3     1.128   1.323   0.5554                                          HISTORY # 4     1.128   1.323   0.2728                                          HISTORY # 5     1.128   1.323   0.1649                                          HISTORY # 6     1.128   1.361   0.09818                                         HISTORY # 7     1.128   1.345   0.0375                                          HISTORY # Converged to minimum: chi^2 = 1.128 at beta = 1.345                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.345               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.128   0.0417                                          HISTORY # 1     4       1.124   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.076, beta = 1.345, b = 1.479                     HISTORY # after checking limits: a = 1.118, beta = 1.345, b = 1.479             HISTORY # starting values: f(a) = 1.129, f(beta) = 1.124, f(b) = 1.121          HISTORY # after bracketing: f(a) = 1.124, f(beta) = 1.121, f(b) = 1.126         HISTORY # Setting limits: 1.345 <= beta <= 2.218                                HISTORY # Starting with beta = 1.479                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.119   1.761   0.7395                                          HISTORY # 2     1.119   1.737   0.2825                                          HISTORY # 3     1.119   1.735   0.2585                                          HISTORY # 4     1.119   1.736   0.00264                                         HISTORY # Converged to minimum: chi^2 = 1.119 at beta = 1.736                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.76 / photometric redshift                           SED_TYPE=                   13 / SED template                                   MAG     =               29.899 / AB magnitude                                   MAG_ERR =                0.136 / AB magnitude errori­‡O¼**?ç®ã\à?ƒÜñ?3iÇÈÇi¿áÌ1÷?4 ¨¥!ä¿(Ùv\ '%¿(…\e‘”˜?EX.«Ze        ¿4i`=Ïå¿+e×UÐ?KPÄÁv                ¿8>ÐÙ¿$²‡‘£@                        ?GÆä©½n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        