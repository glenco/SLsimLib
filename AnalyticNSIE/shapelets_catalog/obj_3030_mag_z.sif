SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.37218815514766 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07007579867959 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3030 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3279. / min(X) in image pixels                         XMAX    =                3315. / max(X) in image pixels                         YMIN    =                4139. / min(Y) in image pixels                         YMAX    =                4175. / min(Y) in image pixels                         CENTROID=   (3296.89, 4158.23) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3030 found in the area (3291/4152) to (3302/4162)   HISTORY # Extending the area around object to (3279/4139) to (3315/4175)        HISTORY # Object 2989 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0169792, Centroid = (3296.89/4158.23)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.093, f(beta) = 1.087, f(b) = 1.07           HISTORY # after bracketing: f(a) = 1.087, f(beta) = 1.07, f(b) = 1.087          HISTORY # Setting limits: 4 <= beta <= 10.43                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.07    8       3.96                                            HISTORY # 2     1.07    8       2.457                                           HISTORY # 3     1.07    7.416   1.528                                           HISTORY # 4     1.07    7.327   0.9443                                          HISTORY # 5     1.07    7.327   0.4159                                          HISTORY # 6     1.07    7.253   0.3265                                          HISTORY # 7     1.07    7.271   0.0744                                          HISTORY # Converged to minimum: chi^2 = 1.07 at beta = 7.271                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 7.271               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.07    0.03937                                         HISTORY # 1     4       1.071   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 5.817, beta = 7.271, b = 7.998                     HISTORY # after checking limits: a = 5.817, beta = 7.271, b = 7.998             HISTORY # starting values: f(a) = 1.071, f(beta) = 1.071, f(b) = 1.072          HISTORY # after bracketing: f(a) = 1.089, f(beta) = 1.071, f(b) = 1.071         HISTORY # Setting limits: 3.878 <= beta <= 7.271                                HISTORY # Starting with beta = 5.817                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.071   5.817   2.195                                           HISTORY # 2     1.07    6.372   1.454                                           HISTORY # 3     1.07    6.372   0.9643                                          HISTORY # 4     1.07    6.372   0.4089                                          HISTORY # 5     1.07    6.372   0.3433                                          HISTORY # 6     1.07    6.372   0.1311                                          HISTORY # Converged to minimum: chi^2 = 1.07 at beta = 6.372                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.93 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               29.821 / AB magnitude                                   MAG_ERR =                0.177 / AB magnitude errorœ›⁄¨P^øFHÏ_I5øS¢K8ÄXø*d˛∏VøJX…îÇ–øG¿‘[]Ì=ø#°>H†±õø-⁄Ì>±ó?*÷Mh;H”        øVj´ Wrã?êVó4?·@©t/†                ?Bˇºò†Kø:‹è9|”é                        ?,…Ÿg                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        