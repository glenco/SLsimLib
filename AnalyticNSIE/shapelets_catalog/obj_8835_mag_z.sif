SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.11803398874989 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.21029847631687 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8835 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5188. / min(X) in image pixels                         XMAX    =                5226. / max(X) in image pixels                         YMIN    =                6824. / min(Y) in image pixels                         YMAX    =                6862. / min(Y) in image pixels                         CENTROID=   (5204.42, 6844.07) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8835 found in the area (5200/6837) to (5213/6848)   HISTORY # Extending the area around object to (5188/6824) to (5226/6862)        HISTORY # Object 8361 nearby, but not overlapping.                              HISTORY # Object 7567 nearby, but not overlapping.                              HISTORY # Object 8814 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.035623, Centroid = (5204.42/6844.07) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.234, f(beta) = 1.252, f(b) = 1.3            HISTORY # after bracketing: f(a) = 1.252, f(beta) = 1.234, f(b) = 1.252         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.222   2.063   3.134                                           HISTORY # 2     1.222   1.964   1.197                                           HISTORY # 3     1.222   1.944   1.098                                           HISTORY # 4     1.22    1.532   1.078                                           HISTORY # 5     1.218   1.278   0.6664                                          HISTORY # 6     1.218   1.278   0.4119                                          HISTORY # 7     1.218   1.278   0.2546                                          HISTORY # 8     1.218   1.218   0.1573                                          HISTORY # 9     1.218   1.241   0.06009                                         HISTORY # Converged to minimum: chi^2 = 1.218 at beta = 1.241                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.241               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.218   0.03729                                         HISTORY # 1     4       1.213   0.03741                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 0.9931, beta = 1.241, b = 1.365                    HISTORY # after checking limits: a = 1.118, beta = 1.241, b = 1.365             HISTORY # starting values: f(a) = 1.21, f(beta) = 1.213, f(b) = 1.216           HISTORY # after bracketing: f(a) = 1.213, f(beta) = 1.21, f(b) = 1.213          HISTORY # Setting limits: 1.106 <= beta <= 1.241                                HISTORY # Starting with beta = 1.118                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.21    1.118   0.05952                                         HISTORY # 2     1.21    1.118   0.03041                                         HISTORY # 3     1.21    1.118   0.01929                                         HISTORY # Converged to minimum: chi^2 = 1.21 at beta = 1.118                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.36 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =                29.67 / AB magnitude                                   MAG_ERR =                0.104 / AB magnitude errorhK`éo‹û¿6¤Mz4’?T0Z”ÏÓz¿7—˜”"íÀ¿2›yLÇà‹¿A²ªsz	?1v?¿#Ä5•§<¿DãâVŽó        ?V0.NÅë¿,K¶sD~?LuÒ³ð¡‘                ?4¡/C€x¤¿4¦ºþhÄ™                        ?0¤žšß±[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        