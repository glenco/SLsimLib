SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.89780340438219 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18364597801396 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2880 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2754. / min(X) in image pixels                         XMAX    =                2790. / max(X) in image pixels                         YMIN    =                4059. / min(Y) in image pixels                         YMAX    =                4095. / min(Y) in image pixels                         CENTROID=   (2772.39, 4078.28) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2880 found in the area (2766/4071) to (2778/4082)   HISTORY # Extending the area around object to (2754/4059) to (2790/4095)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.02191, Centroid = (2772.39/4078.28)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.218, f(beta) = 1.25, f(b) = 1.341           HISTORY # after bracketing: f(a) = 1.25, f(beta) = 1.218, f(b) = 1.25           HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.193   2.063   3.134                                           HISTORY # 2     1.189   1.791   1.197                                           HISTORY # 3     1.189   1.762   0.9254                                          HISTORY # 4     1.189   1.762   0.3717                                          HISTORY # 5     1.189   1.648   0.3422                                          HISTORY # 6     1.189   1.641   0.2283                                          HISTORY # 7     1.189   1.641   0.0918                                          HISTORY # 8     1.189   1.636   0.08435                                         HISTORY # 9     1.189   1.636   0.07993                                         HISTORY # Converged to minimum: chi^2 = 1.189 at beta = 1.636                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.636               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.189   0.03937                                         HISTORY # 1     4       1.184   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.308, beta = 1.636, b = 1.799                     HISTORY # after checking limits: a = 1.308, beta = 1.636, b = 1.799             HISTORY # starting values: f(a) = 1.186, f(beta) = 1.184, f(b) = 1.184          HISTORY # after bracketing: f(a) = 1.184, f(beta) = 1.184, f(b) = 1.196         HISTORY # Setting limits: 1.636 <= beta <= 2.699                                HISTORY # Starting with beta = 1.799                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.184   1.799   0.5072                                          HISTORY # 2     1.184   1.93    0.3436                                          HISTORY # 3     1.184   1.889   0.1312                                          HISTORY # 4     1.184   1.895   0.04128                                         HISTORY # 5     1.184   1.898   0.0351                                          HISTORY # 6     1.184   1.898   0.03287                                         HISTORY # 7     1.184   1.898   0.0002773                                       HISTORY # Converged to minimum: chi^2 = 1.184 at beta = 1.898                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.73 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               28.698 / AB magnitude                                   MAG_ERR =                0.079 / AB magnitude errort1eoTÆ1?Uc'9p´¿1îÿö/=¿+Ø‘ÑaÈ?t¹MÛ&%?7 àã1 c?HÔ·ÜoÈ?/v©*À®j¿(@rR Õ        ¿ º¼æ¿?@º&Ot?=ÁÝÊü¸s                >üþôdÅ›?44®ÖG-ü                        ?K¢QŸ¥¯ç                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        