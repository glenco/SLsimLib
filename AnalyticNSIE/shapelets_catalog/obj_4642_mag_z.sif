SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.90667748101733 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.19960036295936 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4642 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1633. / min(X) in image pixels                         XMAX    =                1681. / max(X) in image pixels                         YMIN    =                5008. / min(Y) in image pixels                         YMAX    =                5056. / min(Y) in image pixels                         CENTROID=   (1656.83, 5033.32) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4642 found in the area (1648/5020) to (1666/5044)   HISTORY # Extending the area around object to (1633/5008) to (1681/5056)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.306388, Centroid = (1656.83/5033.32) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 3.699, f(beta) = 4.949, f(b) = 8.829          HISTORY # after bracketing: f(a) = 4.949, f(beta) = 3.699, f(b) = 4.949         HISTORY # Setting limits: 0.806 <= beta <= 6                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.749   2.827   5.134                                           HISTORY # 2     1.574   2.456   1.961                                           HISTORY # 3     1.551   2.385   1.59                                            HISTORY # 4     1.53    1.805   1.519                                           HISTORY # 5     1.495   2.055   0.5803                                          HISTORY # 6     1.495   2.055   0.2569                                          HISTORY # 7     1.495   2.055   0.1021                                          HISTORY # Converged to minimum: chi^2 = 1.495 at beta = 2.055                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.055               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.495   0.0295                                          HISTORY # 1     4       1.231   0.02956                                         HISTORY # 2     6       1.204   0.02964                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 1.644, beta = 2.055, b = 2.261                     HISTORY # after checking limits: a = 1.644, beta = 2.055, b = 2.261             HISTORY # starting values: f(a) = 1.216, f(beta) = 1.204, f(b) = 1.225          HISTORY # after bracketing: f(a) = 1.216, f(beta) = 1.204, f(b) = 1.225         HISTORY # Setting limits: 1.644 <= beta <= 2.261                                HISTORY # Starting with beta = 2.055                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.2     1.898   0.4111                                          HISTORY # 2     1.2     1.907   0.157                                           HISTORY # 3     1.2     1.907   0.008838                                        HISTORY # Converged to minimum: chi^2 = 1.2 at beta = 1.907                     HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.78 / photometric redshift                           SED_TYPE=                   12 / SED template                                   MAG     =               26.761 / AB magnitude                                   MAG_ERR =                0.015 / AB magnitude error•.Pà
ÍEøRñL‘éé?s8ÿGg!?S¶V˜˜¯≥?q±ny«¥§ø6∏ıπl[?PeÔı·fAøYO—9Ê?m>Gí#⁄“?Yø¿¯¡ï¬ø6#g_°8?2˝ªb≈˘?M=È¨WP        øV°]À√Ê?G8S“Ë˙,?k=∂ÄIZ§?xj·Ç*¢?vÅOlâm                ?]‚Ì±Óø«ø0I»÷ZøFÏø.◊!™?Fı.d:O                        ?kôÕΩ“∫ø#’ªN9Q`ø#˙“ÌC¸                                ø=DÁ<D´e?:òÍÃXï                                        øO©Æ(¨nÜ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        