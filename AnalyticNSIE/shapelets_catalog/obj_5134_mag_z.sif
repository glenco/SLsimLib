SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.40496358702606 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10586662027257 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5134 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6856. / min(X) in image pixels                         XMAX    =                6906. / max(X) in image pixels                         YMIN    =                5271. / min(Y) in image pixels                         YMAX    =                5321. / min(Y) in image pixels                         CENTROID=    (6880.27, 5295.9) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5134 found in the area (6868/5285) to (6893/5306)   HISTORY # Extending the area around object to (6856/5271) to (6906/5321)        HISTORY # Object 5200 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.203333, Centroid = (6880.27/5295.9)  HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.612, f(beta) = 1.377, f(b) = 2.21           HISTORY # after bracketing: f(a) = 2.612, f(beta) = 1.377, f(b) = 2.21          HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.377   6       7.426                                           HISTORY # 2     1.205   4.039   5.134                                           HISTORY # 3     1.205   4.039   3.173                                           HISTORY # 4     1.205   4.039   1.961                                           HISTORY # 5     1.191   3.576   1.212                                           HISTORY # 6     1.191   3.576   0.749                                           HISTORY # 7     1.191   3.576   0.4629                                          HISTORY # 8     1.191   3.467   0.2861                                          HISTORY # 9     1.191   3.496   0.1093                                          HISTORY # Converged to minimum: chi^2 = 1.191 at beta = 3.496                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.496               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.191   0.02832                                         HISTORY # 1     4       1.105   0.02837                                         HISTORY # 2     6       1.106   0.02844                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 2.797, beta = 3.496, b = 3.846                     HISTORY # after checking limits: a = 2.797, beta = 3.496, b = 3.846             HISTORY # starting values: f(a) = 1.113, f(beta) = 1.106, f(b) = 1.108          HISTORY # after bracketing: f(a) = 1.113, f(beta) = 1.106, f(b) = 1.108         HISTORY # Setting limits: 2.797 <= beta <= 3.846                                HISTORY # Starting with beta = 3.496                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.106   3.496   0.6167                                          HISTORY # 2     1.106   3.496   0.4007                                          HISTORY # 3     1.106   3.394   0.2671                                          HISTORY # 4     1.106   3.411   0.102                                           HISTORY # 5     1.106   3.405   0.01632                                         HISTORY # Converged to minimum: chi^2 = 1.106 at beta = 3.405                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.55 / photometric redshift                           SED_TYPE=                   10 / SED template                                   MAG     =                26.91 / AB magnitude                                   MAG_ERR =                0.021 / AB magnitude error•L ·Ä¤?+ÄœKÞªË¿M¬¶šœ6Ñ¿{€Cv?SÊer¿ÂR>Ôaý!œÇ¿"X‘Èq/à¿-Ýdf‡Èƒ?gª@ëê0¿GbÒffl¡¿Uuñhë¯™¿-C»<šzP?7˜Îñ"©        ?aò‚8è»X?JCòÃAÂ9?WÆ
$POW¿ü™C²Tà?+wÏ«q‰Ý                ?JBäU¿CùK¹(å$¿@]ˆDñ‘5?&p–¢"F                        ?gIƒ‰G?|!wMÖ²¿<à®>’q                                ¿$(|&tDP¿9WsxÊ                                        ? u¡ÒìdÓ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        