SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.71890864996709 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.30995235558952 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8310 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4339. / min(X) in image pixels                         XMAX    =                4369. / max(X) in image pixels                         YMIN    =                7295. / min(Y) in image pixels                         YMAX    =                7325. / min(Y) in image pixels                         CENTROID=   (4353.53, 7309.83) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8310 found in the area (4351/7308) to (4356/7312)   HISTORY # Extending the area around object to (4339/7295) to (4369/7325)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00889497, Centroid = (4353.53/7309.83HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.337, f(beta) = 1.312, f(b) = 1.307          HISTORY # after bracketing: f(a) = 1.312, f(beta) = 1.307, f(b) = 1.312         HISTORY # Setting limits: 3 <= beta <= 8.69                                     HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.307   6       3.836                                           HISTORY # 2     1.307   6       2.173                                           HISTORY # 3     1.307   6       1.465                                           HISTORY # 4     1.307   6       0.8302                                          HISTORY # 5     1.307   5.833   0.4377                                          HISTORY # 6     1.307   5.844   0.1672                                          HISTORY # 7     1.307   5.844   0.07065                                         HISTORY # 8     1.307   5.854   0.05966                                         HISTORY # Converged to minimum: chi^2 = 1.307 at beta = 5.854                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.854               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.307   0.0473                                          HISTORY # 1     4       1.312   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.683, beta = 5.854, b = 6.439                     HISTORY # after checking limits: a = 4.683, beta = 5.854, b = 6.439             HISTORY # starting values: f(a) = 1.315, f(beta) = 1.312, f(b) = 1.31           HISTORY # after bracketing: f(a) = 1.312, f(beta) = 1.31, f(b) = 1.312          HISTORY # Setting limits: 5.854 <= beta <= 6.767                                HISTORY # Starting with beta = 6.439                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.31    6.439   0.5514                                          HISTORY # 2     1.31    6.564   0.3278                                          HISTORY # 3     1.31    6.642   0.2026                                          HISTORY # 4     1.31    6.689   0.1252                                          HISTORY # 5     1.31    6.719   0.07739                                         HISTORY # Converged to minimum: chi^2 = 1.31 at beta = 6.719                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.68 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.982 / AB magnitude                                   MAG_ERR =                0.145 / AB magnitude errorâ¬¢àÏßøFûÛ6æ}|øT¶ç?pÌ?!ËœΩ—Î¡?¿&ä‰˚V?#’·›wP?@;Oıàè4ø0ü>"·P5ø7ã~üa$è        øN_/+_ñé?8˝∆Ø›¥ø2VüŸ                ø1M™ΩdÈ?A<EºΩ√                        ?<ˆ=#}á€                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        