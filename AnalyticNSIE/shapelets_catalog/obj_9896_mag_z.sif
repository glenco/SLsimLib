SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.56653607767058 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.18668243192238 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9896 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.05 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6233. / min(X) in image pixels                         XMAX    =                6287. / max(X) in image pixels                         YMIN    =                8990. / min(Y) in image pixels                         YMAX    =                9044. / min(Y) in image pixels                         CENTROID=   (6256.21, 9015.89) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9896 found in the area (6245/9006) to (6274/9028)   HISTORY # Extending the area around object to (6233/8990) to (6287/9044)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.176516, Centroid = (6256.21/9015.89) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.447, f(beta) = 1.223, f(b) = 1.285          HISTORY # after bracketing: f(a) = 1.447, f(beta) = 1.223, f(b) = 1.285         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.223   6       7.426                                           HISTORY # 2     1.217   4.039   5.134                                           HISTORY # 3     1.213   4.743   1.961                                           HISTORY # 4     1.213   4.743   0.7411                                          HISTORY # 5     1.213   4.743   0.3063                                          HISTORY # 6     1.213   4.743   0.2687                                          HISTORY # 7     1.213   4.64    0.2687                                          HISTORY # 8     1.213   4.634   0.1661                                          HISTORY # 9     1.213   4.637   0.005471                                        HISTORY # Converged to minimum: chi^2 = 1.213 at beta = 4.637                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.637               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.213   0.02622                                         HISTORY # 1     4       1.194   0.02626                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.709, beta = 4.637, b = 5.1                       HISTORY # after checking limits: a = 3.709, beta = 4.637, b = 5.1               HISTORY # starting values: f(a) = 1.187, f(beta) = 1.194, f(b) = 1.196          HISTORY # after bracketing: f(a) = 1.224, f(beta) = 1.187, f(b) = 1.194         HISTORY # Setting limits: 2.473 <= beta <= 4.637                                HISTORY # Starting with beta = 3.709                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.187   3.709   1.4                                             HISTORY # 2     1.187   3.709   0.8265                                          HISTORY # 3     1.187   3.529   0.4723                                          HISTORY # 4     1.187   3.577   0.1804                                          HISTORY # 5     1.187   3.567   0.04836                                         HISTORY # Converged to minimum: chi^2 = 1.187 at beta = 3.567                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 1 seconds                         REDSHIFT=                 1.67 / photometric redshift                           SED_TYPE=                    7 / SED template                                   MAG     =               27.373 / AB magnitude                                   MAG_ERR =                0.042 / AB magnitude errorÅπÌ¬TıøJHùÌ3≈∫?_Œ˙ÅÑ£}?\µìÕvo?DÉÏ}DaøMEE«õ;øiŸYgÛ%∑>Û*VöÍ'∏øR≥Rù~ê        ?WQ8Zq´?L»DÌ[ã˚?T‰Oë•⁄π                ?E∫nój?ßøFjY~˛\ô                        ?aË&L£B}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        