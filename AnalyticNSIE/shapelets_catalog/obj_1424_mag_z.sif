SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.44147016127615 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.12188362918711 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1424 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6597. / min(X) in image pixels                         XMAX    =                6627. / max(X) in image pixels                         YMIN    =                3059. / min(Y) in image pixels                         YMAX    =                3089. / min(Y) in image pixels                         CENTROID=   (6611.41, 3073.59) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1424 found in the area (6609/3071) to (6615/3076)   HISTORY # Extending the area around object to (6597/3059) to (6627/3089)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0110591, Centroid = (6611.41/3073.59)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 3, b = 6                             HISTORY # after checking limits: a = 0.866, beta = 3, b = 6                     HISTORY # starting values: f(a) = 1.136, f(beta) = 1.127, f(b) = 1.137          HISTORY # after bracketing: f(a) = 1.136, f(beta) = 1.127, f(b) = 1.137         HISTORY # Setting limits: 0.866 <= beta <= 6                                    HISTORY # Starting with beta = 3                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.127   3       3.28                                            HISTORY # 2     1.127   3       1.961                                           HISTORY # 3     1.127   3.438   1.146                                           HISTORY # 4     1.127   3.25    0.4377                                          HISTORY # 5     1.127   3.25    0.1894                                          HISTORY # 6     1.127   3.25    0.0736                                          HISTORY # 7     1.127   3.25    0.002042                                        HISTORY # Converged to minimum: chi^2 = 1.127 at beta = 3.25                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.25                HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.127   0.0473                                          HISTORY # 1     4       1.125   0.04754                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.6, beta = 3.25, b = 3.575                        HISTORY # after checking limits: a = 2.6, beta = 3.25, b = 3.575                HISTORY # starting values: f(a) = 1.128, f(beta) = 1.125, f(b) = 1.124          HISTORY # after bracketing: f(a) = 1.125, f(beta) = 1.124, f(b) = 1.125         HISTORY # Setting limits: 3.25 <= beta <= 5.363                                 HISTORY # Starting with beta = 3.575                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.122   4.258   1.788                                           HISTORY # 2     1.122   4.575   1.105                                           HISTORY # 3     1.122   4.445   0.3169                                          HISTORY # 4     1.122   4.438   0.1871                                          HISTORY # 5     1.122   4.441   0.007632                                        HISTORY # Converged to minimum: chi^2 = 1.122 at beta = 4.441                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.92 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               30.777 / AB magnitude                                   MAG_ERR =                0.262 / AB magnitude errorþÕ—Ä‡¿6›k	Å¿C¸zœˆÒ»¿CôÝ­¯?A”‘R¼þ¾ñ®ŠÂ¯”á?B¬"Ô,¿8É/0ûzœ?!yüPÔœ        ¿*æmêzÞ¿8¿âÀò—,?4awŸÂ                ?4Æ4Àsù>üå]u×à                        ?5eivs[î                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        