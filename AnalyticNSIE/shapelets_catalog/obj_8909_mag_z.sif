SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.90714392543282 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.22809911319329 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8909 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2371. / min(X) in image pixels                         XMAX    =                2403. / max(X) in image pixels                         YMIN    =                6700. / min(Y) in image pixels                         YMAX    =                6732. / min(Y) in image pixels                         CENTROID=   (2386.63, 6716.81) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8909 found in the area (2383/6713) to (2391/6719)   HISTORY # Extending the area around object to (2371/6700) to (2403/6732)        HISTORY # Object 7954 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.013899, Centroid = (2386.63/6716.81) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.526, f(beta) = 1.446, f(b) = 1.367          HISTORY # after bracketing: f(a) = 1.446, f(beta) = 1.367, f(b) = 1.446         HISTORY # Setting limits: 4 <= beta <= 9.278                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.343   6.472   4                                               HISTORY # 2     1.342   6.08    2.472                                           HISTORY # 3     1.342   6.08    0.4308                                          HISTORY # 4     1.342   6.08    0.1885                                          HISTORY # 5     1.342   6.08    0.1497                                          HISTORY # 6     1.342   6.137   0.1497                                          HISTORY # 7     1.342   6.15    0.09253                                         HISTORY # 8     1.342   6.151   0.0797                                          HISTORY # Converged to minimum: chi^2 = 1.342 at beta = 6.151                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.151               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.342   0.04432                                         HISTORY # 1     4       1.319   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.921, beta = 6.151, b = 6.766                     HISTORY # after checking limits: a = 4.921, beta = 6.151, b = 6.766             HISTORY # starting values: f(a) = 1.278, f(beta) = 1.319, f(b) = 1.324          HISTORY # after bracketing: f(a) = 1.288, f(beta) = 1.278, f(b) = 1.319         HISTORY # Setting limits: 3.281 <= beta <= 6.151                                HISTORY # Starting with beta = 4.921                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.24    4.294   1.64                                            HISTORY # 2     1.228   3.907   1.014                                           HISTORY # 3     1.228   3.907   0.6265                                          HISTORY # 4     1.228   3.907   0.3872                                          HISTORY # 5     1.228   3.907   0.2393                                          HISTORY # 6     1.228   3.907   0.1479                                          HISTORY # 7     1.228   3.907   0.09141                                         HISTORY # Converged to minimum: chi^2 = 1.228 at beta = 3.907                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.34 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               29.059 / AB magnitude                                   MAG_ERR =                0.075 / AB magnitude errorÍÍf?Â¿Q$Ëœå¿ÆÇ 'Ö¿OJRú½2ò?@ ôùIÏŸ?V®½öì_'¿W«™ü•±?XV_âMi¿AË¸5*£†        ?P^xPJ“ò¿bkpCnÍÊ?QûI´}°p                ?W*šîH_¿`›™Ög                        ?V4«ô¬~                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        