SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.02314185481118 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10621320342788 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 1540 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6390. / min(X) in image pixels                         XMAX    =                6444. / max(X) in image pixels                         YMIN    =                3191. / min(Y) in image pixels                         YMAX    =                3245. / min(Y) in image pixels                         CENTROID=   (6414.58, 3215.67) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 1540 found in the area (6403/3203) to (6430/3232)   HISTORY # Extending the area around object to (6390/3191) to (6444/3245)        HISTORY # Object 1597 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.325678, Centroid = (6414.58/3215.67) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 4.329, f(beta) = 1.193, f(b) = 2.364          HISTORY # after bracketing: f(a) = 4.329, f(beta) = 1.193, f(b) = 2.364         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.193   6       7.426                                           HISTORY # 2     1.132   4.039   5.134                                           HISTORY # 3     1.127   4.487   1.961                                           HISTORY # 4     1.127   4.482   0.4477                                          HISTORY # 5     1.127   4.482   0.1736                                          HISTORY # 6     1.127   4.469   0.1694                                          HISTORY # 7     1.127   4.468   0.1564                                          HISTORY # 8     1.127   4.468   0.001601                                        HISTORY # Converged to minimum: chi^2 = 1.127 at beta = 4.468                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.468               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.127   0.02622                                         HISTORY # 1     4       1.108   0.02626                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.574, beta = 4.468, b = 4.915                     HISTORY # after checking limits: a = 3.574, beta = 4.468, b = 4.915             HISTORY # starting values: f(a) = 1.122, f(beta) = 1.108, f(b) = 1.106          HISTORY # after bracketing: f(a) = 1.108, f(beta) = 1.106, f(b) = 1.191         HISTORY # Setting limits: 4.468 <= beta <= 7.372                                HISTORY # Starting with beta = 4.915                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.106   4.915   1.385                                           HISTORY # 2     1.106   4.915   0.8053                                          HISTORY # 3     1.106   4.915   0.5292                                          HISTORY # 4     1.106   5.052   0.3585                                          HISTORY # 5     1.106   5.015   0.1369                                          HISTORY # 6     1.106   5.023   0.03684                                         HISTORY # Converged to minimum: chi^2 = 1.106 at beta = 5.023                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.59 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               26.404 / AB magnitude                                   MAG_ERR =                0.015 / AB magnitude errorûÇq@i∆ﬂøÍΩY%«ø`¿DÚÚjø8i*W?ZUÿa?mCoÁ4øaÃ`}v)v>Ë‚i5ç?B¿√©"æÛ        ø[ô1r-•¬??S2tåÈ?NÆgw                ?3ù†˚*ã≥?@Nıc—%                        ?XâÍæéÊ›                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        