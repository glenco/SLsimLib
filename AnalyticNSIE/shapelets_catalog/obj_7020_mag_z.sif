SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.13664196794237 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.10008581637693 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7020 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6755. / min(X) in image pixels                         XMAX    =                6787. / max(X) in image pixels                         YMIN    =                6205. / min(Y) in image pixels                         YMAX    =                6237. / min(Y) in image pixels                         CENTROID=   (6770.42, 6220.97) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7020 found in the area (6767/6217) to (6774/6225)   HISTORY # Extending the area around object to (6755/6205) to (6787/6237)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0184333, Centroid = (6770.42/6220.97)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.117, f(beta) = 1.122, f(b) = 1.21           HISTORY # after bracketing: f(a) = 1.122, f(beta) = 1.117, f(b) = 1.122         HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.101   2.063   3.134                                           HISTORY # 2     1.1     1.909   1.197                                           HISTORY # 3     1.1     1.847   1.043                                           HISTORY # 4     1.099   1.472   0.9805                                          HISTORY # 5     1.099   1.563   0.3745                                          HISTORY # 6     1.099   1.563   0.1996                                          HISTORY # 7     1.099   1.563   0.1396                                          HISTORY # 8     1.099   1.563   0.08307                                         HISTORY # 9     1.099   1.582   0.04814                                         HISTORY # Converged to minimum: chi^2 = 1.099 at beta = 1.582                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.582               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.099   0.04432                                         HISTORY # 1     4       1.104   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.265, beta = 1.582, b = 1.74                      HISTORY # after checking limits: a = 1.265, beta = 1.582, b = 1.74              HISTORY # starting values: f(a) = 1.101, f(beta) = 1.104, f(b) = 1.103          HISTORY # after bracketing: f(a) = 1.104, f(beta) = 1.101, f(b) = 1.104         HISTORY # Setting limits: 1.102 <= beta <= 1.582                                HISTORY # Starting with beta = 1.265                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.101   1.265   0.2841                                          HISTORY # 2     1.1     1.203   0.1633                                          HISTORY # 3     1.1     1.165   0.1009                                          HISTORY # 4     1.1     1.141   0.06236                                         HISTORY # 5     1.1     1.135   0.03854                                         HISTORY # 6     1.1     1.137   0.006126                                        HISTORY # Converged to minimum: chi^2 = 1.1 at beta = 1.137                     HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.92 / photometric redshift                           SED_TYPE=                   20 / SED template                                   MAG     =               29.795 / AB magnitude                                   MAG_ERR =                0.105 / AB magnitude erroriIJ@„lÝ¿ý¡z³{?B«^S1&¿<‘xem¤x>Ób'ŽÁIç¿uqñ‘¼N¿GÍÇUF¿!+V#ù,¿GÍ"Æ/p        ?SÂx%Õá’¿1R’NÔ^?:à£Œi                ?®ëñ&¿ÙDàÔ                        ?0G.5Õì                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        