SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     4.75557626848973 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.20819573607458 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7997 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5923. / min(X) in image pixels                         XMAX    =                5985. / max(X) in image pixels                         YMIN    =                7480. / min(Y) in image pixels                         YMAX    =                7542. / min(Y) in image pixels                         CENTROID=   (5955.57, 7514.12) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7997 found in the area (5935/7495) to (5972/7526)   HISTORY # Extending the area around object to (5923/7480) to (5985/7542)        HISTORY # Object 8051 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.195527, Centroid = (5955.57/7514.12) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 7, b = 14                            HISTORY # after checking limits: a = 0.866, beta = 7, b = 14                    HISTORY # starting values: f(a) = 1.627, f(beta) = 1.264, f(b) = 1.381          HISTORY # after bracketing: f(a) = 1.627, f(beta) = 1.264, f(b) = 1.381         HISTORY # Setting limits: 0.866 <= beta <= 14                                   HISTORY # Starting with beta = 7                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.264   7       8.808                                           HISTORY # 2     1.248   4.657   6.134                                           HISTORY # 3     1.248   4.657   2.735                                           HISTORY # 4     1.248   4.657   1.287                                           HISTORY # 5     1.248   4.657   0.8949                                          HISTORY # 6     1.248   4.657   0.3418                                          HISTORY # 7     1.248   4.788   0.3418                                          HISTORY # 8     1.248   4.756   0.1306                                          HISTORY # Converged to minimum: chi^2 = 1.248 at beta = 4.756                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.756               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.248   0.02283                                         HISTORY # 1     4       1.208   0.02285                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.804, beta = 4.756, b = 5.231                     HISTORY # after checking limits: a = 3.804, beta = 4.756, b = 5.231             HISTORY # starting values: f(a) = 1.219, f(beta) = 1.208, f(b) = 1.21           HISTORY # after bracketing: f(a) = 1.219, f(beta) = 1.208, f(b) = 1.21          HISTORY # Setting limits: 3.804 <= beta <= 5.231                                HISTORY # Starting with beta = 4.756                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.208   4.756   0.8389                                          HISTORY # 2     1.208   4.756   0.5449                                          HISTORY # 3     1.208   4.756   0.3204                                          HISTORY # 4     1.208   4.756   0.2081                                          HISTORY # 5     1.208   4.756   0.1224                                          HISTORY # 6     1.208   4.756   0.07951                                         HISTORY # Converged to minimum: chi^2 = 1.208 at beta = 4.756                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.73 / photometric redshift                           SED_TYPE=                    6 / SED template                                   MAG     =               26.981 / AB magnitude                                   MAG_ERR =                0.031 / AB magnitude errorà®Y= ó?Tà{QΩ=ı?Gü®tøXnøT”ﬁ˜ «?Wªñ“ø„?6ßPP{¬ø>Æπô¶?÷ÒU£?1Kèîá        ?.Úfh“ÔøTÀ@ïŒÒn?\‹˚Ω'€                øIiÛÒ-=8?K¿ïPtb                        ?YÀÒívE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        