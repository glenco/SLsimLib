SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.24661302983995 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.17991796972676 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8999 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6879. / min(X) in image pixels                         XMAX    =                6931. / max(X) in image pixels                         YMIN    =                6567. / min(Y) in image pixels                         YMAX    =                6619. / min(Y) in image pixels                         CENTROID=   (6904.72, 6593.61) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8999 found in the area (6891/6584) to (6918/6602)   HISTORY # Extending the area around object to (6879/6567) to (6931/6619)        HISTORY # Object 9058 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.173883, Centroid = (6904.72/6593.61) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.011, f(beta) = 1.512, f(b) = 2.275          HISTORY # after bracketing: f(a) = 2.011, f(beta) = 1.512, f(b) = 2.275         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.512   6       7.426                                           HISTORY # 2     1.271   4.039   5.134                                           HISTORY # 3     1.234   2.827   3.173                                           HISTORY # 4     1.234   2.827   2.032                                           HISTORY # 5     1.234   2.827   0.8205                                          HISTORY # 6     1.233   2.541   0.749                                           HISTORY # 7     1.233   2.572   0.2861                                          HISTORY # 8     1.233   2.572   0.1287                                          HISTORY # 9     1.232   2.6     0.0973                                          HISTORY # Converged to minimum: chi^2 = 1.232 at beta = 2.6                     HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.6                 HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.232   0.02723                                         HISTORY # 1     4       1.185   0.02727                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.08, beta = 2.6, b = 2.859                        HISTORY # after checking limits: a = 2.08, beta = 2.6, b = 2.859                HISTORY # starting values: f(a) = 1.182, f(beta) = 1.185, f(b) = 1.192          HISTORY # after bracketing: f(a) = 1.301, f(beta) = 1.182, f(b) = 1.185         HISTORY # Setting limits: 1.386 <= beta <= 2.6                                  HISTORY # Starting with beta = 2.08                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.182   2.08    0.7847                                          HISTORY # 2     1.18    2.278   0.5199                                          HISTORY # 3     1.18    2.225   0.1986                                          HISTORY # 4     1.18    2.247   0.05355                                         HISTORY # 5     1.18    2.247   0.02273                                         HISTORY # Converged to minimum: chi^2 = 1.18 at beta = 2.247                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.24 / photometric redshift                           SED_TYPE=                   15 / SED template                                   MAG     =               27.405 / AB magnitude                                   MAG_ERR =                0.025 / AB magnitude error’=6a†?R÷×›-}?]lÁöP¿QÓæ‡4Óh?\{[+W•!¿B“Gë4Z?#. rùUM?ZêU“zYS¿AeÌ&Õ         ?m/ •J€X¿X]oI=þ?S±ªß#E8                ?E>„•Ð«w¿6–R‡(                        ??­hz÷o                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        