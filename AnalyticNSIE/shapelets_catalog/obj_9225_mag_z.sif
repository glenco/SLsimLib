SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    7 / length of data axis 1                          NAXIS2  =                    7 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.70682597053417 / scale size in pixel units                      DIM     =                    7 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16615772347237 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9225 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6559. / min(X) in image pixels                         XMAX    =                6611. / max(X) in image pixels                         YMIN    =                8025. / min(Y) in image pixels                         YMAX    =                8077. / min(Y) in image pixels                         CENTROID=   (6583.23, 8048.21) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9225 found in the area (6571/8038) to (6598/8064)   HISTORY # Extending the area around object to (6559/8025) to (6611/8077)        HISTORY # Object 9286 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.241611, Centroid = (6583.23/8048.21) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.177, f(beta) = 1.307, f(b) = 1.468          HISTORY # after bracketing: f(a) = 2.177, f(beta) = 1.307, f(b) = 1.468         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.307   6       7.426                                           HISTORY # 2     1.281   4.039   5.134                                           HISTORY # 3     1.281   4.039   3.173                                           HISTORY # 4     1.281   4.039   1.961                                           HISTORY # 5     1.281   3.576   1.212                                           HISTORY # 6     1.279   3.727   0.4629                                          HISTORY # 7     1.279   3.794   0.3123                                          HISTORY # 8     1.279   3.771   0.06743                                         HISTORY # Converged to minimum: chi^2 = 1.279 at beta = 3.771                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.771               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.279   0.02723                                         HISTORY # 1     4       1.204   0.02727                                         HISTORY # 2     6       1.166   0.02734                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 6.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 6                                       HISTORY # initial setup: a = 3.017, beta = 3.771, b = 4.148                     HISTORY # after checking limits: a = 3.017, beta = 3.771, b = 4.148             HISTORY # starting values: f(a) = 1.191, f(beta) = 1.166, f(b) = 1.172          HISTORY # after bracketing: f(a) = 1.191, f(beta) = 1.166, f(b) = 1.172         HISTORY # Setting limits: 3.017 <= beta <= 4.148                                HISTORY # Starting with beta = 3.771                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.166   3.771   0.6652                                          HISTORY # 2     1.166   3.771   0.4321                                          HISTORY # 3     1.166   3.661   0.2881                                          HISTORY # 4     1.166   3.708   0.11                                            HISTORY # 5     1.166   3.707   0.04688                                         HISTORY # Converged to minimum: chi^2 = 1.166 at beta = 3.707                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.24 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               27.028 / AB magnitude                                   MAG_ERR =                0.026 / AB magnitude erroräo?}üuø^©Ù:¶yÆ?]¨p>v:?gÀ¥∆ßﬁ?Nïpé<›«?(':<aq?Të/%ﬂêøøT¨/nMøaôYI‹?YXï∏g?0∫ÚàZO©øGHC>◊‡ø1™r◊ﬂY©        ?tfó‚¿®)?OÉ›+á Ñ?(}Âœ∑ %?Lx\`+vì?!MH7U)                ?P{ﬂô(ŸXøF∂Èr4Ìeø¯0GwÂø$éÉæã˚7                        ?K€x´Ú™?$¨_@~[°?NzÇ≥p6y                                ?`
ÚóH¿?8D IÉî                                        ?N3l„çÃ»                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        