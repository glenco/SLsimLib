SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.64192372022068 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.07633168015743 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  958 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5505. / min(X) in image pixels                         XMAX    =                5555. / max(X) in image pixels                         YMIN    =                2564. / min(Y) in image pixels                         YMAX    =                2614. / min(Y) in image pixels                         CENTROID=   (5529.24, 2588.42) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 958 found in the area (5520/2576) to (5539/2602)    HISTORY # Extending the area around object to (5505/2564) to (5555/2614)        HISTORY # Object 953 nearby, but not overlapping.                               HISTORY # Object 1652 nearby, but not overlapping.                              HISTORY # Object 918 nearby, but not overlapping.                               HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.183143, Centroid = (5529.24/2588.42) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 2.256, f(beta) = 1.217, f(b) = 1.949          HISTORY # after bracketing: f(a) = 2.256, f(beta) = 1.217, f(b) = 1.949         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.217   6       7.426                                           HISTORY # 2     1.105   4.039   5.134                                           HISTORY # 3     1.101   3.646   3.173                                           HISTORY # 4     1.101   3.624   2.78                                            HISTORY # 5     1.101   3.621   2.758                                           HISTORY # 6     1.101   3.622   0.003259                                        HISTORY # Converged to minimum: chi^2 = 1.101 at beta = 3.622                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.622               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.101   0.02832                                         HISTORY # 1     4       1.076   0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.897, beta = 3.622, b = 3.984                     HISTORY # after checking limits: a = 2.897, beta = 3.622, b = 3.984             HISTORY # starting values: f(a) = 1.086, f(beta) = 1.076, f(b) = 1.078          HISTORY # after bracketing: f(a) = 1.086, f(beta) = 1.076, f(b) = 1.078         HISTORY # Setting limits: 2.897 <= beta <= 3.984                                HISTORY # Starting with beta = 3.622                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.076   3.622   0.6389                                          HISTORY # 2     1.076   3.622   0.415                                           HISTORY # 3     1.076   3.622   0.244                                           HISTORY # 4     1.076   3.622   0.1585                                          HISTORY # 5     1.076   3.622   0.09321                                         HISTORY # 6     1.076   3.642   0.05284                                         HISTORY # Converged to minimum: chi^2 = 1.076 at beta = 3.642                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.69 / photometric redshift                           SED_TYPE=                    8 / SED template                                   MAG     =               27.087 / AB magnitude                                   MAG_ERR =                0.023 / AB magnitude error“ñk€lâ¿2JŸ[×P˜>þ»z"£ûr?5:ˆøž?R)œü¿2ì§~³¿[h‡<3„?>m…Á™Ñ¿B„—¦LÑÆ        ¿E’~:ò?3QÏ.¿›ó?TÝåœÇÄ]                ?QxÒél§À¿¶¾ÂB                        ?A	(yÁ’â                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        