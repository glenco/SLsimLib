SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.42891947591783 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.09882763624196 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 4230 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7640. / min(X) in image pixels                         XMAX    =                7682. / max(X) in image pixels                         YMIN    =                4795. / min(Y) in image pixels                         YMAX    =                4837. / min(Y) in image pixels                         CENTROID=   (7662.24, 4814.39) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 4230 found in the area (7652/4808) to (7669/4823)   HISTORY # Extending the area around object to (7640/4795) to (7682/4837)        HISTORY # Object 4205 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.038796, Centroid = (7662.24/4814.39) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.157, f(beta) = 1.12, f(b) = 1.133           HISTORY # after bracketing: f(a) = 1.157, f(beta) = 1.12, f(b) = 1.133          HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.12    5       6.044                                           HISTORY # 2     1.12    5       3.489                                           HISTORY # 3     1.12    5       2.309                                           HISTORY # 4     1.12    4.397   1.579                                           HISTORY # 5     1.119   4.237   0.9759                                          HISTORY # 6     1.119   4.254   0.1602                                          HISTORY # 7     1.119   4.254   0.07218                                         HISTORY # Converged to minimum: chi^2 = 1.119 at beta = 4.254                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 4.254               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.119   0.03373                                         HISTORY # 1     4       1.104   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 3.403, beta = 4.254, b = 4.68                      HISTORY # after checking limits: a = 3.403, beta = 4.254, b = 4.68              HISTORY # starting values: f(a) = 1.099, f(beta) = 1.104, f(b) = 1.107          HISTORY # after bracketing: f(a) = 1.116, f(beta) = 1.099, f(b) = 1.104         HISTORY # Setting limits: 2.269 <= beta <= 4.254                                HISTORY # Starting with beta = 3.403                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.099   3.403   1.284                                           HISTORY # 2     1.099   3.403   0.7583                                          HISTORY # 3     1.099   3.403   0.4905                                          HISTORY # 4     1.099   3.403   0.2897                                          HISTORY # 5     1.099   3.403   0.1874                                          HISTORY # 6     1.099   3.451   0.1241                                          HISTORY # 7     1.099   3.429   0.04742                                         HISTORY # Converged to minimum: chi^2 = 1.099 at beta = 3.429                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.15 / photometric redshift                           SED_TYPE=                   13 / SED template                                   MAG     =                28.92 / AB magnitude                                   MAG_ERR =                0.101 / AB magnitude errorjÉ>È¿1ª®onC¿:l€ŠQ¥?FvÝ9j0?B‹N«²Ò{¿*bPKÕq¿BÇÕ™é8Ë?+‚@–u	¿‡³ê,        ?@ÑÙÍÐ K?å“…äYÊ?QìÞÛ}nÕ                ¿8÷2õR%\¿8µ£Ò[^é                        ?P!s³h·‹                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        