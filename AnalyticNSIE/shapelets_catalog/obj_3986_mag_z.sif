SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      4.0416198463891 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16118562977005 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  770 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 3986 / object id in BASEFILE                          HIERARCH CLASSIFIER =       0. / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                1657. / min(X) in image pixels                         XMAX    =                1707. / max(X) in image pixels                         YMIN    =                4704. / min(Y) in image pixels                         YMAX    =                4754. / min(Y) in image pixels                         CENTROID=   (1681.54, 4730.43) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 3986 found in the area (1673/4716) to (1690/4741)   HISTORY # Extending the area around object to (1657/4704) to (1707/4754)        HISTORY # Object 3741 nearby, but not overlapping.                              HISTORY # Object 4056 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0934136, Centroid = (1681.54/4730.43)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 1.273, f(beta) = 1.186, f(b) = 1.183          HISTORY # after bracketing: f(a) = 1.186, f(beta) = 1.183, f(b) = 1.186         HISTORY # Setting limits: 6 <= beta <= 14.49                                    HISTORY # Starting with beta = 12                                               HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.18    9.708   6                                               HISTORY # 2     1.179   10.16   2.292                                           HISTORY # 3     1.179   10.13   0.454                                           HISTORY # 4     1.179   10.13   0.1914                                          HISTORY # 5     1.179   10.11   0.1623                                          HISTORY # 6     1.179   10.11   0.1383                                          HISTORY # 7     1.179   10.11   0.0003532                                       HISTORY # Converged to minimum: chi^2 = 1.179 at beta = 10.11                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 10.11               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.179   0.02832                                         HISTORY # 1     4       1.17    0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 8.087, beta = 10.11, b = 11.12                     HISTORY # after checking limits: a = 8.087, beta = 10.11, b = 11.12             HISTORY # starting values: f(a) = 1.169, f(beta) = 1.17, f(b) = 1.172           HISTORY # after bracketing: f(a) = 1.17, f(beta) = 1.162, f(b) = 1.166          HISTORY # Setting limits: 2.396 <= beta <= 5.391                                HISTORY # Starting with beta = 3.594                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.161   4.281   1.797                                           HISTORY # 2     1.161   4.042   0.6864                                          HISTORY # 3     1.161   4.042   0.452                                           HISTORY # 4     1.161   4.042   0.1755                                          HISTORY # Converged to minimum: chi^2 = 1.161 at beta = 4.042                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.48 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               28.402 / AB magnitude                                   MAG_ERR =                0.071 / AB magnitude errorqJ&?'?R≤m8‡b?Zﬂ Ä@◊øN8Àóxàø pÑµ|oBø!ﬁµ·ÿ?0íî|ièø-∑>n“D?P˚œ]Ó©        øP˘Œ?ë˝jø ˛x‘IøBÅ¥Æu´é                ø5h∫1[çøH–‚vhH∏                        ?=!Å'd|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        