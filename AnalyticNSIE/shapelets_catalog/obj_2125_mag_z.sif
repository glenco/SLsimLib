SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =      4.2091866374189 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1913817042487 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 2125 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                7044. / min(X) in image pixels                         XMAX    =                7078. / max(X) in image pixels                         YMIN    =                3571. / min(Y) in image pixels                         YMAX    =                3605. / min(Y) in image pixels                         CENTROID=   (7060.69, 3588.24) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 2125 found in the area (7056/3585) to (7065/3591)   HISTORY # Extending the area around object to (7044/3571) to (7078/3605)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0130173, Centroid = (7060.69/3588.24)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.237, f(beta) = 1.195, f(b) = 1.225          HISTORY # after bracketing: f(a) = 1.237, f(beta) = 1.195, f(b) = 1.225         HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.195   4       4.662                                           HISTORY # 2     1.194   2.803   3.134                                           HISTORY # 3     1.193   3.249   1.197                                           HISTORY # 4     1.193   3.249   0.7746                                          HISTORY # 5     1.193   3.249   0.3108                                          HISTORY # 6     1.193   3.249   0.2867                                          HISTORY # 7     1.193   3.359   0.2867                                          HISTORY # 8     1.193   3.323   0.1095                                          HISTORY # 9     1.193   3.323   0.03637                                         HISTORY # Converged to minimum: chi^2 = 1.193 at beta = 3.323                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.323               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.193   0.0417                                          HISTORY # 1     4       1.192   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.659, beta = 3.323, b = 3.656                     HISTORY # after checking limits: a = 2.659, beta = 3.323, b = 3.656             HISTORY # starting values: f(a) = 1.194, f(beta) = 1.192, f(b) = 1.192          HISTORY # after bracketing: f(a) = 1.192, f(beta) = 1.192, f(b) = 1.199         HISTORY # Setting limits: 3.323 <= beta <= 5.484                                HISTORY # Starting with beta = 3.656                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.191   4.354   1.828                                           HISTORY # 2     1.191   4.158   0.6982                                          HISTORY # 3     1.191   4.158   0.1987                                          HISTORY # 4     1.191   4.233   0.1961                                          HISTORY # 5     1.191   4.207   0.07492                                         HISTORY # 6     1.191   4.209   0.0255                                          HISTORY # Converged to minimum: chi^2 = 1.191 at beta = 4.209                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.66 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               29.836 / AB magnitude                                   MAG_ERR =                0.131 / AB magnitude error`e®Ç¶ÙÃ¿mo®\œ¿YoÕ{<Ú¿öSÓØ?G‘Y™•’×?9ýg¼òF±¾ß¹Ó#jL.¿„—ü Ãƒ?,ÿú÷hû        ¿6>zØñ(s¾Ë¹b‘tê?Ujþê                ?J}”†Ãà!¿4.ue¾ð                        ¿±¯ó×þ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        