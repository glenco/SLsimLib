SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.11716413552584 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14661578432584 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6427 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6169. / min(X) in image pixels                         XMAX    =                6213. / max(X) in image pixels                         YMIN    =                5912. / min(Y) in image pixels                         YMAX    =                5956. / min(Y) in image pixels                         CENTROID=    (6189.85, 5933.6) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6427 found in the area (6181/5928) to (6201/5939)   HISTORY # Extending the area around object to (6169/5912) to (6213/5956)        HISTORY # Object 9632 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0833972, Centroid = (6189.85/5933.6) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.411, f(beta) = 1.43, f(b) = 1.89            HISTORY # after bracketing: f(a) = 1.43, f(beta) = 1.411, f(b) = 1.43           HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.203   2.445   4.134                                           HISTORY # 2     1.198   2.278   1.579                                           HISTORY # 3     1.198   2.243   1.412                                           HISTORY # 4     1.198   2.243   0.5608                                          HISTORY # 5     1.197   2.061   0.5259                                          HISTORY # 6     1.197   2.096   0.1819                                          HISTORY # 7     1.197   2.101   0.1465                                          HISTORY # 8     1.197   2.1     0.005052                                        HISTORY # Converged to minimum: chi^2 = 1.197 at beta = 2.1                     HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.1                 HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.197   0.03219                                         HISTORY # 1     4       1.147   0.03227                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.68, beta = 2.1, b = 2.31                         HISTORY # after checking limits: a = 1.68, beta = 2.1, b = 2.31                 HISTORY # starting values: f(a) = 1.162, f(beta) = 1.147, f(b) = 1.148          HISTORY # after bracketing: f(a) = 1.162, f(beta) = 1.147, f(b) = 1.148         HISTORY # Setting limits: 1.68 <= beta <= 2.31                                  HISTORY # Starting with beta = 2.1                                              HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.147   2.1     0.3704                                          HISTORY # 2     1.147   2.1     0.2406                                          HISTORY # 3     1.147   2.1     0.1415                                          HISTORY # 4     1.147   2.13    0.0802                                          HISTORY # 5     1.147   2.117   0.03064                                         HISTORY # Converged to minimum: chi^2 = 1.147 at beta = 2.117                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.05 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               28.008 / AB magnitude                                   MAG_ERR =                0.038 / AB magnitude errorâi‰ÓqÈn?/*‚ùèáøV‡@SŒj?5—5Fl0?Q¿"”Ü\™?:äA–?!ø>uïÙÔÒ?%ù02&∏Ã?=ÿy€ÅÇ˛        ?Q	ﬁX;bø>
[e£è?U2ß|C˛N                øS ªë±h>˝Ç7 ‰Å,                        ?\’Ö/%7%                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        