SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     3.35268486801659 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13499812322631 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                  461 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4240. / min(X) in image pixels                         XMAX    =                4290. / max(X) in image pixels                         YMIN    =                1957. / min(Y) in image pixels                         YMAX    =                2007. / min(Y) in image pixels                         CENTROID=   (4264.85, 1982.11) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 461 found in the area (4252/1971) to (4277/1993)    HISTORY # Extending the area around object to (4240/1957) to (4290/2007)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.338731, Centroid = (4264.85/1982.11) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 6, b = 12                            HISTORY # after checking limits: a = 0.866, beta = 6, b = 12                    HISTORY # starting values: f(a) = 3.631, f(beta) = 1.525, f(b) = 3.075          HISTORY # after bracketing: f(a) = 3.631, f(beta) = 1.525, f(b) = 3.075         HISTORY # Setting limits: 0.866 <= beta <= 12                                   HISTORY # Starting with beta = 6                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.525   6       7.426                                           HISTORY # 2     1.199   4.039   5.134                                           HISTORY # 3     1.199   4.039   3.173                                           HISTORY # 4     1.199   4.039   1.961                                           HISTORY # 5     1.172   3.576   1.212                                           HISTORY # 6     1.17    3.29    0.749                                           HISTORY # 7     1.169   3.388   0.2861                                          HISTORY # 8     1.169   3.396   0.1882                                          HISTORY # 9     1.169   3.392   0.008186                                        HISTORY # Converged to minimum: chi^2 = 1.169 at beta = 3.392                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 3.392               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.169   0.02832                                         HISTORY # 1     4       1.135   0.02837                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.714, beta = 3.392, b = 3.732                     HISTORY # after checking limits: a = 2.714, beta = 3.392, b = 3.732             HISTORY # starting values: f(a) = 1.144, f(beta) = 1.135, f(b) = 1.138          HISTORY # after bracketing: f(a) = 1.144, f(beta) = 1.135, f(b) = 1.138         HISTORY # Setting limits: 2.714 <= beta <= 3.732                                HISTORY # Starting with beta = 3.392                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.135   3.392   0.5984                                          HISTORY # 2     1.135   3.392   0.3887                                          HISTORY # 3     1.135   3.392   0.2286                                          HISTORY # 4     1.135   3.392   0.1485                                          HISTORY # 5     1.135   3.355   0.09899                                         HISTORY # 6     1.135   3.353   0.06118                                         HISTORY # Converged to minimum: chi^2 = 1.135 at beta = 3.353                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 1.33 / photometric redshift                           SED_TYPE=                   16 / SED template                                   MAG     =               26.738 / AB magnitude                                   MAG_ERR =                0.017 / AB magnitude errorõZvï¬løFD∫Ôµæ“ø6ùËÍc ?DãN!wä?Rì"‡I ø0ÿˆÈ–Ãøx À>aø0ge!(y>äB£Dç1˘        ?`‰—‚qJ√?@.îµÿh?`†0Éu¬Ë                ø5Ëä}lFø?.(Øà*„⁄                        ?J‡—7?E                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        