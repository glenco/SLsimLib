SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.24991444237737 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.24581533573895 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9720 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                4198. / min(X) in image pixels                         XMAX    =                4238. / max(X) in image pixels                         YMIN    =                8595. / min(Y) in image pixels                         YMAX    =                8635. / min(Y) in image pixels                         CENTROID=   (4216.61, 8614.83) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9720 found in the area (4210/8607) to (4225/8622)   HISTORY # Extending the area around object to (4198/8595) to (4238/8635)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0668786, Centroid = (4216.61/8614.83)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.667, f(beta) = 1.368, f(b) = 1.581          HISTORY # after bracketing: f(a) = 1.667, f(beta) = 1.368, f(b) = 1.581         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.368   5       6.044                                           HISTORY # 2     1.332   3.421   4.134                                           HISTORY # 3     1.291   2.445   2.555                                           HISTORY # 4     1.291   2.445   1.579                                           HISTORY # 5     1.291   2.445   0.9759                                          HISTORY # 6     1.291   2.215   0.6031                                          HISTORY # 7     1.29    2.321   0.2304                                          HISTORY # 8     1.29    2.321   0.1122                                          HISTORY # 9     1.29    2.321   0.04628                                         HISTORY # Converged to minimum: chi^2 = 1.29 at beta = 2.321                    HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.321               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.29    0.03542                                         HISTORY # 1     4       1.246   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.857, beta = 2.321, b = 2.553                     HISTORY # after checking limits: a = 1.857, beta = 2.321, b = 2.553             HISTORY # starting values: f(a) = 1.259, f(beta) = 1.246, f(b) = 1.25           HISTORY # after bracketing: f(a) = 1.259, f(beta) = 1.246, f(b) = 1.25          HISTORY # Setting limits: 1.857 <= beta <= 2.553                                HISTORY # Starting with beta = 2.321                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.246   2.321   0.4095                                          HISTORY # 2     1.246   2.321   0.266                                           HISTORY # 3     1.246   2.254   0.1773                                          HISTORY # 4     1.246   2.25    0.1096                                          HISTORY # 5     1.246   2.25    0.04412                                         HISTORY # Converged to minimum: chi^2 = 1.246 at beta = 2.25                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.44 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               28.234 / AB magnitude                                   MAG_ERR =                0.048 / AB magnitude error{òV9»√øAıó˝_M4?RBVE`‰`?EvPóJ©?	E$OπªñøS*
wµ?mπwU#*?C®(™>ΩÖ?/˝
r        ?fSƒúÆ˛`?D±æR-!–?WÑUåˆ                ?Z∫àË?0ÈÒùÁ+_                        ? ÉÆıÅ,H                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        