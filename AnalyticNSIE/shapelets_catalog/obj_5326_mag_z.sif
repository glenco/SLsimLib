SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.25843716452899 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =      1.1428067069242 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5326 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2124. / min(X) in image pixels                         XMAX    =                2166. / max(X) in image pixels                         YMIN    =                5354. / min(Y) in image pixels                         YMAX    =                5396. / min(Y) in image pixels                         CENTROID=    (2144.23, 5374.6) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5326 found in the area (2137/5366) to (2152/5383)   HISTORY # Extending the area around object to (2124/5354) to (2166/5396)        HISTORY # Object 5312 nearby, but not overlapping.                              HISTORY # Object 5030 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0944612, Centroid = (2144.23/5374.6) HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.33, f(beta) = 1.382, f(b) = 1.702           HISTORY # after bracketing: f(a) = 1.382, f(beta) = 1.33, f(b) = 1.382          HISTORY # Setting limits: 0.816 <= beta <= 5                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.183   2.445   4.134                                           HISTORY # 2     1.176   2.212   1.579                                           HISTORY # 3     1.175   2.164   1.346                                           HISTORY # 4     1.172   1.668   1.298                                           HISTORY # 5     1.171   1.794   0.4959                                          HISTORY # 6     1.171   1.794   0.1285                                          HISTORY # 7     1.171   1.794   0.05059                                         HISTORY # Converged to minimum: chi^2 = 1.171 at beta = 1.794                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.794               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.171   0.03373                                         HISTORY # 1     4       1.152   0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.436, beta = 1.794, b = 1.974                     HISTORY # after checking limits: a = 1.436, beta = 1.794, b = 1.974             HISTORY # starting values: f(a) = 1.169, f(beta) = 1.152, f(b) = 1.147          HISTORY # after bracketing: f(a) = 1.152, f(beta) = 1.147, f(b) = 1.163         HISTORY # Setting limits: 1.794 <= beta <= 2.961                                HISTORY # Starting with beta = 1.974                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.143   2.351   0.9869                                          HISTORY # 2     1.143   2.258   0.377                                           HISTORY # 3     1.143   2.258   0.09248                                         HISTORY # 4     1.143   2.258   0.03538                                         HISTORY # Converged to minimum: chi^2 = 1.143 at beta = 2.258                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.28 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               28.323 / AB magnitude                                   MAG_ERR =                0.047 / AB magnitude errorÖÜ4€é˝>Â›"{∆'øP¯æ®∂…íøë¨ë›?Dó˘¨RWø8cˇœë?W‰ùò÷?O—¿AWπø|f©õï        øCµˇ;m¸?IhÖ!˛o?Oop±ÒÂ                ?V‚ˆÑ…Ur?Ä≈ﬂB                        ?Dæl`·ºÏ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        