SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.25377939711192 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.32689923355112 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 6777 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3904. / min(X) in image pixels                         XMAX    =                3946. / max(X) in image pixels                         YMIN    =                6090. / min(Y) in image pixels                         YMAX    =                6132. / min(Y) in image pixels                         CENTROID=   (3925.99, 6110.57) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 6777 found in the area (3916/6105) to (3934/6117)   HISTORY # Extending the area around object to (3904/6090) to (3946/6132)        HISTORY # Object 6816 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0876481, Centroid = (3925.99/6110.57)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 2.214, f(beta) = 1.577, f(b) = 2.258          HISTORY # after bracketing: f(a) = 2.214, f(beta) = 1.577, f(b) = 2.258         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.577   5       6.044                                           HISTORY # 2     1.406   3.421   4.134                                           HISTORY # 3     1.364   2.445   2.555                                           HISTORY # 4     1.364   2.445   1.321                                           HISTORY # 5     1.364   2.445   0.7183                                          HISTORY # 6     1.361   2.587   0.3728                                          HISTORY # 7     1.361   2.587   0.1866                                          HISTORY # 8     1.361   2.587   0.09861                                         HISTORY # Converged to minimum: chi^2 = 1.361 at beta = 2.587                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 2.587               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.361   0.03373                                         HISTORY # 1     4       1.33    0.03382                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 2.07, beta = 2.587, b = 2.846                      HISTORY # after checking limits: a = 2.07, beta = 2.587, b = 2.846              HISTORY # starting values: f(a) = 1.328, f(beta) = 1.33, f(b) = 1.336           HISTORY # after bracketing: f(a) = 1.457, f(beta) = 1.328, f(b) = 1.33          HISTORY # Setting limits: 1.38 <= beta <= 2.587                                 HISTORY # Starting with beta = 2.07                                             HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.328   2.07    0.781                                           HISTORY # 2     1.327   2.268   0.5175                                          HISTORY # 3     1.327   2.268   0.373                                           HISTORY # 4     1.327   2.268   0.1753                                          HISTORY # 5     1.327   2.268   0.05318                                         HISTORY # 6     1.327   2.247   0.05318                                         HISTORY # 7     1.327   2.254   0.02031                                         HISTORY # Converged to minimum: chi^2 = 1.327 at beta = 2.254                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.39 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               27.661 / AB magnitude                                   MAG_ERR =                0.031 / AB magnitude erroråËÊOÎ‚ø<ÀÚÙ$ˇøZ¬Œ◊3?B»ˆ\òb±?W”∆ÿ¿ã]ø2•*‰ÁøD0ıÄ<Ó?‚&>€~ææ‹†¢µzCU        ?u?D[6æ˛∑ÂmáßPø+òˇ≠rº                ø∑∞?R}SøEÛ1πaó~                        ?`lÅ?¬ÛÌ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        