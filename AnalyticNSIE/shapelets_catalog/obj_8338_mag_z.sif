SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     1.69512448841935 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.14352614343428 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 8338 / object id in BASEFILE                          HIERARCH CLASSIFIER =       0. / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                3568. / min(X) in image pixels                         XMAX    =                3602. / max(X) in image pixels                         YMIN    =                7176. / min(Y) in image pixels                         YMAX    =                7210. / min(Y) in image pixels                         CENTROID=   (3584.58, 7193.95) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 8338 found in the area (3580/7188) to (3589/7198)   HISTORY # Extending the area around object to (3568/7176) to (3602/7210)        HISTORY # Object 8454 nearby, but not overlapping.                              HISTORY # Object 8448 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0316869, Centroid = (3584.58/7193.95)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.257, f(beta) = 1.17, f(b) = 1.316           HISTORY # after bracketing: f(a) = 1.257, f(beta) = 1.17, f(b) = 1.316          HISTORY # Setting limits: 0.866 <= beta <= 8                                    HISTORY # Starting with beta = 4                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.17    4       4.662                                           HISTORY # 2     1.149   2.803   3.134                                           HISTORY # 3     1.147   2.556   1.937                                           HISTORY # 4     1.146   1.911   1.69                                            HISTORY # 5     1.146   1.911   1.074                                           HISTORY # 6     1.146   1.911   0.4285                                          HISTORY # 7     1.146   1.911   0.399                                           HISTORY # 8     1.146   1.911   0.1524                                          HISTORY # 9     1.146   1.911   0.03361                                         HISTORY # Converged to minimum: chi^2 = 1.146 at beta = 1.911                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 1.911               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.146   0.0417                                          HISTORY # 1     4       1.145   0.04187                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 1.529, beta = 1.911, b = 2.102                     HISTORY # after checking limits: a = 1.529, beta = 1.911, b = 2.102             HISTORY # starting values: f(a) = 1.145, f(beta) = 1.145, f(b) = 1.146          HISTORY # after bracketing: f(a) = 1.145, f(beta) = 1.145, f(b) = 1.146         HISTORY # Setting limits: 1.529 <= beta <= 2.102                                HISTORY # Starting with beta = 1.911                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.144   1.765   0.3821                                          HISTORY # 2     1.144   1.675   0.2362                                          HISTORY # 3     1.144   1.683   0.09021                                         HISTORY # 4     1.144   1.683   0.03983                                         HISTORY # 5     1.144   1.695   0.03114                                         HISTORY # Converged to minimum: chi^2 = 1.144 at beta = 1.695                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 3.92 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =                28.91 / AB magnitude                                   MAG_ERR =                0.074 / AB magnitude errortéèŽÖP~?l`VwÕ?WÈ
ÖS¿3´Sßá<¿’ÙV–„}?;g†rÑK¿A³TB¯ø?§ÛP?Hú>E¥Ê        ?=žJ×ªñŠ¾ì«¥ŠûÐá?:h5¤•ä3                ?1]½Š˜g¿OÏ/)ØH                        ?<]n<Þ¾                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        