SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     2.45050625949192 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.13763085921832 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 7509 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5009. / min(X) in image pixels                         XMAX    =                5041. / max(X) in image pixels                         YMIN    =                6532. / min(Y) in image pixels                         YMAX    =                6564. / min(Y) in image pixels                         CENTROID=   (5023.48, 6546.43) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 7509 found in the area (5021/6544) to (5029/6551)   HISTORY # Extending the area around object to (5009/6532) to (5041/6564)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.00959169, Centroid = (5023.48/6546.43HISTORY )                                                                       HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.149, f(beta) = 1.15, f(b) = 1.157           HISTORY # after bracketing: f(a) = 1.15, f(beta) = 1.149, f(b) = 1.15           HISTORY # Setting limits: 0.826 <= beta <= 4                                    HISTORY # Starting with beta = 0.866                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.149   0.866   1.237                                           HISTORY # 2     1.149   0.866   0.4972                                          HISTORY # 3     1.149   1.041   0.4572                                          HISTORY # 4     1.149   1.041   0.2826                                          HISTORY # 5     1.148   0.974   0.1747                                          HISTORY # 6     1.148   0.974   0.1122                                          HISTORY # 7     1.148   0.974   0.04546                                         HISTORY # Converged to minimum: chi^2 = 1.148 at beta = 0.974                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 0.974               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.148   0.04432                                         HISTORY # 1     4       1.148   0.04452                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 0.7792, beta = 0.974, b = 1.071                    HISTORY # after checking limits: a = 1.118, beta = 2.627, b = 4.137             HISTORY # starting values: f(a) = 1.148, f(beta) = 1.138, f(b) = 1.147          HISTORY # after bracketing: f(a) = 1.148, f(beta) = 1.138, f(b) = 1.147         HISTORY # Setting limits: 1.118 <= beta <= 4.137                                HISTORY # Starting with beta = 2.627                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.138   2.627   2.086                                           HISTORY # 2     1.138   2.627   1.153                                           HISTORY # 3     1.138   2.407   0.5765                                          HISTORY # 4     1.138   2.462   0.2202                                          HISTORY # 5     1.138   2.453   0.05472                                         HISTORY # 6     1.138   2.451   0.04617                                         HISTORY # 7     1.138   2.45    0.04355                                         HISTORY # 8     1.138   2.451   0.0002273                                       HISTORY # Converged to minimum: chi^2 = 1.138 at beta = 2.451                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.04 / photometric redshift                           SED_TYPE=                   22 / SED template                                   MAG     =               30.761 / AB magnitude                                   MAG_ERR =                0.248 / AB magnitude erroréÛy6\?$ôr¬ÙÜ?#F>ÌTé:¿"ƒ‚€ó¿0Çˆ;`§ž?1 JýµÝ?Aûƒpe½Ä?3Ëî
´Š?.K¨Àë’¢        ¿&vf	@Æù?N6ùnD¹±?DH—W:IZ                ?6¼nÕã&$¿%cC!Í`™                        ?! »FÌ×ï                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        