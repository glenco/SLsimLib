SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     6.37023202617978 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.30222611164317 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5235 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                2093. / min(X) in image pixels                         XMAX    =                2129. / max(X) in image pixels                         YMIN    =                5296. / min(Y) in image pixels                         YMAX    =                5332. / min(Y) in image pixels                         CENTROID=   (2110.48, 5314.61) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5235 found in the area (2107/5308) to (2114/5319)   HISTORY # Extending the area around object to (2093/5296) to (2129/5332)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0108394, Centroid = (2110.48/5314.61)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 4, b = 8                             HISTORY # after checking limits: a = 0.866, beta = 4, b = 8                     HISTORY # starting values: f(a) = 1.339, f(beta) = 1.328, f(b) = 1.297          HISTORY # after bracketing: f(a) = 1.328, f(beta) = 1.297, f(b) = 1.328         HISTORY # Setting limits: 4 <= beta <= 10.43                                    HISTORY # Starting with beta = 8                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.297   8       3.96                                            HISTORY # 2     1.296   8.929   2.432                                           HISTORY # 3     1.296   8.929   1.556                                           HISTORY # 4     1.296   8.929   0.6266                                          HISTORY # 5     1.296   8.929   0.5742                                          HISTORY # 6     1.296   9.148   0.5742                                          HISTORY # 7     1.296   9.121   0.2193                                          HISTORY # 8     1.296   9.125   0.02767                                         HISTORY # Converged to minimum: chi^2 = 1.296 at beta = 9.125                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 9.125               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.296   0.03937                                         HISTORY # 1     4       1.303   0.03951                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 7.3, beta = 9.125, b = 10.04                       HISTORY # after checking limits: a = 7.3, beta = 7.675, b = 8.05                HISTORY # starting values: f(a) = 1.303, f(beta) = 1.303, f(b) = 1.303          HISTORY # after bracketing: f(a) = 1.305, f(beta) = 1.303, f(b) = 1.303         HISTORY # Setting limits: 4.866 <= beta <= 7.675                                HISTORY # Starting with beta = 7.3                                              HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.302   6.37    2.433                                           HISTORY # 2     1.302   6.37    1.674                                           HISTORY # 3     1.302   6.37    0.7446                                          HISTORY # 4     1.302   6.37    0.1702                                          HISTORY # Converged to minimum: chi^2 = 1.302 at beta = 6.37                    HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 0.28 / photometric redshift                           SED_TYPE=                   21 / SED template                                   MAG     =               30.574 / AB magnitude                                   MAG_ERR =                0.225 / AB magnitude error±+•ºÿ”?:g◊ûWâøQ™ØuJÉ?>{üÑéXø@uÙtá÷øOÖqSÀ‘ø8ºµn‘ø}s*î∏ø'Û§€æò        øUX3–E?EsEbuÿø=ÊÔj[ù•                ø1’≠€ΩIªø$≠(˜eèv                        ø˙øX‹”                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        