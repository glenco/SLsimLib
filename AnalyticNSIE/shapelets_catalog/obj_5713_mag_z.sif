SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     8.93731407756983 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.22199498108025 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  768 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 5713 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.05 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                5476. / min(X) in image pixels                         XMAX    =                5516. / max(X) in image pixels                         YMIN    =                5539. / min(Y) in image pixels                         YMAX    =                5579. / min(Y) in image pixels                         CENTROID=   (5494.85, 5558.45) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 5713 found in the area (5491/5551) to (5500/5567)   HISTORY # Extending the area around object to (5476/5539) to (5516/5579)        HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0251391, Centroid = (5494.85/5558.45)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.303, f(beta) = 1.235, f(b) = 1.255          HISTORY # after bracketing: f(a) = 1.303, f(beta) = 1.235, f(b) = 1.255         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.235   5       6.044                                           HISTORY # 2     1.235   5       3.489                                           HISTORY # 3     1.235   5       2.309                                           HISTORY # 4     1.235   5       1.333                                           HISTORY # 5     1.235   5       0.8818                                          HISTORY # 6     1.235   5       0.509                                           HISTORY # 7     1.235   5.106   0.2786                                          HISTORY # 8     1.235   5.065   0.1064                                          HISTORY # 9     1.235   5.064   0.06533                                         HISTORY # Converged to minimum: chi^2 = 1.235 at beta = 5.064                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 5.064               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.235   0.03542                                         HISTORY # 1     4       1.237   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.051, beta = 5.064, b = 5.571                     HISTORY # after checking limits: a = 4.051, beta = 5.064, b = 5.571             HISTORY # starting values: f(a) = 1.236, f(beta) = 1.237, f(b) = 1.236          HISTORY # after bracketing: f(a) = 1.236, f(beta) = 1.223, f(b) = 1.236         HISTORY # Setting limits: 5.571 <= beta <= 8.995                                HISTORY # Starting with beta = 8.356                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.223   8.356   1.703                                           HISTORY # 2     1.223   8.356   1.045                                           HISTORY # 3     1.223   8.6     0.6388                                          HISTORY # 4     1.222   8.751   0.3948                                          HISTORY # 5     1.222   8.844   0.244                                           HISTORY # 6     1.222   8.902   0.1508                                          HISTORY # 7     1.222   8.937   0.0932                                          HISTORY # Converged to minimum: chi^2 = 1.222 at beta = 8.937                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 4.88 / photometric redshift                           SED_TYPE=                   19 / SED template                                   MAG     =               29.133 / AB magnitude                                   MAG_ERR =                0.106 / AB magnitude errore∑ä5˙∫ø6èB∑´◊øIE´Õ? ¯2ÉDL?-°nò{õnø>˛íÒÛê?%tÄNË|Ω?w õK?!DDh≤        øWÃDˆU›ø(|Œ/t∂Ä?E¶∂>ês                ø`ù"Õ⁄qû?8*uéÂ3                        ?^¥D1xh                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        