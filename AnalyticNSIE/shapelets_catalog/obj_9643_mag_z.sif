SIMPLE  =                    T / file does conform to FITS standard             BITPIX  =                  -64 / number of bits per data pixel                  NAXIS   =                    2 / number of data axes                            NAXIS1  =                    5 / length of data axis 1                          NAXIS2  =                    5 / length of data axis 2                          EXTEND  =                    T / FITS dataset may contain extensions            COMMENT   FITS (Flexible Image Transport System) format is defined in 'AstronomyCOMMENT   and Astrophysics', volume 376, page 359; bibcode: 2001A&A...376..359H CREATOR = 'ShapeLens++'                                                         VERSION =                    1 / SIF version                                                                                                                            / Shapelet parameters  /                                                BETA    =     5.16301291341083 / scale size in pixel units                      DIM     =                    5 / dimensions in shapelet space (nmax+1)          CHI2    =     1.16781860537168 / decomposition quality                          ERRORS  =                    1 / whether coefficient errors are available       R       =                   0. / negative flux / positive flux                  FLAGS   =                  771 / extraction and decomposition flags             EXTNAME = '        '           / shapelet object name                           TAG     =                   0. / shapelet object tag                                    / Frame parameters     /                                                BASEFILE= 'h_udf_wfc_i_drz_img.fits' / originating data file                    ID      =                 9643 / object id in BASEFILE                          HIERARCH CLASSIFIER =     0.06 / object classifier                              HIERARCH NOISE_MEAN =       0. / mean of pixel noise                            HIERARCH NOISE_RMS =        0. / rms of pixel noise                             XMIN    =                6044. / min(X) in image pixels                         XMAX    =                6084. / max(X) in image pixels                         YMIN    =                8753. / min(Y) in image pixels                         YMAX    =                8793. / min(Y) in image pixels                         CENTROID=   (6064.15, 8773.72) / centroid position in image pixels                      / ShapeLensConfig parameters /                                          HIERARCH NOISEMODEL = 'WEIGHT  ' / noise model                                  HIERARCH NMAX_LOW =          0 / lower bound for n_max                          HIERARCH NMAX_HIGH =        24 / upper bound for n_max                          HIERARCH BETA_LOW =         0. / lower bound for beta                           HIERARCH REGULARIZE =        0 / whether regularization has been employed       HIERARCH REG_LIMIT =   1.0E-05 / demanded upper limit for R                     HIERARCH SAVE_UNREG =        1 / whether unregularized model is saved           HIERARCH ALLOW_FLATTENING =  1 / whether flattening of chi^2 is allowed         HIERARCH FILTER_SPURIOUS =   0 / whether spurious detection are removed         HIERARCH ADD_BORDER =     0.15 / amount of border around detected objects       HIERARCH MIN_PIXELS =       20 / minimum number of pixels for an object         HIERARCH MIN_THRESHOLD =  1.25 / threshold for MIN_PIXELS                       HIERARCH DETECT_THRESHOLD = 3. / detection threshold for objects                                                                                                HISTORY # Extracting Object 9643 found in the area (6058/8765) to (6069/8780)   HISTORY # Extending the area around object to (6044/8753) to (6084/8793)        HISTORY # Object 9770 nearby, but not overlapping.                              HISTORY # Segment:                                                              HISTORY # Setting catalog values: Flux = 0.0445035, Centroid = (6064.15/8773.72)HISTORY # Setting noise to (0) +- (0)                                           HISTORY , segmentation map and weight map                                       HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 2                                       HISTORY # initial setup: a = 0.866, beta = 5, b = 10                            HISTORY # after checking limits: a = 0.866, beta = 5, b = 10                    HISTORY # starting values: f(a) = 1.365, f(beta) = 1.244, f(b) = 1.274          HISTORY # after bracketing: f(a) = 1.365, f(beta) = 1.244, f(b) = 1.274         HISTORY # Setting limits: 0.866 <= beta <= 10                                   HISTORY # Starting with beta = 5                                                HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.241   6.91    5                                               HISTORY # 2     1.237   6.102   1.91                                            HISTORY # 3     1.237   6.102   1.106                                           HISTORY # 4     1.237   6.102   0.4245                                          HISTORY # 5     1.237   6.102   0.4211                                          HISTORY # 6     1.237   6.102   0.1608                                          HISTORY # 7     1.237   6.045   0.1608                                          HISTORY # 8     1.237   6.053   0.05721                                         HISTORY # Converged to minimum: chi^2 = 1.237 at beta = 6.053                   HISTORY #                                                                       HISTORY # Finding optimal decomposition order n_max, beta = 6.053               HISTORY # iter. n_max   chi^2   sigma(chi^2)                                    HISTORY # 1     2       1.237   0.03542                                         HISTORY # 1     4       1.176   0.03552                                         HISTORY # chi^2 becomes flat. Stopping search at n_max = 4.                     HISTORY #                                                                       HISTORY # Finding optimal beta, n_max = 4                                       HISTORY # initial setup: a = 4.842, beta = 6.053, b = 6.658                     HISTORY # after checking limits: a = 4.842, beta = 6.053, b = 6.658             HISTORY # starting values: f(a) = 1.17, f(beta) = 1.176, f(b) = 1.185           HISTORY # after bracketing: f(a) = 1.239, f(beta) = 1.17, f(b) = 1.176          HISTORY # Setting limits: 3.228 <= beta <= 6.053                                HISTORY # Starting with beta = 4.842                                            HISTORY # iter. chi^2   beta    delta(beta)                                     HISTORY # 1     1.17    4.842   1.827                                           HISTORY # 2     1.168   5.305   1.211                                           HISTORY # 3     1.168   5.15    0.4624                                          HISTORY # 4     1.168   5.171   0.155                                           HISTORY # 5     1.168   5.163   0.02147                                         HISTORY # Converged to minimum: chi^2 = 1.168 at beta = 5.163                   HISTORY #                                                                       HISTORY # Decomposition stopped before chi^2 = 1!                               HISTORY #                                                                       HISTORY # Computation time for decomposition: 0 seconds                         REDSHIFT=                 2.69 / photometric redshift                           SED_TYPE=                   15 / SED template                                   MAG     =               28.317 / AB magnitude                                   MAG_ERR =                0.059 / AB magnitude errorp’
\Çç?Y¸i1ÿlD?G›«s$MÆ?Z÷Ý? –˜?O
"#‘š¿*peb¶Ë¿\\85û‘¿RÍSnŽ®Ø¿WÀé{MS        ¿Z	Øä}¼†?;»i-¿Î D”K                ?6ƒnžá’<?N[ï‰oT                        ?QIìÇ³å                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        